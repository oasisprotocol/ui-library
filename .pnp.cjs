#!/usr/bin/env node
/* eslint-disable */
"use strict";

const RAW_RUNTIME_STATE =
'{\
  "__info": [\
    "This file is automatically generated. Do not touch it, or risk",\
    "your modifications being lost."\
  ],\
  "dependencyTreeRoots": [\
    {\
      "name": "theme-testing",\
      "reference": "workspace:."\
    }\
  ],\
  "enableTopLevelFallback": true,\
  "ignorePatternData": "(^(?:\\\\.yarn\\\\/sdks(?:\\\\/(?!\\\\.{1,2}(?:\\\\/|$))(?:(?:(?!(?:^|\\\\/)\\\\.{1,2}(?:\\\\/|$)).)*?)|$))$)",\
  "fallbackExclusionList": [\
    ["theme-testing", ["workspace:."]]\
  ],\
  "fallbackPool": [\
  ],\
  "packageRegistryData": [\
    [null, [\
      [null, {\
        "packageLocation": "./",\
        "packageDependencies": [\
          ["@eslint/js", "npm:9.23.0"],\
          ["@tailwindcss/vite", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:4.1.1"],\
          ["@types/react", "npm:19.1.0"],\
          ["@types/react-dom", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:19.1.1"],\
          ["@vitejs/plugin-react", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:4.3.4"],\
          ["eslint", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:9.23.0"],\
          ["eslint-plugin-react-hooks", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:5.2.0"],\
          ["eslint-plugin-react-refresh", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:0.4.19"],\
          ["globals", "npm:15.15.0"],\
          ["react", "npm:19.1.0"],\
          ["react-dom", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:19.1.0"],\
          ["tailwindcss", "npm:4.1.1"],\
          ["typescript", "patch:typescript@npm%3A5.7.3#optional!builtin<compat/typescript>::version=5.7.3&hash=e012d7"],\
          ["typescript-eslint", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:8.29.0"],\
          ["vite", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:6.2.5"]\
        ],\
        "linkType": "SOFT"\
      }]\
    ]],\
    ["@ampproject/remapping", [\
      ["npm:2.3.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@ampproject-remapping-npm-2.3.0-559c14eee4-10c0.zip/node_modules/@ampproject/remapping/",\
        "packageDependencies": [\
          ["@ampproject/remapping", "npm:2.3.0"],\
          ["@jridgewell/gen-mapping", "npm:0.3.8"],\
          ["@jridgewell/trace-mapping", "npm:0.3.25"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@babel/code-frame", [\
      ["npm:7.26.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@babel-code-frame-npm-7.26.2-4902b56813-10c0.zip/node_modules/@babel/code-frame/",\
        "packageDependencies": [\
          ["@babel/code-frame", "npm:7.26.2"],\
          ["@babel/helper-validator-identifier", "npm:7.25.9"],\
          ["js-tokens", "npm:4.0.0"],\
          ["picocolors", "npm:1.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@babel/compat-data", [\
      ["npm:7.26.8", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@babel-compat-data-npm-7.26.8-fb802c4940-10c0.zip/node_modules/@babel/compat-data/",\
        "packageDependencies": [\
          ["@babel/compat-data", "npm:7.26.8"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@babel/core", [\
      ["npm:7.26.10", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@babel-core-npm-7.26.10-0b29e369b5-10c0.zip/node_modules/@babel/core/",\
        "packageDependencies": [\
          ["@babel/core", "npm:7.26.10"],\
          ["@ampproject/remapping", "npm:2.3.0"],\
          ["@babel/code-frame", "npm:7.26.2"],\
          ["@babel/generator", "npm:7.27.0"],\
          ["@babel/helper-compilation-targets", "npm:7.27.0"],\
          ["@babel/helper-module-transforms", "virtual:0b29e369b5cabceb66f4f9f7eb2bfea5004820a7141f28569a8c55dbecef082f3ef9191fa4288e8f13bbcfed9896b6f90431a16a9ce18c31d8a25782f02d5f09#npm:7.26.0"],\
          ["@babel/helpers", "npm:7.27.0"],\
          ["@babel/parser", "npm:7.27.0"],\
          ["@babel/template", "npm:7.27.0"],\
          ["@babel/traverse", "npm:7.27.0"],\
          ["@babel/types", "npm:7.27.0"],\
          ["convert-source-map", "npm:2.0.0"],\
          ["debug", "virtual:e376c6d25689d1413f13b759a5649fe969efab30320e886cab81ece2b6daf8c4c74f642faff7228a9a286b4b82bc7bac5773e45f1085910307cd111b19a8cd17#npm:4.4.0"],\
          ["gensync", "npm:1.0.0-beta.2"],\
          ["json5", "npm:2.2.3"],\
          ["semver", "npm:6.3.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@babel/generator", [\
      ["npm:7.27.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@babel-generator-npm-7.27.0-47f3db45ce-10c0.zip/node_modules/@babel/generator/",\
        "packageDependencies": [\
          ["@babel/generator", "npm:7.27.0"],\
          ["@babel/parser", "npm:7.27.0"],\
          ["@babel/types", "npm:7.27.0"],\
          ["@jridgewell/gen-mapping", "npm:0.3.8"],\
          ["@jridgewell/trace-mapping", "npm:0.3.25"],\
          ["jsesc", "npm:3.1.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@babel/helper-compilation-targets", [\
      ["npm:7.27.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@babel-helper-compilation-targets-npm-7.27.0-a682051943-10c0.zip/node_modules/@babel/helper-compilation-targets/",\
        "packageDependencies": [\
          ["@babel/helper-compilation-targets", "npm:7.27.0"],\
          ["@babel/compat-data", "npm:7.26.8"],\
          ["@babel/helper-validator-option", "npm:7.25.9"],\
          ["browserslist", "npm:4.24.4"],\
          ["lru-cache", "npm:5.1.1"],\
          ["semver", "npm:6.3.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@babel/helper-module-imports", [\
      ["npm:7.25.9", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@babel-helper-module-imports-npm-7.25.9-b86e31bde9-10c0.zip/node_modules/@babel/helper-module-imports/",\
        "packageDependencies": [\
          ["@babel/helper-module-imports", "npm:7.25.9"],\
          ["@babel/traverse", "npm:7.27.0"],\
          ["@babel/types", "npm:7.27.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@babel/helper-module-transforms", [\
      ["npm:7.26.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@babel-helper-module-transforms-npm-7.26.0-7557a3558f-10c0.zip/node_modules/@babel/helper-module-transforms/",\
        "packageDependencies": [\
          ["@babel/helper-module-transforms", "npm:7.26.0"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:0b29e369b5cabceb66f4f9f7eb2bfea5004820a7141f28569a8c55dbecef082f3ef9191fa4288e8f13bbcfed9896b6f90431a16a9ce18c31d8a25782f02d5f09#npm:7.26.0", {\
        "packageLocation": "./.yarn/__virtual__/@babel-helper-module-transforms-virtual-60af4713da/6/home/csillag/.yarn/berry/cache/@babel-helper-module-transforms-npm-7.26.0-7557a3558f-10c0.zip/node_modules/@babel/helper-module-transforms/",\
        "packageDependencies": [\
          ["@babel/helper-module-transforms", "virtual:0b29e369b5cabceb66f4f9f7eb2bfea5004820a7141f28569a8c55dbecef082f3ef9191fa4288e8f13bbcfed9896b6f90431a16a9ce18c31d8a25782f02d5f09#npm:7.26.0"],\
          ["@babel/core", "npm:7.26.10"],\
          ["@babel/helper-module-imports", "npm:7.25.9"],\
          ["@babel/helper-validator-identifier", "npm:7.25.9"],\
          ["@babel/traverse", "npm:7.27.0"],\
          ["@types/babel__core", null]\
        ],\
        "packagePeers": [\
          "@babel/core",\
          "@types/babel__core"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@babel/helper-plugin-utils", [\
      ["npm:7.26.5", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@babel-helper-plugin-utils-npm-7.26.5-f9c17c9880-10c0.zip/node_modules/@babel/helper-plugin-utils/",\
        "packageDependencies": [\
          ["@babel/helper-plugin-utils", "npm:7.26.5"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@babel/helper-string-parser", [\
      ["npm:7.25.9", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@babel-helper-string-parser-npm-7.25.9-eade578078-10c0.zip/node_modules/@babel/helper-string-parser/",\
        "packageDependencies": [\
          ["@babel/helper-string-parser", "npm:7.25.9"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@babel/helper-validator-identifier", [\
      ["npm:7.25.9", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@babel-helper-validator-identifier-npm-7.25.9-2634b947a4-10c0.zip/node_modules/@babel/helper-validator-identifier/",\
        "packageDependencies": [\
          ["@babel/helper-validator-identifier", "npm:7.25.9"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@babel/helper-validator-option", [\
      ["npm:7.25.9", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@babel-helper-validator-option-npm-7.25.9-6450027d5d-10c0.zip/node_modules/@babel/helper-validator-option/",\
        "packageDependencies": [\
          ["@babel/helper-validator-option", "npm:7.25.9"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@babel/helpers", [\
      ["npm:7.27.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@babel-helpers-npm-7.27.0-661e2983d3-10c0.zip/node_modules/@babel/helpers/",\
        "packageDependencies": [\
          ["@babel/helpers", "npm:7.27.0"],\
          ["@babel/template", "npm:7.27.0"],\
          ["@babel/types", "npm:7.27.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@babel/parser", [\
      ["npm:7.27.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@babel-parser-npm-7.27.0-ab7dea7b75-10c0.zip/node_modules/@babel/parser/",\
        "packageDependencies": [\
          ["@babel/parser", "npm:7.27.0"],\
          ["@babel/types", "npm:7.27.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@babel/plugin-transform-react-jsx-self", [\
      ["npm:7.25.9", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@babel-plugin-transform-react-jsx-self-npm-7.25.9-763ed3d4ff-10c0.zip/node_modules/@babel/plugin-transform-react-jsx-self/",\
        "packageDependencies": [\
          ["@babel/plugin-transform-react-jsx-self", "npm:7.25.9"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:3dd6240b6617835514206200afb3a1d7d215ab22150d9b5c542b1712d387074a8e5723c804b527b5e30007800bccbeec0e3ffc77571154520249e166006d693b#npm:7.25.9", {\
        "packageLocation": "./.yarn/__virtual__/@babel-plugin-transform-react-jsx-self-virtual-5a91c01057/6/home/csillag/.yarn/berry/cache/@babel-plugin-transform-react-jsx-self-npm-7.25.9-763ed3d4ff-10c0.zip/node_modules/@babel/plugin-transform-react-jsx-self/",\
        "packageDependencies": [\
          ["@babel/plugin-transform-react-jsx-self", "virtual:3dd6240b6617835514206200afb3a1d7d215ab22150d9b5c542b1712d387074a8e5723c804b527b5e30007800bccbeec0e3ffc77571154520249e166006d693b#npm:7.25.9"],\
          ["@babel/core", "npm:7.26.10"],\
          ["@babel/helper-plugin-utils", "npm:7.26.5"],\
          ["@types/babel__core", "npm:7.20.5"]\
        ],\
        "packagePeers": [\
          "@babel/core",\
          "@types/babel__core"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@babel/plugin-transform-react-jsx-source", [\
      ["npm:7.25.9", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@babel-plugin-transform-react-jsx-source-npm-7.25.9-c008c7a159-10c0.zip/node_modules/@babel/plugin-transform-react-jsx-source/",\
        "packageDependencies": [\
          ["@babel/plugin-transform-react-jsx-source", "npm:7.25.9"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:3dd6240b6617835514206200afb3a1d7d215ab22150d9b5c542b1712d387074a8e5723c804b527b5e30007800bccbeec0e3ffc77571154520249e166006d693b#npm:7.25.9", {\
        "packageLocation": "./.yarn/__virtual__/@babel-plugin-transform-react-jsx-source-virtual-94990640e6/6/home/csillag/.yarn/berry/cache/@babel-plugin-transform-react-jsx-source-npm-7.25.9-c008c7a159-10c0.zip/node_modules/@babel/plugin-transform-react-jsx-source/",\
        "packageDependencies": [\
          ["@babel/plugin-transform-react-jsx-source", "virtual:3dd6240b6617835514206200afb3a1d7d215ab22150d9b5c542b1712d387074a8e5723c804b527b5e30007800bccbeec0e3ffc77571154520249e166006d693b#npm:7.25.9"],\
          ["@babel/core", "npm:7.26.10"],\
          ["@babel/helper-plugin-utils", "npm:7.26.5"],\
          ["@types/babel__core", "npm:7.20.5"]\
        ],\
        "packagePeers": [\
          "@babel/core",\
          "@types/babel__core"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@babel/template", [\
      ["npm:7.27.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@babel-template-npm-7.27.0-941c698259-10c0.zip/node_modules/@babel/template/",\
        "packageDependencies": [\
          ["@babel/template", "npm:7.27.0"],\
          ["@babel/code-frame", "npm:7.26.2"],\
          ["@babel/parser", "npm:7.27.0"],\
          ["@babel/types", "npm:7.27.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@babel/traverse", [\
      ["npm:7.27.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@babel-traverse-npm-7.27.0-e376c6d256-10c0.zip/node_modules/@babel/traverse/",\
        "packageDependencies": [\
          ["@babel/traverse", "npm:7.27.0"],\
          ["@babel/code-frame", "npm:7.26.2"],\
          ["@babel/generator", "npm:7.27.0"],\
          ["@babel/parser", "npm:7.27.0"],\
          ["@babel/template", "npm:7.27.0"],\
          ["@babel/types", "npm:7.27.0"],\
          ["debug", "virtual:e376c6d25689d1413f13b759a5649fe969efab30320e886cab81ece2b6daf8c4c74f642faff7228a9a286b4b82bc7bac5773e45f1085910307cd111b19a8cd17#npm:4.4.0"],\
          ["globals", "npm:11.12.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@babel/types", [\
      ["npm:7.27.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@babel-types-npm-7.27.0-4fc27759e5-10c0.zip/node_modules/@babel/types/",\
        "packageDependencies": [\
          ["@babel/types", "npm:7.27.0"],\
          ["@babel/helper-string-parser", "npm:7.25.9"],\
          ["@babel/helper-validator-identifier", "npm:7.25.9"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/aix-ppc64", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-aix-ppc64-npm-0.25.2-d153dee00a/node_modules/@esbuild/aix-ppc64/",\
        "packageDependencies": [\
          ["@esbuild/aix-ppc64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/android-arm", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-android-arm-npm-0.25.2-8a0fb31cf3/node_modules/@esbuild/android-arm/",\
        "packageDependencies": [\
          ["@esbuild/android-arm", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/android-arm64", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-android-arm64-npm-0.25.2-2ee5801450/node_modules/@esbuild/android-arm64/",\
        "packageDependencies": [\
          ["@esbuild/android-arm64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/android-x64", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-android-x64-npm-0.25.2-a36f236ae6/node_modules/@esbuild/android-x64/",\
        "packageDependencies": [\
          ["@esbuild/android-x64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/darwin-arm64", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-darwin-arm64-npm-0.25.2-db3ebc4e25/node_modules/@esbuild/darwin-arm64/",\
        "packageDependencies": [\
          ["@esbuild/darwin-arm64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/darwin-x64", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-darwin-x64-npm-0.25.2-773ae600e1/node_modules/@esbuild/darwin-x64/",\
        "packageDependencies": [\
          ["@esbuild/darwin-x64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/freebsd-arm64", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-freebsd-arm64-npm-0.25.2-63abdf60f0/node_modules/@esbuild/freebsd-arm64/",\
        "packageDependencies": [\
          ["@esbuild/freebsd-arm64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/freebsd-x64", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-freebsd-x64-npm-0.25.2-8e48afe772/node_modules/@esbuild/freebsd-x64/",\
        "packageDependencies": [\
          ["@esbuild/freebsd-x64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/linux-arm", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-linux-arm-npm-0.25.2-d6b5564deb/node_modules/@esbuild/linux-arm/",\
        "packageDependencies": [\
          ["@esbuild/linux-arm", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/linux-arm64", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-linux-arm64-npm-0.25.2-6839dd4fa3/node_modules/@esbuild/linux-arm64/",\
        "packageDependencies": [\
          ["@esbuild/linux-arm64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/linux-ia32", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-linux-ia32-npm-0.25.2-aafe2f8457/node_modules/@esbuild/linux-ia32/",\
        "packageDependencies": [\
          ["@esbuild/linux-ia32", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/linux-loong64", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-linux-loong64-npm-0.25.2-4e5140f3cb/node_modules/@esbuild/linux-loong64/",\
        "packageDependencies": [\
          ["@esbuild/linux-loong64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/linux-mips64el", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-linux-mips64el-npm-0.25.2-8ce6c5e5ce/node_modules/@esbuild/linux-mips64el/",\
        "packageDependencies": [\
          ["@esbuild/linux-mips64el", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/linux-ppc64", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-linux-ppc64-npm-0.25.2-9000e68a74/node_modules/@esbuild/linux-ppc64/",\
        "packageDependencies": [\
          ["@esbuild/linux-ppc64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/linux-riscv64", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-linux-riscv64-npm-0.25.2-32a12e2b8a/node_modules/@esbuild/linux-riscv64/",\
        "packageDependencies": [\
          ["@esbuild/linux-riscv64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/linux-s390x", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-linux-s390x-npm-0.25.2-8315809f87/node_modules/@esbuild/linux-s390x/",\
        "packageDependencies": [\
          ["@esbuild/linux-s390x", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/linux-x64", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-linux-x64-npm-0.25.2-7713427dc3/node_modules/@esbuild/linux-x64/",\
        "packageDependencies": [\
          ["@esbuild/linux-x64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/netbsd-arm64", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-netbsd-arm64-npm-0.25.2-c749c16372/node_modules/@esbuild/netbsd-arm64/",\
        "packageDependencies": [\
          ["@esbuild/netbsd-arm64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/netbsd-x64", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-netbsd-x64-npm-0.25.2-a2662e096b/node_modules/@esbuild/netbsd-x64/",\
        "packageDependencies": [\
          ["@esbuild/netbsd-x64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/openbsd-arm64", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-openbsd-arm64-npm-0.25.2-c7ef8fb039/node_modules/@esbuild/openbsd-arm64/",\
        "packageDependencies": [\
          ["@esbuild/openbsd-arm64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/openbsd-x64", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-openbsd-x64-npm-0.25.2-cb2f9f77b0/node_modules/@esbuild/openbsd-x64/",\
        "packageDependencies": [\
          ["@esbuild/openbsd-x64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/sunos-x64", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-sunos-x64-npm-0.25.2-d9dd668e48/node_modules/@esbuild/sunos-x64/",\
        "packageDependencies": [\
          ["@esbuild/sunos-x64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/win32-arm64", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-win32-arm64-npm-0.25.2-39f04871ed/node_modules/@esbuild/win32-arm64/",\
        "packageDependencies": [\
          ["@esbuild/win32-arm64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/win32-ia32", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-win32-ia32-npm-0.25.2-0b3b7dc698/node_modules/@esbuild/win32-ia32/",\
        "packageDependencies": [\
          ["@esbuild/win32-ia32", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@esbuild/win32-x64", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/@esbuild-win32-x64-npm-0.25.2-bdc4b96867/node_modules/@esbuild/win32-x64/",\
        "packageDependencies": [\
          ["@esbuild/win32-x64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@eslint-community/eslint-utils", [\
      ["npm:4.5.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@eslint-community-eslint-utils-npm-4.5.1-88d38a08f4-10c0.zip/node_modules/@eslint-community/eslint-utils/",\
        "packageDependencies": [\
          ["@eslint-community/eslint-utils", "npm:4.5.1"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:8af121e79383d579fc0b2e7cc1e4869861848005f6e5c56bf3c5831c6fd2103e244f51b4a4cddfc38763a669486f816e260c88846a9c6ef5f0e71a9c04c37673#npm:4.5.1", {\
        "packageLocation": "./.yarn/__virtual__/@eslint-community-eslint-utils-virtual-9d61ff6c5e/6/home/csillag/.yarn/berry/cache/@eslint-community-eslint-utils-npm-4.5.1-88d38a08f4-10c0.zip/node_modules/@eslint-community/eslint-utils/",\
        "packageDependencies": [\
          ["@eslint-community/eslint-utils", "virtual:8af121e79383d579fc0b2e7cc1e4869861848005f6e5c56bf3c5831c6fd2103e244f51b4a4cddfc38763a669486f816e260c88846a9c6ef5f0e71a9c04c37673#npm:4.5.1"],\
          ["@types/eslint", null],\
          ["eslint", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:9.23.0"],\
          ["eslint-visitor-keys", "npm:3.4.3"]\
        ],\
        "packagePeers": [\
          "@types/eslint",\
          "eslint"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@eslint-community/regexpp", [\
      ["npm:4.12.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@eslint-community-regexpp-npm-4.12.1-ef4ab5217e-10c0.zip/node_modules/@eslint-community/regexpp/",\
        "packageDependencies": [\
          ["@eslint-community/regexpp", "npm:4.12.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@eslint/config-array", [\
      ["npm:0.19.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@eslint-config-array-npm-0.19.2-9310e910a9-10c0.zip/node_modules/@eslint/config-array/",\
        "packageDependencies": [\
          ["@eslint/config-array", "npm:0.19.2"],\
          ["@eslint/object-schema", "npm:2.1.6"],\
          ["debug", "virtual:e376c6d25689d1413f13b759a5649fe969efab30320e886cab81ece2b6daf8c4c74f642faff7228a9a286b4b82bc7bac5773e45f1085910307cd111b19a8cd17#npm:4.4.0"],\
          ["minimatch", "npm:3.1.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@eslint/config-helpers", [\
      ["npm:0.2.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@eslint-config-helpers-npm-0.2.1-fb7508162a-10c0.zip/node_modules/@eslint/config-helpers/",\
        "packageDependencies": [\
          ["@eslint/config-helpers", "npm:0.2.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@eslint/core", [\
      ["npm:0.12.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@eslint-core-npm-0.12.0-38bccca4dd-10c0.zip/node_modules/@eslint/core/",\
        "packageDependencies": [\
          ["@eslint/core", "npm:0.12.0"],\
          ["@types/json-schema", "npm:7.0.15"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:0.13.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@eslint-core-npm-0.13.0-53447b33b9-10c0.zip/node_modules/@eslint/core/",\
        "packageDependencies": [\
          ["@eslint/core", "npm:0.13.0"],\
          ["@types/json-schema", "npm:7.0.15"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@eslint/eslintrc", [\
      ["npm:3.3.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@eslint-eslintrc-npm-3.3.1-c3967fc0c3-10c0.zip/node_modules/@eslint/eslintrc/",\
        "packageDependencies": [\
          ["@eslint/eslintrc", "npm:3.3.1"],\
          ["ajv", "npm:6.12.6"],\
          ["debug", "virtual:e376c6d25689d1413f13b759a5649fe969efab30320e886cab81ece2b6daf8c4c74f642faff7228a9a286b4b82bc7bac5773e45f1085910307cd111b19a8cd17#npm:4.4.0"],\
          ["espree", "npm:10.3.0"],\
          ["globals", "npm:14.0.0"],\
          ["ignore", "npm:5.3.2"],\
          ["import-fresh", "npm:3.3.1"],\
          ["js-yaml", "npm:4.1.0"],\
          ["minimatch", "npm:3.1.2"],\
          ["strip-json-comments", "npm:3.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@eslint/js", [\
      ["npm:9.23.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@eslint-js-npm-9.23.0-ca8750d312-10c0.zip/node_modules/@eslint/js/",\
        "packageDependencies": [\
          ["@eslint/js", "npm:9.23.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@eslint/object-schema", [\
      ["npm:2.1.6", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@eslint-object-schema-npm-2.1.6-a777ee59e8-10c0.zip/node_modules/@eslint/object-schema/",\
        "packageDependencies": [\
          ["@eslint/object-schema", "npm:2.1.6"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@eslint/plugin-kit", [\
      ["npm:0.2.8", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@eslint-plugin-kit-npm-0.2.8-b9d7e2ad65-10c0.zip/node_modules/@eslint/plugin-kit/",\
        "packageDependencies": [\
          ["@eslint/plugin-kit", "npm:0.2.8"],\
          ["@eslint/core", "npm:0.13.0"],\
          ["levn", "npm:0.4.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@humanfs/core", [\
      ["npm:0.19.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@humanfs-core-npm-0.19.1-e2e7aaeb6e-10c0.zip/node_modules/@humanfs/core/",\
        "packageDependencies": [\
          ["@humanfs/core", "npm:0.19.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@humanfs/node", [\
      ["npm:0.16.6", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@humanfs-node-npm-0.16.6-6ee2cad587-10c0.zip/node_modules/@humanfs/node/",\
        "packageDependencies": [\
          ["@humanfs/node", "npm:0.16.6"],\
          ["@humanfs/core", "npm:0.19.1"],\
          ["@humanwhocodes/retry", "npm:0.3.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@humanwhocodes/module-importer", [\
      ["npm:1.0.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@humanwhocodes-module-importer-npm-1.0.1-9d07ed2e4a-10c0.zip/node_modules/@humanwhocodes/module-importer/",\
        "packageDependencies": [\
          ["@humanwhocodes/module-importer", "npm:1.0.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@humanwhocodes/retry", [\
      ["npm:0.3.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@humanwhocodes-retry-npm-0.3.1-9d87bf92c6-10c0.zip/node_modules/@humanwhocodes/retry/",\
        "packageDependencies": [\
          ["@humanwhocodes/retry", "npm:0.3.1"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:0.4.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@humanwhocodes-retry-npm-0.4.2-78a05c1b69-10c0.zip/node_modules/@humanwhocodes/retry/",\
        "packageDependencies": [\
          ["@humanwhocodes/retry", "npm:0.4.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@isaacs/cliui", [\
      ["npm:8.0.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@isaacs-cliui-npm-8.0.2-f4364666d5-10c0.zip/node_modules/@isaacs/cliui/",\
        "packageDependencies": [\
          ["@isaacs/cliui", "npm:8.0.2"],\
          ["string-width", "npm:5.1.2"],\
          ["string-width-cjs", [\
            "string-width",\
            "npm:4.2.3"\
          ]],\
          ["strip-ansi", "npm:7.1.0"],\
          ["strip-ansi-cjs", [\
            "strip-ansi",\
            "npm:6.0.1"\
          ]],\
          ["wrap-ansi", "npm:8.1.0"],\
          ["wrap-ansi-cjs", [\
            "wrap-ansi",\
            "npm:7.0.0"\
          ]]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@isaacs/fs-minipass", [\
      ["npm:4.0.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@isaacs-fs-minipass-npm-4.0.1-677026e841-10c0.zip/node_modules/@isaacs/fs-minipass/",\
        "packageDependencies": [\
          ["@isaacs/fs-minipass", "npm:4.0.1"],\
          ["minipass", "npm:7.1.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@jridgewell/gen-mapping", [\
      ["npm:0.3.8", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@jridgewell-gen-mapping-npm-0.3.8-647be6e286-10c0.zip/node_modules/@jridgewell/gen-mapping/",\
        "packageDependencies": [\
          ["@jridgewell/gen-mapping", "npm:0.3.8"],\
          ["@jridgewell/set-array", "npm:1.2.1"],\
          ["@jridgewell/sourcemap-codec", "npm:1.5.0"],\
          ["@jridgewell/trace-mapping", "npm:0.3.25"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@jridgewell/resolve-uri", [\
      ["npm:3.1.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@jridgewell-resolve-uri-npm-3.1.2-5bc4245992-10c0.zip/node_modules/@jridgewell/resolve-uri/",\
        "packageDependencies": [\
          ["@jridgewell/resolve-uri", "npm:3.1.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@jridgewell/set-array", [\
      ["npm:1.2.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@jridgewell-set-array-npm-1.2.1-2312928209-10c0.zip/node_modules/@jridgewell/set-array/",\
        "packageDependencies": [\
          ["@jridgewell/set-array", "npm:1.2.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@jridgewell/sourcemap-codec", [\
      ["npm:1.5.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@jridgewell-sourcemap-codec-npm-1.5.0-dfd9126d71-10c0.zip/node_modules/@jridgewell/sourcemap-codec/",\
        "packageDependencies": [\
          ["@jridgewell/sourcemap-codec", "npm:1.5.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@jridgewell/trace-mapping", [\
      ["npm:0.3.25", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@jridgewell-trace-mapping-npm-0.3.25-c076fd2279-10c0.zip/node_modules/@jridgewell/trace-mapping/",\
        "packageDependencies": [\
          ["@jridgewell/trace-mapping", "npm:0.3.25"],\
          ["@jridgewell/resolve-uri", "npm:3.1.2"],\
          ["@jridgewell/sourcemap-codec", "npm:1.5.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@nodelib/fs.scandir", [\
      ["npm:2.1.5", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@nodelib-fs.scandir-npm-2.1.5-89c67370dd-10c0.zip/node_modules/@nodelib/fs.scandir/",\
        "packageDependencies": [\
          ["@nodelib/fs.scandir", "npm:2.1.5"],\
          ["@nodelib/fs.stat", "npm:2.0.5"],\
          ["run-parallel", "npm:1.2.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@nodelib/fs.stat", [\
      ["npm:2.0.5", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@nodelib-fs.stat-npm-2.0.5-01f4dd3030-10c0.zip/node_modules/@nodelib/fs.stat/",\
        "packageDependencies": [\
          ["@nodelib/fs.stat", "npm:2.0.5"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@nodelib/fs.walk", [\
      ["npm:1.2.8", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@nodelib-fs.walk-npm-1.2.8-b4a89da548-10c0.zip/node_modules/@nodelib/fs.walk/",\
        "packageDependencies": [\
          ["@nodelib/fs.walk", "npm:1.2.8"],\
          ["@nodelib/fs.scandir", "npm:2.1.5"],\
          ["fastq", "npm:1.19.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@npmcli/agent", [\
      ["npm:3.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@npmcli-agent-npm-3.0.0-169e79294f-10c0.zip/node_modules/@npmcli/agent/",\
        "packageDependencies": [\
          ["@npmcli/agent", "npm:3.0.0"],\
          ["agent-base", "npm:7.1.3"],\
          ["http-proxy-agent", "npm:7.0.2"],\
          ["https-proxy-agent", "npm:7.0.6"],\
          ["lru-cache", "npm:10.4.3"],\
          ["socks-proxy-agent", "npm:8.0.5"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@npmcli/fs", [\
      ["npm:4.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@npmcli-fs-npm-4.0.0-1d9cc8a27b-10c0.zip/node_modules/@npmcli/fs/",\
        "packageDependencies": [\
          ["@npmcli/fs", "npm:4.0.0"],\
          ["semver", "npm:7.7.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@pkgjs/parseargs", [\
      ["npm:0.11.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@pkgjs-parseargs-npm-0.11.0-cd2a3fe948-10c0.zip/node_modules/@pkgjs/parseargs/",\
        "packageDependencies": [\
          ["@pkgjs/parseargs", "npm:0.11.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-android-arm-eabi", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-android-arm-eabi-npm-4.39.0-896aaf182d/node_modules/@rollup/rollup-android-arm-eabi/",\
        "packageDependencies": [\
          ["@rollup/rollup-android-arm-eabi", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-android-arm64", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-android-arm64-npm-4.39.0-d581e4c958/node_modules/@rollup/rollup-android-arm64/",\
        "packageDependencies": [\
          ["@rollup/rollup-android-arm64", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-darwin-arm64", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-darwin-arm64-npm-4.39.0-1435990235/node_modules/@rollup/rollup-darwin-arm64/",\
        "packageDependencies": [\
          ["@rollup/rollup-darwin-arm64", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-darwin-x64", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-darwin-x64-npm-4.39.0-44f607dfcd/node_modules/@rollup/rollup-darwin-x64/",\
        "packageDependencies": [\
          ["@rollup/rollup-darwin-x64", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-freebsd-arm64", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-freebsd-arm64-npm-4.39.0-4c3a4ca7d6/node_modules/@rollup/rollup-freebsd-arm64/",\
        "packageDependencies": [\
          ["@rollup/rollup-freebsd-arm64", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-freebsd-x64", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-freebsd-x64-npm-4.39.0-7601674f0e/node_modules/@rollup/rollup-freebsd-x64/",\
        "packageDependencies": [\
          ["@rollup/rollup-freebsd-x64", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-linux-arm-gnueabihf", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-linux-arm-gnueabihf-npm-4.39.0-f1369d0412/node_modules/@rollup/rollup-linux-arm-gnueabihf/",\
        "packageDependencies": [\
          ["@rollup/rollup-linux-arm-gnueabihf", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-linux-arm-musleabihf", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-linux-arm-musleabihf-npm-4.39.0-3a462cb95b/node_modules/@rollup/rollup-linux-arm-musleabihf/",\
        "packageDependencies": [\
          ["@rollup/rollup-linux-arm-musleabihf", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-linux-arm64-gnu", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-linux-arm64-gnu-npm-4.39.0-27236e9d75/node_modules/@rollup/rollup-linux-arm64-gnu/",\
        "packageDependencies": [\
          ["@rollup/rollup-linux-arm64-gnu", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-linux-arm64-musl", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-linux-arm64-musl-npm-4.39.0-3f97a32aff/node_modules/@rollup/rollup-linux-arm64-musl/",\
        "packageDependencies": [\
          ["@rollup/rollup-linux-arm64-musl", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-linux-loongarch64-gnu", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-linux-loongarch64-gnu-npm-4.39.0-ed939b25d1/node_modules/@rollup/rollup-linux-loongarch64-gnu/",\
        "packageDependencies": [\
          ["@rollup/rollup-linux-loongarch64-gnu", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-linux-powerpc64le-gnu", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-linux-powerpc64le-gnu-npm-4.39.0-f59085a8fd/node_modules/@rollup/rollup-linux-powerpc64le-gnu/",\
        "packageDependencies": [\
          ["@rollup/rollup-linux-powerpc64le-gnu", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-linux-riscv64-gnu", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-linux-riscv64-gnu-npm-4.39.0-63962a47da/node_modules/@rollup/rollup-linux-riscv64-gnu/",\
        "packageDependencies": [\
          ["@rollup/rollup-linux-riscv64-gnu", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-linux-riscv64-musl", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-linux-riscv64-musl-npm-4.39.0-cf752e0642/node_modules/@rollup/rollup-linux-riscv64-musl/",\
        "packageDependencies": [\
          ["@rollup/rollup-linux-riscv64-musl", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-linux-s390x-gnu", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-linux-s390x-gnu-npm-4.39.0-2712a6bac3/node_modules/@rollup/rollup-linux-s390x-gnu/",\
        "packageDependencies": [\
          ["@rollup/rollup-linux-s390x-gnu", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-linux-x64-gnu", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-linux-x64-gnu-npm-4.39.0-7ddbec4184/node_modules/@rollup/rollup-linux-x64-gnu/",\
        "packageDependencies": [\
          ["@rollup/rollup-linux-x64-gnu", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-linux-x64-musl", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-linux-x64-musl-npm-4.39.0-b055735c92/node_modules/@rollup/rollup-linux-x64-musl/",\
        "packageDependencies": [\
          ["@rollup/rollup-linux-x64-musl", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-win32-arm64-msvc", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-win32-arm64-msvc-npm-4.39.0-43fb822d3d/node_modules/@rollup/rollup-win32-arm64-msvc/",\
        "packageDependencies": [\
          ["@rollup/rollup-win32-arm64-msvc", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-win32-ia32-msvc", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-win32-ia32-msvc-npm-4.39.0-37e536e634/node_modules/@rollup/rollup-win32-ia32-msvc/",\
        "packageDependencies": [\
          ["@rollup/rollup-win32-ia32-msvc", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@rollup/rollup-win32-x64-msvc", [\
      ["npm:4.39.0", {\
        "packageLocation": "./.yarn/unplugged/@rollup-rollup-win32-x64-msvc-npm-4.39.0-719e339567/node_modules/@rollup/rollup-win32-x64-msvc/",\
        "packageDependencies": [\
          ["@rollup/rollup-win32-x64-msvc", "npm:4.39.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@tailwindcss/node", [\
      ["npm:4.1.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@tailwindcss-node-npm-4.1.1-ac198819e7-10c0.zip/node_modules/@tailwindcss/node/",\
        "packageDependencies": [\
          ["@tailwindcss/node", "npm:4.1.1"],\
          ["enhanced-resolve", "npm:5.18.1"],\
          ["jiti", "npm:2.4.2"],\
          ["lightningcss", "npm:1.29.2"],\
          ["tailwindcss", "npm:4.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@tailwindcss/oxide", [\
      ["npm:4.1.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@tailwindcss-oxide-npm-4.1.1-9e022c197a-10c0.zip/node_modules/@tailwindcss/oxide/",\
        "packageDependencies": [\
          ["@tailwindcss/oxide", "npm:4.1.1"],\
          ["@tailwindcss/oxide-android-arm64", "npm:4.1.1"],\
          ["@tailwindcss/oxide-darwin-arm64", "npm:4.1.1"],\
          ["@tailwindcss/oxide-darwin-x64", "npm:4.1.1"],\
          ["@tailwindcss/oxide-freebsd-x64", "npm:4.1.1"],\
          ["@tailwindcss/oxide-linux-arm-gnueabihf", "npm:4.1.1"],\
          ["@tailwindcss/oxide-linux-arm64-gnu", "npm:4.1.1"],\
          ["@tailwindcss/oxide-linux-arm64-musl", "npm:4.1.1"],\
          ["@tailwindcss/oxide-linux-x64-gnu", "npm:4.1.1"],\
          ["@tailwindcss/oxide-linux-x64-musl", "npm:4.1.1"],\
          ["@tailwindcss/oxide-win32-arm64-msvc", "npm:4.1.1"],\
          ["@tailwindcss/oxide-win32-x64-msvc", "npm:4.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@tailwindcss/oxide-android-arm64", [\
      ["npm:4.1.1", {\
        "packageLocation": "./.yarn/unplugged/@tailwindcss-oxide-android-arm64-npm-4.1.1-553c930ed3/node_modules/@tailwindcss/oxide-android-arm64/",\
        "packageDependencies": [\
          ["@tailwindcss/oxide-android-arm64", "npm:4.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@tailwindcss/oxide-darwin-arm64", [\
      ["npm:4.1.1", {\
        "packageLocation": "./.yarn/unplugged/@tailwindcss-oxide-darwin-arm64-npm-4.1.1-383e34ace6/node_modules/@tailwindcss/oxide-darwin-arm64/",\
        "packageDependencies": [\
          ["@tailwindcss/oxide-darwin-arm64", "npm:4.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@tailwindcss/oxide-darwin-x64", [\
      ["npm:4.1.1", {\
        "packageLocation": "./.yarn/unplugged/@tailwindcss-oxide-darwin-x64-npm-4.1.1-fd87680faa/node_modules/@tailwindcss/oxide-darwin-x64/",\
        "packageDependencies": [\
          ["@tailwindcss/oxide-darwin-x64", "npm:4.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@tailwindcss/oxide-freebsd-x64", [\
      ["npm:4.1.1", {\
        "packageLocation": "./.yarn/unplugged/@tailwindcss-oxide-freebsd-x64-npm-4.1.1-59fb92bbb7/node_modules/@tailwindcss/oxide-freebsd-x64/",\
        "packageDependencies": [\
          ["@tailwindcss/oxide-freebsd-x64", "npm:4.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@tailwindcss/oxide-linux-arm-gnueabihf", [\
      ["npm:4.1.1", {\
        "packageLocation": "./.yarn/unplugged/@tailwindcss-oxide-linux-arm-gnueabihf-npm-4.1.1-0122980b20/node_modules/@tailwindcss/oxide-linux-arm-gnueabihf/",\
        "packageDependencies": [\
          ["@tailwindcss/oxide-linux-arm-gnueabihf", "npm:4.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@tailwindcss/oxide-linux-arm64-gnu", [\
      ["npm:4.1.1", {\
        "packageLocation": "./.yarn/unplugged/@tailwindcss-oxide-linux-arm64-gnu-npm-4.1.1-18d4a4942d/node_modules/@tailwindcss/oxide-linux-arm64-gnu/",\
        "packageDependencies": [\
          ["@tailwindcss/oxide-linux-arm64-gnu", "npm:4.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@tailwindcss/oxide-linux-arm64-musl", [\
      ["npm:4.1.1", {\
        "packageLocation": "./.yarn/unplugged/@tailwindcss-oxide-linux-arm64-musl-npm-4.1.1-f3558fa029/node_modules/@tailwindcss/oxide-linux-arm64-musl/",\
        "packageDependencies": [\
          ["@tailwindcss/oxide-linux-arm64-musl", "npm:4.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@tailwindcss/oxide-linux-x64-gnu", [\
      ["npm:4.1.1", {\
        "packageLocation": "./.yarn/unplugged/@tailwindcss-oxide-linux-x64-gnu-npm-4.1.1-f8eff696b2/node_modules/@tailwindcss/oxide-linux-x64-gnu/",\
        "packageDependencies": [\
          ["@tailwindcss/oxide-linux-x64-gnu", "npm:4.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@tailwindcss/oxide-linux-x64-musl", [\
      ["npm:4.1.1", {\
        "packageLocation": "./.yarn/unplugged/@tailwindcss-oxide-linux-x64-musl-npm-4.1.1-75b01264f3/node_modules/@tailwindcss/oxide-linux-x64-musl/",\
        "packageDependencies": [\
          ["@tailwindcss/oxide-linux-x64-musl", "npm:4.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@tailwindcss/oxide-win32-arm64-msvc", [\
      ["npm:4.1.1", {\
        "packageLocation": "./.yarn/unplugged/@tailwindcss-oxide-win32-arm64-msvc-npm-4.1.1-ff91743190/node_modules/@tailwindcss/oxide-win32-arm64-msvc/",\
        "packageDependencies": [\
          ["@tailwindcss/oxide-win32-arm64-msvc", "npm:4.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@tailwindcss/oxide-win32-x64-msvc", [\
      ["npm:4.1.1", {\
        "packageLocation": "./.yarn/unplugged/@tailwindcss-oxide-win32-x64-msvc-npm-4.1.1-8153362df0/node_modules/@tailwindcss/oxide-win32-x64-msvc/",\
        "packageDependencies": [\
          ["@tailwindcss/oxide-win32-x64-msvc", "npm:4.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@tailwindcss/vite", [\
      ["npm:4.1.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@tailwindcss-vite-npm-4.1.1-acd04139ab-10c0.zip/node_modules/@tailwindcss/vite/",\
        "packageDependencies": [\
          ["@tailwindcss/vite", "npm:4.1.1"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:4.1.1", {\
        "packageLocation": "./.yarn/__virtual__/@tailwindcss-vite-virtual-9a0d2b0756/6/home/csillag/.yarn/berry/cache/@tailwindcss-vite-npm-4.1.1-acd04139ab-10c0.zip/node_modules/@tailwindcss/vite/",\
        "packageDependencies": [\
          ["@tailwindcss/vite", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:4.1.1"],\
          ["@tailwindcss/node", "npm:4.1.1"],\
          ["@tailwindcss/oxide", "npm:4.1.1"],\
          ["@types/vite", null],\
          ["tailwindcss", "npm:4.1.1"],\
          ["vite", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:6.2.5"]\
        ],\
        "packagePeers": [\
          "@types/vite",\
          "vite"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@types/babel__core", [\
      ["npm:7.20.5", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@types-babel__core-npm-7.20.5-4d95f75eab-10c0.zip/node_modules/@types/babel__core/",\
        "packageDependencies": [\
          ["@types/babel__core", "npm:7.20.5"],\
          ["@babel/parser", "npm:7.27.0"],\
          ["@babel/types", "npm:7.27.0"],\
          ["@types/babel__generator", "npm:7.6.8"],\
          ["@types/babel__template", "npm:7.4.4"],\
          ["@types/babel__traverse", "npm:7.20.7"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@types/babel__generator", [\
      ["npm:7.6.8", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@types-babel__generator-npm-7.6.8-61be1197d9-10c0.zip/node_modules/@types/babel__generator/",\
        "packageDependencies": [\
          ["@types/babel__generator", "npm:7.6.8"],\
          ["@babel/types", "npm:7.27.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@types/babel__template", [\
      ["npm:7.4.4", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@types-babel__template-npm-7.4.4-f34eba762c-10c0.zip/node_modules/@types/babel__template/",\
        "packageDependencies": [\
          ["@types/babel__template", "npm:7.4.4"],\
          ["@babel/parser", "npm:7.27.0"],\
          ["@babel/types", "npm:7.27.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@types/babel__traverse", [\
      ["npm:7.20.7", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@types-babel__traverse-npm-7.20.7-06119f1d53-10c0.zip/node_modules/@types/babel__traverse/",\
        "packageDependencies": [\
          ["@types/babel__traverse", "npm:7.20.7"],\
          ["@babel/types", "npm:7.27.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@types/estree", [\
      ["npm:1.0.7", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@types-estree-npm-1.0.7-692605611f-10c0.zip/node_modules/@types/estree/",\
        "packageDependencies": [\
          ["@types/estree", "npm:1.0.7"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@types/json-schema", [\
      ["npm:7.0.15", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@types-json-schema-npm-7.0.15-fd16381786-10c0.zip/node_modules/@types/json-schema/",\
        "packageDependencies": [\
          ["@types/json-schema", "npm:7.0.15"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@types/react", [\
      ["npm:19.1.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@types-react-npm-19.1.0-fba5aaa1ad-10c0.zip/node_modules/@types/react/",\
        "packageDependencies": [\
          ["@types/react", "npm:19.1.0"],\
          ["csstype", "npm:3.1.3"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@types/react-dom", [\
      ["npm:19.1.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@types-react-dom-npm-19.1.1-7e295e943e-10c0.zip/node_modules/@types/react-dom/",\
        "packageDependencies": [\
          ["@types/react-dom", "npm:19.1.1"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:19.1.1", {\
        "packageLocation": "./.yarn/__virtual__/@types-react-dom-virtual-b5dbb40bcb/6/home/csillag/.yarn/berry/cache/@types-react-dom-npm-19.1.1-7e295e943e-10c0.zip/node_modules/@types/react-dom/",\
        "packageDependencies": [\
          ["@types/react-dom", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:19.1.1"],\
          ["@types/react", "npm:19.1.0"]\
        ],\
        "packagePeers": [\
          "@types/react"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@typescript-eslint/eslint-plugin", [\
      ["npm:8.29.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@typescript-eslint-eslint-plugin-npm-8.29.0-9227710d0b-10c0.zip/node_modules/@typescript-eslint/eslint-plugin/",\
        "packageDependencies": [\
          ["@typescript-eslint/eslint-plugin", "npm:8.29.0"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:3568de6a75ac6f5f2e2f2216d91582220e968d85ff0f0ce26526a2e1b977a68878e32cfcf6ab61950419b063c087319ad2a416acce2efb43eefd247332dc1342#npm:8.29.0", {\
        "packageLocation": "./.yarn/__virtual__/@typescript-eslint-eslint-plugin-virtual-661ba055b7/6/home/csillag/.yarn/berry/cache/@typescript-eslint-eslint-plugin-npm-8.29.0-9227710d0b-10c0.zip/node_modules/@typescript-eslint/eslint-plugin/",\
        "packageDependencies": [\
          ["@typescript-eslint/eslint-plugin", "virtual:3568de6a75ac6f5f2e2f2216d91582220e968d85ff0f0ce26526a2e1b977a68878e32cfcf6ab61950419b063c087319ad2a416acce2efb43eefd247332dc1342#npm:8.29.0"],\
          ["@eslint-community/regexpp", "npm:4.12.1"],\
          ["@types/eslint", null],\
          ["@types/typescript", null],\
          ["@types/typescript-eslint__parser", null],\
          ["@typescript-eslint/parser", "virtual:3568de6a75ac6f5f2e2f2216d91582220e968d85ff0f0ce26526a2e1b977a68878e32cfcf6ab61950419b063c087319ad2a416acce2efb43eefd247332dc1342#npm:8.29.0"],\
          ["@typescript-eslint/scope-manager", "npm:8.29.0"],\
          ["@typescript-eslint/type-utils", "virtual:661ba055b73d038ae542acf8be53ffdf78498c031ebbcbfc0f9911d8c9f78f45b340388fe624d0bb6de2e5e29b7b66909e8d976cea0fa5ceba0580ab1acc3d3a#npm:8.29.0"],\
          ["@typescript-eslint/utils", "virtual:3568de6a75ac6f5f2e2f2216d91582220e968d85ff0f0ce26526a2e1b977a68878e32cfcf6ab61950419b063c087319ad2a416acce2efb43eefd247332dc1342#npm:8.29.0"],\
          ["@typescript-eslint/visitor-keys", "npm:8.29.0"],\
          ["eslint", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:9.23.0"],\
          ["graphemer", "npm:1.4.0"],\
          ["ignore", "npm:5.3.2"],\
          ["natural-compare", "npm:1.4.0"],\
          ["ts-api-utils", "virtual:661ba055b73d038ae542acf8be53ffdf78498c031ebbcbfc0f9911d8c9f78f45b340388fe624d0bb6de2e5e29b7b66909e8d976cea0fa5ceba0580ab1acc3d3a#npm:2.1.0"],\
          ["typescript", "patch:typescript@npm%3A5.7.3#optional!builtin<compat/typescript>::version=5.7.3&hash=e012d7"]\
        ],\
        "packagePeers": [\
          "@types/eslint",\
          "@types/typescript-eslint__parser",\
          "@types/typescript",\
          "@typescript-eslint/parser",\
          "eslint",\
          "typescript"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@typescript-eslint/parser", [\
      ["npm:8.29.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@typescript-eslint-parser-npm-8.29.0-510bf7f523-10c0.zip/node_modules/@typescript-eslint/parser/",\
        "packageDependencies": [\
          ["@typescript-eslint/parser", "npm:8.29.0"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:3568de6a75ac6f5f2e2f2216d91582220e968d85ff0f0ce26526a2e1b977a68878e32cfcf6ab61950419b063c087319ad2a416acce2efb43eefd247332dc1342#npm:8.29.0", {\
        "packageLocation": "./.yarn/__virtual__/@typescript-eslint-parser-virtual-0794acbdda/6/home/csillag/.yarn/berry/cache/@typescript-eslint-parser-npm-8.29.0-510bf7f523-10c0.zip/node_modules/@typescript-eslint/parser/",\
        "packageDependencies": [\
          ["@typescript-eslint/parser", "virtual:3568de6a75ac6f5f2e2f2216d91582220e968d85ff0f0ce26526a2e1b977a68878e32cfcf6ab61950419b063c087319ad2a416acce2efb43eefd247332dc1342#npm:8.29.0"],\
          ["@types/eslint", null],\
          ["@types/typescript", null],\
          ["@typescript-eslint/scope-manager", "npm:8.29.0"],\
          ["@typescript-eslint/types", "npm:8.29.0"],\
          ["@typescript-eslint/typescript-estree", "virtual:df9f2fce472e81ef070fcac7a514602ff733fe5e07d03c6f9d18d332d29a1e3a190df644e601c605121841a6317ccfbfa3faf9b033719a0bee17e9a8978dc616#npm:8.29.0"],\
          ["@typescript-eslint/visitor-keys", "npm:8.29.0"],\
          ["debug", "virtual:e376c6d25689d1413f13b759a5649fe969efab30320e886cab81ece2b6daf8c4c74f642faff7228a9a286b4b82bc7bac5773e45f1085910307cd111b19a8cd17#npm:4.4.0"],\
          ["eslint", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:9.23.0"],\
          ["typescript", "patch:typescript@npm%3A5.7.3#optional!builtin<compat/typescript>::version=5.7.3&hash=e012d7"]\
        ],\
        "packagePeers": [\
          "@types/eslint",\
          "@types/typescript",\
          "eslint",\
          "typescript"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@typescript-eslint/scope-manager", [\
      ["npm:8.29.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@typescript-eslint-scope-manager-npm-8.29.0-6046e43075-10c0.zip/node_modules/@typescript-eslint/scope-manager/",\
        "packageDependencies": [\
          ["@typescript-eslint/scope-manager", "npm:8.29.0"],\
          ["@typescript-eslint/types", "npm:8.29.0"],\
          ["@typescript-eslint/visitor-keys", "npm:8.29.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@typescript-eslint/type-utils", [\
      ["npm:8.29.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@typescript-eslint-type-utils-npm-8.29.0-1674862818-10c0.zip/node_modules/@typescript-eslint/type-utils/",\
        "packageDependencies": [\
          ["@typescript-eslint/type-utils", "npm:8.29.0"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:661ba055b73d038ae542acf8be53ffdf78498c031ebbcbfc0f9911d8c9f78f45b340388fe624d0bb6de2e5e29b7b66909e8d976cea0fa5ceba0580ab1acc3d3a#npm:8.29.0", {\
        "packageLocation": "./.yarn/__virtual__/@typescript-eslint-type-utils-virtual-df9f2fce47/6/home/csillag/.yarn/berry/cache/@typescript-eslint-type-utils-npm-8.29.0-1674862818-10c0.zip/node_modules/@typescript-eslint/type-utils/",\
        "packageDependencies": [\
          ["@typescript-eslint/type-utils", "virtual:661ba055b73d038ae542acf8be53ffdf78498c031ebbcbfc0f9911d8c9f78f45b340388fe624d0bb6de2e5e29b7b66909e8d976cea0fa5ceba0580ab1acc3d3a#npm:8.29.0"],\
          ["@types/eslint", null],\
          ["@types/typescript", null],\
          ["@typescript-eslint/typescript-estree", "virtual:df9f2fce472e81ef070fcac7a514602ff733fe5e07d03c6f9d18d332d29a1e3a190df644e601c605121841a6317ccfbfa3faf9b033719a0bee17e9a8978dc616#npm:8.29.0"],\
          ["@typescript-eslint/utils", "virtual:3568de6a75ac6f5f2e2f2216d91582220e968d85ff0f0ce26526a2e1b977a68878e32cfcf6ab61950419b063c087319ad2a416acce2efb43eefd247332dc1342#npm:8.29.0"],\
          ["debug", "virtual:e376c6d25689d1413f13b759a5649fe969efab30320e886cab81ece2b6daf8c4c74f642faff7228a9a286b4b82bc7bac5773e45f1085910307cd111b19a8cd17#npm:4.4.0"],\
          ["eslint", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:9.23.0"],\
          ["ts-api-utils", "virtual:661ba055b73d038ae542acf8be53ffdf78498c031ebbcbfc0f9911d8c9f78f45b340388fe624d0bb6de2e5e29b7b66909e8d976cea0fa5ceba0580ab1acc3d3a#npm:2.1.0"],\
          ["typescript", "patch:typescript@npm%3A5.7.3#optional!builtin<compat/typescript>::version=5.7.3&hash=e012d7"]\
        ],\
        "packagePeers": [\
          "@types/eslint",\
          "@types/typescript",\
          "eslint",\
          "typescript"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@typescript-eslint/types", [\
      ["npm:8.29.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@typescript-eslint-types-npm-8.29.0-be9f1bbfb7-10c0.zip/node_modules/@typescript-eslint/types/",\
        "packageDependencies": [\
          ["@typescript-eslint/types", "npm:8.29.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@typescript-eslint/typescript-estree", [\
      ["npm:8.29.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@typescript-eslint-typescript-estree-npm-8.29.0-92fb2cc910-10c0.zip/node_modules/@typescript-eslint/typescript-estree/",\
        "packageDependencies": [\
          ["@typescript-eslint/typescript-estree", "npm:8.29.0"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:df9f2fce472e81ef070fcac7a514602ff733fe5e07d03c6f9d18d332d29a1e3a190df644e601c605121841a6317ccfbfa3faf9b033719a0bee17e9a8978dc616#npm:8.29.0", {\
        "packageLocation": "./.yarn/__virtual__/@typescript-eslint-typescript-estree-virtual-00f4d6d14c/6/home/csillag/.yarn/berry/cache/@typescript-eslint-typescript-estree-npm-8.29.0-92fb2cc910-10c0.zip/node_modules/@typescript-eslint/typescript-estree/",\
        "packageDependencies": [\
          ["@typescript-eslint/typescript-estree", "virtual:df9f2fce472e81ef070fcac7a514602ff733fe5e07d03c6f9d18d332d29a1e3a190df644e601c605121841a6317ccfbfa3faf9b033719a0bee17e9a8978dc616#npm:8.29.0"],\
          ["@types/typescript", null],\
          ["@typescript-eslint/types", "npm:8.29.0"],\
          ["@typescript-eslint/visitor-keys", "npm:8.29.0"],\
          ["debug", "virtual:e376c6d25689d1413f13b759a5649fe969efab30320e886cab81ece2b6daf8c4c74f642faff7228a9a286b4b82bc7bac5773e45f1085910307cd111b19a8cd17#npm:4.4.0"],\
          ["fast-glob", "npm:3.3.3"],\
          ["is-glob", "npm:4.0.3"],\
          ["minimatch", "npm:9.0.5"],\
          ["semver", "npm:7.7.1"],\
          ["ts-api-utils", "virtual:661ba055b73d038ae542acf8be53ffdf78498c031ebbcbfc0f9911d8c9f78f45b340388fe624d0bb6de2e5e29b7b66909e8d976cea0fa5ceba0580ab1acc3d3a#npm:2.1.0"],\
          ["typescript", "patch:typescript@npm%3A5.7.3#optional!builtin<compat/typescript>::version=5.7.3&hash=e012d7"]\
        ],\
        "packagePeers": [\
          "@types/typescript",\
          "typescript"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@typescript-eslint/utils", [\
      ["npm:8.29.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@typescript-eslint-utils-npm-8.29.0-ebf0886c15-10c0.zip/node_modules/@typescript-eslint/utils/",\
        "packageDependencies": [\
          ["@typescript-eslint/utils", "npm:8.29.0"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:3568de6a75ac6f5f2e2f2216d91582220e968d85ff0f0ce26526a2e1b977a68878e32cfcf6ab61950419b063c087319ad2a416acce2efb43eefd247332dc1342#npm:8.29.0", {\
        "packageLocation": "./.yarn/__virtual__/@typescript-eslint-utils-virtual-fe3fac5bc4/6/home/csillag/.yarn/berry/cache/@typescript-eslint-utils-npm-8.29.0-ebf0886c15-10c0.zip/node_modules/@typescript-eslint/utils/",\
        "packageDependencies": [\
          ["@typescript-eslint/utils", "virtual:3568de6a75ac6f5f2e2f2216d91582220e968d85ff0f0ce26526a2e1b977a68878e32cfcf6ab61950419b063c087319ad2a416acce2efb43eefd247332dc1342#npm:8.29.0"],\
          ["@eslint-community/eslint-utils", "virtual:8af121e79383d579fc0b2e7cc1e4869861848005f6e5c56bf3c5831c6fd2103e244f51b4a4cddfc38763a669486f816e260c88846a9c6ef5f0e71a9c04c37673#npm:4.5.1"],\
          ["@types/eslint", null],\
          ["@types/typescript", null],\
          ["@typescript-eslint/scope-manager", "npm:8.29.0"],\
          ["@typescript-eslint/types", "npm:8.29.0"],\
          ["@typescript-eslint/typescript-estree", "virtual:df9f2fce472e81ef070fcac7a514602ff733fe5e07d03c6f9d18d332d29a1e3a190df644e601c605121841a6317ccfbfa3faf9b033719a0bee17e9a8978dc616#npm:8.29.0"],\
          ["eslint", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:9.23.0"],\
          ["typescript", "patch:typescript@npm%3A5.7.3#optional!builtin<compat/typescript>::version=5.7.3&hash=e012d7"]\
        ],\
        "packagePeers": [\
          "@types/eslint",\
          "@types/typescript",\
          "eslint",\
          "typescript"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@typescript-eslint/visitor-keys", [\
      ["npm:8.29.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@typescript-eslint-visitor-keys-npm-8.29.0-e8a9b1561e-10c0.zip/node_modules/@typescript-eslint/visitor-keys/",\
        "packageDependencies": [\
          ["@typescript-eslint/visitor-keys", "npm:8.29.0"],\
          ["@typescript-eslint/types", "npm:8.29.0"],\
          ["eslint-visitor-keys", "npm:4.2.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["@vitejs/plugin-react", [\
      ["npm:4.3.4", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/@vitejs-plugin-react-npm-4.3.4-e5f654de44-10c0.zip/node_modules/@vitejs/plugin-react/",\
        "packageDependencies": [\
          ["@vitejs/plugin-react", "npm:4.3.4"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:4.3.4", {\
        "packageLocation": "./.yarn/__virtual__/@vitejs-plugin-react-virtual-3dd6240b66/6/home/csillag/.yarn/berry/cache/@vitejs-plugin-react-npm-4.3.4-e5f654de44-10c0.zip/node_modules/@vitejs/plugin-react/",\
        "packageDependencies": [\
          ["@vitejs/plugin-react", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:4.3.4"],\
          ["@babel/core", "npm:7.26.10"],\
          ["@babel/plugin-transform-react-jsx-self", "virtual:3dd6240b6617835514206200afb3a1d7d215ab22150d9b5c542b1712d387074a8e5723c804b527b5e30007800bccbeec0e3ffc77571154520249e166006d693b#npm:7.25.9"],\
          ["@babel/plugin-transform-react-jsx-source", "virtual:3dd6240b6617835514206200afb3a1d7d215ab22150d9b5c542b1712d387074a8e5723c804b527b5e30007800bccbeec0e3ffc77571154520249e166006d693b#npm:7.25.9"],\
          ["@types/babel__core", "npm:7.20.5"],\
          ["@types/vite", null],\
          ["react-refresh", "npm:0.14.2"],\
          ["vite", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:6.2.5"]\
        ],\
        "packagePeers": [\
          "@types/vite",\
          "vite"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["abbrev", [\
      ["npm:3.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/abbrev-npm-3.0.0-946682a7b1-10c0.zip/node_modules/abbrev/",\
        "packageDependencies": [\
          ["abbrev", "npm:3.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["acorn", [\
      ["npm:8.14.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/acorn-npm-8.14.1-aee76ee752-10c0.zip/node_modules/acorn/",\
        "packageDependencies": [\
          ["acorn", "npm:8.14.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["acorn-jsx", [\
      ["npm:5.3.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/acorn-jsx-npm-5.3.2-d7594599ea-10c0.zip/node_modules/acorn-jsx/",\
        "packageDependencies": [\
          ["acorn-jsx", "npm:5.3.2"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:e5b10052f5b961a2f38f3edbfbbcd7baf074e555f688eaf63695fed94838b848c6291487952754e262c19f60bf34d659b71e3d5260e2ea073949e1b6269dc165#npm:5.3.2", {\
        "packageLocation": "./.yarn/__virtual__/acorn-jsx-virtual-64331c13be/6/home/csillag/.yarn/berry/cache/acorn-jsx-npm-5.3.2-d7594599ea-10c0.zip/node_modules/acorn-jsx/",\
        "packageDependencies": [\
          ["acorn-jsx", "virtual:e5b10052f5b961a2f38f3edbfbbcd7baf074e555f688eaf63695fed94838b848c6291487952754e262c19f60bf34d659b71e3d5260e2ea073949e1b6269dc165#npm:5.3.2"],\
          ["@types/acorn", null],\
          ["acorn", "npm:8.14.1"]\
        ],\
        "packagePeers": [\
          "@types/acorn",\
          "acorn"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["agent-base", [\
      ["npm:7.1.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/agent-base-npm-7.1.3-b2c16e72fb-10c0.zip/node_modules/agent-base/",\
        "packageDependencies": [\
          ["agent-base", "npm:7.1.3"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["ajv", [\
      ["npm:6.12.6", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/ajv-npm-6.12.6-4b5105e2b2-10c0.zip/node_modules/ajv/",\
        "packageDependencies": [\
          ["ajv", "npm:6.12.6"],\
          ["fast-deep-equal", "npm:3.1.3"],\
          ["fast-json-stable-stringify", "npm:2.1.0"],\
          ["json-schema-traverse", "npm:0.4.1"],\
          ["uri-js", "npm:4.4.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["ansi-regex", [\
      ["npm:5.0.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/ansi-regex-npm-5.0.1-c963a48615-10c0.zip/node_modules/ansi-regex/",\
        "packageDependencies": [\
          ["ansi-regex", "npm:5.0.1"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:6.1.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/ansi-regex-npm-6.1.0-abe011aae4-10c0.zip/node_modules/ansi-regex/",\
        "packageDependencies": [\
          ["ansi-regex", "npm:6.1.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["ansi-styles", [\
      ["npm:4.3.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/ansi-styles-npm-4.3.0-245c7d42c7-10c0.zip/node_modules/ansi-styles/",\
        "packageDependencies": [\
          ["ansi-styles", "npm:4.3.0"],\
          ["color-convert", "npm:2.0.1"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:6.2.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/ansi-styles-npm-6.2.1-d43647018c-10c0.zip/node_modules/ansi-styles/",\
        "packageDependencies": [\
          ["ansi-styles", "npm:6.2.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["argparse", [\
      ["npm:2.0.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/argparse-npm-2.0.1-faff7999e6-10c0.zip/node_modules/argparse/",\
        "packageDependencies": [\
          ["argparse", "npm:2.0.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["balanced-match", [\
      ["npm:1.0.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/balanced-match-npm-1.0.2-a53c126459-10c0.zip/node_modules/balanced-match/",\
        "packageDependencies": [\
          ["balanced-match", "npm:1.0.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["brace-expansion", [\
      ["npm:1.1.11", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/brace-expansion-npm-1.1.11-fb95eb05ad-10c0.zip/node_modules/brace-expansion/",\
        "packageDependencies": [\
          ["brace-expansion", "npm:1.1.11"],\
          ["balanced-match", "npm:1.0.2"],\
          ["concat-map", "npm:0.0.1"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:2.0.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/brace-expansion-npm-2.0.1-17aa2616f9-10c0.zip/node_modules/brace-expansion/",\
        "packageDependencies": [\
          ["brace-expansion", "npm:2.0.1"],\
          ["balanced-match", "npm:1.0.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["braces", [\
      ["npm:3.0.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/braces-npm-3.0.3-582c14023c-10c0.zip/node_modules/braces/",\
        "packageDependencies": [\
          ["braces", "npm:3.0.3"],\
          ["fill-range", "npm:7.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["browserslist", [\
      ["npm:4.24.4", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/browserslist-npm-4.24.4-2fdeb5face-10c0.zip/node_modules/browserslist/",\
        "packageDependencies": [\
          ["browserslist", "npm:4.24.4"],\
          ["caniuse-lite", "npm:1.0.30001709"],\
          ["electron-to-chromium", "npm:1.5.130"],\
          ["node-releases", "npm:2.0.19"],\
          ["update-browserslist-db", "virtual:2fdeb5face9914bb5fd94c70f084d153c80d2f09e5aabee010e4220b248dc23fca8f73c7beed0195e45ae6e2b1cb25388f709d7bfc4f00e473d573887faf4e5c#npm:1.1.3"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["cacache", [\
      ["npm:19.0.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/cacache-npm-19.0.1-395cba1936-10c0.zip/node_modules/cacache/",\
        "packageDependencies": [\
          ["cacache", "npm:19.0.1"],\
          ["@npmcli/fs", "npm:4.0.0"],\
          ["fs-minipass", "npm:3.0.3"],\
          ["glob", "npm:10.4.5"],\
          ["lru-cache", "npm:10.4.3"],\
          ["minipass", "npm:7.1.2"],\
          ["minipass-collect", "npm:2.0.1"],\
          ["minipass-flush", "npm:1.0.5"],\
          ["minipass-pipeline", "npm:1.2.4"],\
          ["p-map", "npm:7.0.3"],\
          ["ssri", "npm:12.0.0"],\
          ["tar", "npm:7.4.3"],\
          ["unique-filename", "npm:4.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["callsites", [\
      ["npm:3.1.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/callsites-npm-3.1.0-268f989910-10c0.zip/node_modules/callsites/",\
        "packageDependencies": [\
          ["callsites", "npm:3.1.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["caniuse-lite", [\
      ["npm:1.0.30001709", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/caniuse-lite-npm-1.0.30001709-3f1ef31824-10c0.zip/node_modules/caniuse-lite/",\
        "packageDependencies": [\
          ["caniuse-lite", "npm:1.0.30001709"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["chalk", [\
      ["npm:4.1.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/chalk-npm-4.1.2-ba8b67ab80-10c0.zip/node_modules/chalk/",\
        "packageDependencies": [\
          ["chalk", "npm:4.1.2"],\
          ["ansi-styles", "npm:4.3.0"],\
          ["supports-color", "npm:7.2.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["chownr", [\
      ["npm:3.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/chownr-npm-3.0.0-5275e85d25-10c0.zip/node_modules/chownr/",\
        "packageDependencies": [\
          ["chownr", "npm:3.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["color-convert", [\
      ["npm:2.0.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/color-convert-npm-2.0.1-79730e935b-10c0.zip/node_modules/color-convert/",\
        "packageDependencies": [\
          ["color-convert", "npm:2.0.1"],\
          ["color-name", "npm:1.1.4"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["color-name", [\
      ["npm:1.1.4", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/color-name-npm-1.1.4-025792b0ea-10c0.zip/node_modules/color-name/",\
        "packageDependencies": [\
          ["color-name", "npm:1.1.4"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["concat-map", [\
      ["npm:0.0.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/concat-map-npm-0.0.1-85a921b7ee-10c0.zip/node_modules/concat-map/",\
        "packageDependencies": [\
          ["concat-map", "npm:0.0.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["convert-source-map", [\
      ["npm:2.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/convert-source-map-npm-2.0.0-7ab664dc4e-10c0.zip/node_modules/convert-source-map/",\
        "packageDependencies": [\
          ["convert-source-map", "npm:2.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["cross-spawn", [\
      ["npm:7.0.6", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/cross-spawn-npm-7.0.6-264bddf921-10c0.zip/node_modules/cross-spawn/",\
        "packageDependencies": [\
          ["cross-spawn", "npm:7.0.6"],\
          ["path-key", "npm:3.1.1"],\
          ["shebang-command", "npm:2.0.0"],\
          ["which", "npm:2.0.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["csstype", [\
      ["npm:3.1.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/csstype-npm-3.1.3-e9a1c85013-10c0.zip/node_modules/csstype/",\
        "packageDependencies": [\
          ["csstype", "npm:3.1.3"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["debug", [\
      ["npm:4.4.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/debug-npm-4.4.0-f6efe76023-10c0.zip/node_modules/debug/",\
        "packageDependencies": [\
          ["debug", "npm:4.4.0"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:e376c6d25689d1413f13b759a5649fe969efab30320e886cab81ece2b6daf8c4c74f642faff7228a9a286b4b82bc7bac5773e45f1085910307cd111b19a8cd17#npm:4.4.0", {\
        "packageLocation": "./.yarn/__virtual__/debug-virtual-ede0ef6c92/6/home/csillag/.yarn/berry/cache/debug-npm-4.4.0-f6efe76023-10c0.zip/node_modules/debug/",\
        "packageDependencies": [\
          ["debug", "virtual:e376c6d25689d1413f13b759a5649fe969efab30320e886cab81ece2b6daf8c4c74f642faff7228a9a286b4b82bc7bac5773e45f1085910307cd111b19a8cd17#npm:4.4.0"],\
          ["@types/supports-color", null],\
          ["ms", "npm:2.1.3"],\
          ["supports-color", null]\
        ],\
        "packagePeers": [\
          "@types/supports-color",\
          "supports-color"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["deep-is", [\
      ["npm:0.1.4", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/deep-is-npm-0.1.4-88938b5a67-10c0.zip/node_modules/deep-is/",\
        "packageDependencies": [\
          ["deep-is", "npm:0.1.4"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["detect-libc", [\
      ["npm:2.0.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/detect-libc-npm-2.0.3-2ddae34945-10c0.zip/node_modules/detect-libc/",\
        "packageDependencies": [\
          ["detect-libc", "npm:2.0.3"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["eastasianwidth", [\
      ["npm:0.2.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/eastasianwidth-npm-0.2.0-c37eb16bd1-10c0.zip/node_modules/eastasianwidth/",\
        "packageDependencies": [\
          ["eastasianwidth", "npm:0.2.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["electron-to-chromium", [\
      ["npm:1.5.130", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/electron-to-chromium-npm-1.5.130-2eebf935a5-10c0.zip/node_modules/electron-to-chromium/",\
        "packageDependencies": [\
          ["electron-to-chromium", "npm:1.5.130"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["emoji-regex", [\
      ["npm:8.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/emoji-regex-npm-8.0.0-213764015c-10c0.zip/node_modules/emoji-regex/",\
        "packageDependencies": [\
          ["emoji-regex", "npm:8.0.0"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:9.2.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/emoji-regex-npm-9.2.2-e6fac8d058-10c0.zip/node_modules/emoji-regex/",\
        "packageDependencies": [\
          ["emoji-regex", "npm:9.2.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["encoding", [\
      ["npm:0.1.13", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/encoding-npm-0.1.13-82a1837d30-10c0.zip/node_modules/encoding/",\
        "packageDependencies": [\
          ["encoding", "npm:0.1.13"],\
          ["iconv-lite", "npm:0.6.3"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["enhanced-resolve", [\
      ["npm:5.18.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/enhanced-resolve-npm-5.18.1-d16da9a150-10c0.zip/node_modules/enhanced-resolve/",\
        "packageDependencies": [\
          ["enhanced-resolve", "npm:5.18.1"],\
          ["graceful-fs", "npm:4.2.11"],\
          ["tapable", "npm:2.2.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["env-paths", [\
      ["npm:2.2.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/env-paths-npm-2.2.1-7c7577428c-10c0.zip/node_modules/env-paths/",\
        "packageDependencies": [\
          ["env-paths", "npm:2.2.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["err-code", [\
      ["npm:2.0.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/err-code-npm-2.0.3-082e0ff9a7-10c0.zip/node_modules/err-code/",\
        "packageDependencies": [\
          ["err-code", "npm:2.0.3"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["esbuild", [\
      ["npm:0.25.2", {\
        "packageLocation": "./.yarn/unplugged/esbuild-npm-0.25.2-1486e883dd/node_modules/esbuild/",\
        "packageDependencies": [\
          ["esbuild", "npm:0.25.2"],\
          ["@esbuild/aix-ppc64", "npm:0.25.2"],\
          ["@esbuild/android-arm", "npm:0.25.2"],\
          ["@esbuild/android-arm64", "npm:0.25.2"],\
          ["@esbuild/android-x64", "npm:0.25.2"],\
          ["@esbuild/darwin-arm64", "npm:0.25.2"],\
          ["@esbuild/darwin-x64", "npm:0.25.2"],\
          ["@esbuild/freebsd-arm64", "npm:0.25.2"],\
          ["@esbuild/freebsd-x64", "npm:0.25.2"],\
          ["@esbuild/linux-arm", "npm:0.25.2"],\
          ["@esbuild/linux-arm64", "npm:0.25.2"],\
          ["@esbuild/linux-ia32", "npm:0.25.2"],\
          ["@esbuild/linux-loong64", "npm:0.25.2"],\
          ["@esbuild/linux-mips64el", "npm:0.25.2"],\
          ["@esbuild/linux-ppc64", "npm:0.25.2"],\
          ["@esbuild/linux-riscv64", "npm:0.25.2"],\
          ["@esbuild/linux-s390x", "npm:0.25.2"],\
          ["@esbuild/linux-x64", "npm:0.25.2"],\
          ["@esbuild/netbsd-arm64", "npm:0.25.2"],\
          ["@esbuild/netbsd-x64", "npm:0.25.2"],\
          ["@esbuild/openbsd-arm64", "npm:0.25.2"],\
          ["@esbuild/openbsd-x64", "npm:0.25.2"],\
          ["@esbuild/sunos-x64", "npm:0.25.2"],\
          ["@esbuild/win32-arm64", "npm:0.25.2"],\
          ["@esbuild/win32-ia32", "npm:0.25.2"],\
          ["@esbuild/win32-x64", "npm:0.25.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["escalade", [\
      ["npm:3.2.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/escalade-npm-3.2.0-19b50dd48f-10c0.zip/node_modules/escalade/",\
        "packageDependencies": [\
          ["escalade", "npm:3.2.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["escape-string-regexp", [\
      ["npm:4.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/escape-string-regexp-npm-4.0.0-4b531d8d59-10c0.zip/node_modules/escape-string-regexp/",\
        "packageDependencies": [\
          ["escape-string-regexp", "npm:4.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["eslint", [\
      ["npm:9.23.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/eslint-npm-9.23.0-9413a450bf-10c0.zip/node_modules/eslint/",\
        "packageDependencies": [\
          ["eslint", "npm:9.23.0"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:9.23.0", {\
        "packageLocation": "./.yarn/__virtual__/eslint-virtual-8af121e793/6/home/csillag/.yarn/berry/cache/eslint-npm-9.23.0-9413a450bf-10c0.zip/node_modules/eslint/",\
        "packageDependencies": [\
          ["eslint", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:9.23.0"],\
          ["@eslint-community/eslint-utils", "virtual:8af121e79383d579fc0b2e7cc1e4869861848005f6e5c56bf3c5831c6fd2103e244f51b4a4cddfc38763a669486f816e260c88846a9c6ef5f0e71a9c04c37673#npm:4.5.1"],\
          ["@eslint-community/regexpp", "npm:4.12.1"],\
          ["@eslint/config-array", "npm:0.19.2"],\
          ["@eslint/config-helpers", "npm:0.2.1"],\
          ["@eslint/core", "npm:0.12.0"],\
          ["@eslint/eslintrc", "npm:3.3.1"],\
          ["@eslint/js", "npm:9.23.0"],\
          ["@eslint/plugin-kit", "npm:0.2.8"],\
          ["@humanfs/node", "npm:0.16.6"],\
          ["@humanwhocodes/module-importer", "npm:1.0.1"],\
          ["@humanwhocodes/retry", "npm:0.4.2"],\
          ["@types/estree", "npm:1.0.7"],\
          ["@types/jiti", null],\
          ["@types/json-schema", "npm:7.0.15"],\
          ["ajv", "npm:6.12.6"],\
          ["chalk", "npm:4.1.2"],\
          ["cross-spawn", "npm:7.0.6"],\
          ["debug", "virtual:e376c6d25689d1413f13b759a5649fe969efab30320e886cab81ece2b6daf8c4c74f642faff7228a9a286b4b82bc7bac5773e45f1085910307cd111b19a8cd17#npm:4.4.0"],\
          ["escape-string-regexp", "npm:4.0.0"],\
          ["eslint-scope", "npm:8.3.0"],\
          ["eslint-visitor-keys", "npm:4.2.0"],\
          ["espree", "npm:10.3.0"],\
          ["esquery", "npm:1.6.0"],\
          ["esutils", "npm:2.0.3"],\
          ["fast-deep-equal", "npm:3.1.3"],\
          ["file-entry-cache", "npm:8.0.0"],\
          ["find-up", "npm:5.0.0"],\
          ["glob-parent", "npm:6.0.2"],\
          ["ignore", "npm:5.3.2"],\
          ["imurmurhash", "npm:0.1.4"],\
          ["is-glob", "npm:4.0.3"],\
          ["jiti", null],\
          ["json-stable-stringify-without-jsonify", "npm:1.0.1"],\
          ["lodash.merge", "npm:4.6.2"],\
          ["minimatch", "npm:3.1.2"],\
          ["natural-compare", "npm:1.4.0"],\
          ["optionator", "npm:0.9.4"]\
        ],\
        "packagePeers": [\
          "@types/jiti",\
          "jiti"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["eslint-plugin-react-hooks", [\
      ["npm:5.2.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/eslint-plugin-react-hooks-npm-5.2.0-1c4af50caf-10c0.zip/node_modules/eslint-plugin-react-hooks/",\
        "packageDependencies": [\
          ["eslint-plugin-react-hooks", "npm:5.2.0"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:5.2.0", {\
        "packageLocation": "./.yarn/__virtual__/eslint-plugin-react-hooks-virtual-8c36bcd475/6/home/csillag/.yarn/berry/cache/eslint-plugin-react-hooks-npm-5.2.0-1c4af50caf-10c0.zip/node_modules/eslint-plugin-react-hooks/",\
        "packageDependencies": [\
          ["eslint-plugin-react-hooks", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:5.2.0"],\
          ["@types/eslint", null],\
          ["eslint", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:9.23.0"]\
        ],\
        "packagePeers": [\
          "@types/eslint",\
          "eslint"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["eslint-plugin-react-refresh", [\
      ["npm:0.4.19", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/eslint-plugin-react-refresh-npm-0.4.19-97911e7788-10c0.zip/node_modules/eslint-plugin-react-refresh/",\
        "packageDependencies": [\
          ["eslint-plugin-react-refresh", "npm:0.4.19"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:0.4.19", {\
        "packageLocation": "./.yarn/__virtual__/eslint-plugin-react-refresh-virtual-7072722892/6/home/csillag/.yarn/berry/cache/eslint-plugin-react-refresh-npm-0.4.19-97911e7788-10c0.zip/node_modules/eslint-plugin-react-refresh/",\
        "packageDependencies": [\
          ["eslint-plugin-react-refresh", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:0.4.19"],\
          ["@types/eslint", null],\
          ["eslint", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:9.23.0"]\
        ],\
        "packagePeers": [\
          "@types/eslint",\
          "eslint"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["eslint-scope", [\
      ["npm:8.3.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/eslint-scope-npm-8.3.0-2f4303c4f9-10c0.zip/node_modules/eslint-scope/",\
        "packageDependencies": [\
          ["eslint-scope", "npm:8.3.0"],\
          ["esrecurse", "npm:4.3.0"],\
          ["estraverse", "npm:5.3.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["eslint-visitor-keys", [\
      ["npm:3.4.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/eslint-visitor-keys-npm-3.4.3-a356ac7e46-10c0.zip/node_modules/eslint-visitor-keys/",\
        "packageDependencies": [\
          ["eslint-visitor-keys", "npm:3.4.3"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:4.2.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/eslint-visitor-keys-npm-4.2.0-a591434af3-10c0.zip/node_modules/eslint-visitor-keys/",\
        "packageDependencies": [\
          ["eslint-visitor-keys", "npm:4.2.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["espree", [\
      ["npm:10.3.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/espree-npm-10.3.0-e5b10052f5-10c0.zip/node_modules/espree/",\
        "packageDependencies": [\
          ["espree", "npm:10.3.0"],\
          ["acorn", "npm:8.14.1"],\
          ["acorn-jsx", "virtual:e5b10052f5b961a2f38f3edbfbbcd7baf074e555f688eaf63695fed94838b848c6291487952754e262c19f60bf34d659b71e3d5260e2ea073949e1b6269dc165#npm:5.3.2"],\
          ["eslint-visitor-keys", "npm:4.2.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["esquery", [\
      ["npm:1.6.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/esquery-npm-1.6.0-16fee31531-10c0.zip/node_modules/esquery/",\
        "packageDependencies": [\
          ["esquery", "npm:1.6.0"],\
          ["estraverse", "npm:5.3.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["esrecurse", [\
      ["npm:4.3.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/esrecurse-npm-4.3.0-10b86a887a-10c0.zip/node_modules/esrecurse/",\
        "packageDependencies": [\
          ["esrecurse", "npm:4.3.0"],\
          ["estraverse", "npm:5.3.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["estraverse", [\
      ["npm:5.3.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/estraverse-npm-5.3.0-03284f8f63-10c0.zip/node_modules/estraverse/",\
        "packageDependencies": [\
          ["estraverse", "npm:5.3.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["esutils", [\
      ["npm:2.0.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/esutils-npm-2.0.3-f865beafd5-10c0.zip/node_modules/esutils/",\
        "packageDependencies": [\
          ["esutils", "npm:2.0.3"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["exponential-backoff", [\
      ["npm:3.1.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/exponential-backoff-npm-3.1.2-e030c582de-10c0.zip/node_modules/exponential-backoff/",\
        "packageDependencies": [\
          ["exponential-backoff", "npm:3.1.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["fast-deep-equal", [\
      ["npm:3.1.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/fast-deep-equal-npm-3.1.3-790edcfcf5-10c0.zip/node_modules/fast-deep-equal/",\
        "packageDependencies": [\
          ["fast-deep-equal", "npm:3.1.3"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["fast-glob", [\
      ["npm:3.3.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/fast-glob-npm-3.3.3-2a653be532-10c0.zip/node_modules/fast-glob/",\
        "packageDependencies": [\
          ["fast-glob", "npm:3.3.3"],\
          ["@nodelib/fs.stat", "npm:2.0.5"],\
          ["@nodelib/fs.walk", "npm:1.2.8"],\
          ["glob-parent", "npm:5.1.2"],\
          ["merge2", "npm:1.4.1"],\
          ["micromatch", "npm:4.0.8"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["fast-json-stable-stringify", [\
      ["npm:2.1.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/fast-json-stable-stringify-npm-2.1.0-02e8905fda-10c0.zip/node_modules/fast-json-stable-stringify/",\
        "packageDependencies": [\
          ["fast-json-stable-stringify", "npm:2.1.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["fast-levenshtein", [\
      ["npm:2.0.6", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/fast-levenshtein-npm-2.0.6-fcd74b8df5-10c0.zip/node_modules/fast-levenshtein/",\
        "packageDependencies": [\
          ["fast-levenshtein", "npm:2.0.6"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["fastq", [\
      ["npm:1.19.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/fastq-npm-1.19.1-ca0a13ec3f-10c0.zip/node_modules/fastq/",\
        "packageDependencies": [\
          ["fastq", "npm:1.19.1"],\
          ["reusify", "npm:1.1.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["fdir", [\
      ["npm:6.4.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/fdir-npm-6.4.3-938f734d57-10c0.zip/node_modules/fdir/",\
        "packageDependencies": [\
          ["fdir", "npm:6.4.3"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:c8807de691826868d9a774dfe20fb184997709c19896ccda6c1d382d679c7c2453bf893d9e0510372bd84566a8523db06ec721126eb95bb24e97992998e8a625#npm:6.4.3", {\
        "packageLocation": "./.yarn/__virtual__/fdir-virtual-4be5a9f550/6/home/csillag/.yarn/berry/cache/fdir-npm-6.4.3-938f734d57-10c0.zip/node_modules/fdir/",\
        "packageDependencies": [\
          ["fdir", "virtual:c8807de691826868d9a774dfe20fb184997709c19896ccda6c1d382d679c7c2453bf893d9e0510372bd84566a8523db06ec721126eb95bb24e97992998e8a625#npm:6.4.3"],\
          ["@types/picomatch", null],\
          ["picomatch", "npm:4.0.2"]\
        ],\
        "packagePeers": [\
          "@types/picomatch",\
          "picomatch"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["file-entry-cache", [\
      ["npm:8.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/file-entry-cache-npm-8.0.0-5b09d19a83-10c0.zip/node_modules/file-entry-cache/",\
        "packageDependencies": [\
          ["file-entry-cache", "npm:8.0.0"],\
          ["flat-cache", "npm:4.0.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["fill-range", [\
      ["npm:7.1.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/fill-range-npm-7.1.1-bf491486db-10c0.zip/node_modules/fill-range/",\
        "packageDependencies": [\
          ["fill-range", "npm:7.1.1"],\
          ["to-regex-range", "npm:5.0.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["find-up", [\
      ["npm:5.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/find-up-npm-5.0.0-e03e9b796d-10c0.zip/node_modules/find-up/",\
        "packageDependencies": [\
          ["find-up", "npm:5.0.0"],\
          ["locate-path", "npm:6.0.0"],\
          ["path-exists", "npm:4.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["flat-cache", [\
      ["npm:4.0.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/flat-cache-npm-4.0.1-12bf2455f7-10c0.zip/node_modules/flat-cache/",\
        "packageDependencies": [\
          ["flat-cache", "npm:4.0.1"],\
          ["flatted", "npm:3.3.3"],\
          ["keyv", "npm:4.5.4"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["flatted", [\
      ["npm:3.3.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/flatted-npm-3.3.3-ca455563b2-10c0.zip/node_modules/flatted/",\
        "packageDependencies": [\
          ["flatted", "npm:3.3.3"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["foreground-child", [\
      ["npm:3.3.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/foreground-child-npm-3.3.1-b7775fda04-10c0.zip/node_modules/foreground-child/",\
        "packageDependencies": [\
          ["foreground-child", "npm:3.3.1"],\
          ["cross-spawn", "npm:7.0.6"],\
          ["signal-exit", "npm:4.1.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["fs-minipass", [\
      ["npm:3.0.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/fs-minipass-npm-3.0.3-d148d6ac19-10c0.zip/node_modules/fs-minipass/",\
        "packageDependencies": [\
          ["fs-minipass", "npm:3.0.3"],\
          ["minipass", "npm:7.1.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["fsevents", [\
      ["patch:fsevents@npm%3A2.3.3#optional!builtin<compat/fsevents>::version=2.3.3&hash=df0bf1", {\
        "packageLocation": "./.yarn/unplugged/fsevents-patch-6b67494872/node_modules/fsevents/",\
        "packageDependencies": [\
          ["fsevents", "patch:fsevents@npm%3A2.3.3#optional!builtin<compat/fsevents>::version=2.3.3&hash=df0bf1"],\
          ["node-gyp", "npm:11.2.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["gensync", [\
      ["npm:1.0.0-beta.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/gensync-npm-1.0.0-beta.2-224666d72f-10c0.zip/node_modules/gensync/",\
        "packageDependencies": [\
          ["gensync", "npm:1.0.0-beta.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["glob", [\
      ["npm:10.4.5", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/glob-npm-10.4.5-8c63175f05-10c0.zip/node_modules/glob/",\
        "packageDependencies": [\
          ["glob", "npm:10.4.5"],\
          ["foreground-child", "npm:3.3.1"],\
          ["jackspeak", "npm:3.4.3"],\
          ["minimatch", "npm:9.0.5"],\
          ["minipass", "npm:7.1.2"],\
          ["package-json-from-dist", "npm:1.0.1"],\
          ["path-scurry", "npm:1.11.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["glob-parent", [\
      ["npm:5.1.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/glob-parent-npm-5.1.2-021ab32634-10c0.zip/node_modules/glob-parent/",\
        "packageDependencies": [\
          ["glob-parent", "npm:5.1.2"],\
          ["is-glob", "npm:4.0.3"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:6.0.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/glob-parent-npm-6.0.2-2cbef12738-10c0.zip/node_modules/glob-parent/",\
        "packageDependencies": [\
          ["glob-parent", "npm:6.0.2"],\
          ["is-glob", "npm:4.0.3"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["globals", [\
      ["npm:11.12.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/globals-npm-11.12.0-1fa7f41a6c-10c0.zip/node_modules/globals/",\
        "packageDependencies": [\
          ["globals", "npm:11.12.0"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:14.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/globals-npm-14.0.0-5fc3d8d5da-10c0.zip/node_modules/globals/",\
        "packageDependencies": [\
          ["globals", "npm:14.0.0"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:15.15.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/globals-npm-15.15.0-5ddcb6c553-10c0.zip/node_modules/globals/",\
        "packageDependencies": [\
          ["globals", "npm:15.15.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["graceful-fs", [\
      ["npm:4.2.11", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/graceful-fs-npm-4.2.11-24bb648a68-10c0.zip/node_modules/graceful-fs/",\
        "packageDependencies": [\
          ["graceful-fs", "npm:4.2.11"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["graphemer", [\
      ["npm:1.4.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/graphemer-npm-1.4.0-0627732d35-10c0.zip/node_modules/graphemer/",\
        "packageDependencies": [\
          ["graphemer", "npm:1.4.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["has-flag", [\
      ["npm:4.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/has-flag-npm-4.0.0-32af9f0536-10c0.zip/node_modules/has-flag/",\
        "packageDependencies": [\
          ["has-flag", "npm:4.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["http-cache-semantics", [\
      ["npm:4.1.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/http-cache-semantics-npm-4.1.1-1120131375-10c0.zip/node_modules/http-cache-semantics/",\
        "packageDependencies": [\
          ["http-cache-semantics", "npm:4.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["http-proxy-agent", [\
      ["npm:7.0.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/http-proxy-agent-npm-7.0.2-643ed7cc33-10c0.zip/node_modules/http-proxy-agent/",\
        "packageDependencies": [\
          ["http-proxy-agent", "npm:7.0.2"],\
          ["agent-base", "npm:7.1.3"],\
          ["debug", "virtual:e376c6d25689d1413f13b759a5649fe969efab30320e886cab81ece2b6daf8c4c74f642faff7228a9a286b4b82bc7bac5773e45f1085910307cd111b19a8cd17#npm:4.4.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["https-proxy-agent", [\
      ["npm:7.0.6", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/https-proxy-agent-npm-7.0.6-27a95c2690-10c0.zip/node_modules/https-proxy-agent/",\
        "packageDependencies": [\
          ["https-proxy-agent", "npm:7.0.6"],\
          ["agent-base", "npm:7.1.3"],\
          ["debug", "virtual:e376c6d25689d1413f13b759a5649fe969efab30320e886cab81ece2b6daf8c4c74f642faff7228a9a286b4b82bc7bac5773e45f1085910307cd111b19a8cd17#npm:4.4.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["iconv-lite", [\
      ["npm:0.6.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/iconv-lite-npm-0.6.3-24b8aae27e-10c0.zip/node_modules/iconv-lite/",\
        "packageDependencies": [\
          ["iconv-lite", "npm:0.6.3"],\
          ["safer-buffer", "npm:2.1.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["ignore", [\
      ["npm:5.3.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/ignore-npm-5.3.2-346d3ba017-10c0.zip/node_modules/ignore/",\
        "packageDependencies": [\
          ["ignore", "npm:5.3.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["import-fresh", [\
      ["npm:3.3.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/import-fresh-npm-3.3.1-1916794950-10c0.zip/node_modules/import-fresh/",\
        "packageDependencies": [\
          ["import-fresh", "npm:3.3.1"],\
          ["parent-module", "npm:1.0.1"],\
          ["resolve-from", "npm:4.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["imurmurhash", [\
      ["npm:0.1.4", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/imurmurhash-npm-0.1.4-610c5068a0-10c0.zip/node_modules/imurmurhash/",\
        "packageDependencies": [\
          ["imurmurhash", "npm:0.1.4"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["ip-address", [\
      ["npm:9.0.5", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/ip-address-npm-9.0.5-9fa024d42a-10c0.zip/node_modules/ip-address/",\
        "packageDependencies": [\
          ["ip-address", "npm:9.0.5"],\
          ["jsbn", "npm:1.1.0"],\
          ["sprintf-js", "npm:1.1.3"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["is-extglob", [\
      ["npm:2.1.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/is-extglob-npm-2.1.1-0870ea68b5-10c0.zip/node_modules/is-extglob/",\
        "packageDependencies": [\
          ["is-extglob", "npm:2.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["is-fullwidth-code-point", [\
      ["npm:3.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/is-fullwidth-code-point-npm-3.0.0-1ecf4ebee5-10c0.zip/node_modules/is-fullwidth-code-point/",\
        "packageDependencies": [\
          ["is-fullwidth-code-point", "npm:3.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["is-glob", [\
      ["npm:4.0.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/is-glob-npm-4.0.3-cb87bf1bdb-10c0.zip/node_modules/is-glob/",\
        "packageDependencies": [\
          ["is-glob", "npm:4.0.3"],\
          ["is-extglob", "npm:2.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["is-number", [\
      ["npm:7.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/is-number-npm-7.0.0-060086935c-10c0.zip/node_modules/is-number/",\
        "packageDependencies": [\
          ["is-number", "npm:7.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["isexe", [\
      ["npm:2.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/isexe-npm-2.0.0-b58870bd2e-10c0.zip/node_modules/isexe/",\
        "packageDependencies": [\
          ["isexe", "npm:2.0.0"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:3.1.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/isexe-npm-3.1.1-9c0061eead-10c0.zip/node_modules/isexe/",\
        "packageDependencies": [\
          ["isexe", "npm:3.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["jackspeak", [\
      ["npm:3.4.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/jackspeak-npm-3.4.3-546bfad080-10c0.zip/node_modules/jackspeak/",\
        "packageDependencies": [\
          ["jackspeak", "npm:3.4.3"],\
          ["@isaacs/cliui", "npm:8.0.2"],\
          ["@pkgjs/parseargs", "npm:0.11.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["jiti", [\
      ["npm:2.4.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/jiti-npm-2.4.2-d980cbb540-10c0.zip/node_modules/jiti/",\
        "packageDependencies": [\
          ["jiti", "npm:2.4.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["js-tokens", [\
      ["npm:4.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/js-tokens-npm-4.0.0-0ac852e9e2-10c0.zip/node_modules/js-tokens/",\
        "packageDependencies": [\
          ["js-tokens", "npm:4.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["js-yaml", [\
      ["npm:4.1.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/js-yaml-npm-4.1.0-3606f32312-10c0.zip/node_modules/js-yaml/",\
        "packageDependencies": [\
          ["js-yaml", "npm:4.1.0"],\
          ["argparse", "npm:2.0.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["jsbn", [\
      ["npm:1.1.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/jsbn-npm-1.1.0-1da0181838-10c0.zip/node_modules/jsbn/",\
        "packageDependencies": [\
          ["jsbn", "npm:1.1.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["jsesc", [\
      ["npm:3.1.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/jsesc-npm-3.1.0-2f4f998cd7-10c0.zip/node_modules/jsesc/",\
        "packageDependencies": [\
          ["jsesc", "npm:3.1.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["json-buffer", [\
      ["npm:3.0.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/json-buffer-npm-3.0.1-f8f6d20603-10c0.zip/node_modules/json-buffer/",\
        "packageDependencies": [\
          ["json-buffer", "npm:3.0.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["json-schema-traverse", [\
      ["npm:0.4.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/json-schema-traverse-npm-0.4.1-4759091693-10c0.zip/node_modules/json-schema-traverse/",\
        "packageDependencies": [\
          ["json-schema-traverse", "npm:0.4.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["json-stable-stringify-without-jsonify", [\
      ["npm:1.0.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/json-stable-stringify-without-jsonify-npm-1.0.1-b65772b28b-10c0.zip/node_modules/json-stable-stringify-without-jsonify/",\
        "packageDependencies": [\
          ["json-stable-stringify-without-jsonify", "npm:1.0.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["json5", [\
      ["npm:2.2.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/json5-npm-2.2.3-9962c55073-10c0.zip/node_modules/json5/",\
        "packageDependencies": [\
          ["json5", "npm:2.2.3"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["keyv", [\
      ["npm:4.5.4", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/keyv-npm-4.5.4-4c8e2cf7f7-10c0.zip/node_modules/keyv/",\
        "packageDependencies": [\
          ["keyv", "npm:4.5.4"],\
          ["json-buffer", "npm:3.0.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["levn", [\
      ["npm:0.4.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/levn-npm-0.4.1-d183b2d7bb-10c0.zip/node_modules/levn/",\
        "packageDependencies": [\
          ["levn", "npm:0.4.1"],\
          ["prelude-ls", "npm:1.2.1"],\
          ["type-check", "npm:0.4.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["lightningcss", [\
      ["npm:1.29.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/lightningcss-npm-1.29.2-4b952c455e-10c0.zip/node_modules/lightningcss/",\
        "packageDependencies": [\
          ["lightningcss", "npm:1.29.2"],\
          ["detect-libc", "npm:2.0.3"],\
          ["lightningcss-darwin-arm64", "npm:1.29.2"],\
          ["lightningcss-darwin-x64", "npm:1.29.2"],\
          ["lightningcss-freebsd-x64", "npm:1.29.2"],\
          ["lightningcss-linux-arm-gnueabihf", "npm:1.29.2"],\
          ["lightningcss-linux-arm64-gnu", "npm:1.29.2"],\
          ["lightningcss-linux-arm64-musl", "npm:1.29.2"],\
          ["lightningcss-linux-x64-gnu", "npm:1.29.2"],\
          ["lightningcss-linux-x64-musl", "npm:1.29.2"],\
          ["lightningcss-win32-arm64-msvc", "npm:1.29.2"],\
          ["lightningcss-win32-x64-msvc", "npm:1.29.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["lightningcss-darwin-arm64", [\
      ["npm:1.29.2", {\
        "packageLocation": "./.yarn/unplugged/lightningcss-darwin-arm64-npm-1.29.2-b157017ab0/node_modules/lightningcss-darwin-arm64/",\
        "packageDependencies": [\
          ["lightningcss-darwin-arm64", "npm:1.29.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["lightningcss-darwin-x64", [\
      ["npm:1.29.2", {\
        "packageLocation": "./.yarn/unplugged/lightningcss-darwin-x64-npm-1.29.2-22b23a4b1b/node_modules/lightningcss-darwin-x64/",\
        "packageDependencies": [\
          ["lightningcss-darwin-x64", "npm:1.29.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["lightningcss-freebsd-x64", [\
      ["npm:1.29.2", {\
        "packageLocation": "./.yarn/unplugged/lightningcss-freebsd-x64-npm-1.29.2-3111783c08/node_modules/lightningcss-freebsd-x64/",\
        "packageDependencies": [\
          ["lightningcss-freebsd-x64", "npm:1.29.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["lightningcss-linux-arm-gnueabihf", [\
      ["npm:1.29.2", {\
        "packageLocation": "./.yarn/unplugged/lightningcss-linux-arm-gnueabihf-npm-1.29.2-4e3f989f65/node_modules/lightningcss-linux-arm-gnueabihf/",\
        "packageDependencies": [\
          ["lightningcss-linux-arm-gnueabihf", "npm:1.29.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["lightningcss-linux-arm64-gnu", [\
      ["npm:1.29.2", {\
        "packageLocation": "./.yarn/unplugged/lightningcss-linux-arm64-gnu-npm-1.29.2-7210691c7c/node_modules/lightningcss-linux-arm64-gnu/",\
        "packageDependencies": [\
          ["lightningcss-linux-arm64-gnu", "npm:1.29.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["lightningcss-linux-arm64-musl", [\
      ["npm:1.29.2", {\
        "packageLocation": "./.yarn/unplugged/lightningcss-linux-arm64-musl-npm-1.29.2-8d69ad8198/node_modules/lightningcss-linux-arm64-musl/",\
        "packageDependencies": [\
          ["lightningcss-linux-arm64-musl", "npm:1.29.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["lightningcss-linux-x64-gnu", [\
      ["npm:1.29.2", {\
        "packageLocation": "./.yarn/unplugged/lightningcss-linux-x64-gnu-npm-1.29.2-09eb50b854/node_modules/lightningcss-linux-x64-gnu/",\
        "packageDependencies": [\
          ["lightningcss-linux-x64-gnu", "npm:1.29.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["lightningcss-linux-x64-musl", [\
      ["npm:1.29.2", {\
        "packageLocation": "./.yarn/unplugged/lightningcss-linux-x64-musl-npm-1.29.2-50010d3051/node_modules/lightningcss-linux-x64-musl/",\
        "packageDependencies": [\
          ["lightningcss-linux-x64-musl", "npm:1.29.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["lightningcss-win32-arm64-msvc", [\
      ["npm:1.29.2", {\
        "packageLocation": "./.yarn/unplugged/lightningcss-win32-arm64-msvc-npm-1.29.2-c50b00ef2e/node_modules/lightningcss-win32-arm64-msvc/",\
        "packageDependencies": [\
          ["lightningcss-win32-arm64-msvc", "npm:1.29.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["lightningcss-win32-x64-msvc", [\
      ["npm:1.29.2", {\
        "packageLocation": "./.yarn/unplugged/lightningcss-win32-x64-msvc-npm-1.29.2-bede0b2d99/node_modules/lightningcss-win32-x64-msvc/",\
        "packageDependencies": [\
          ["lightningcss-win32-x64-msvc", "npm:1.29.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["locate-path", [\
      ["npm:6.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/locate-path-npm-6.0.0-06a1e4c528-10c0.zip/node_modules/locate-path/",\
        "packageDependencies": [\
          ["locate-path", "npm:6.0.0"],\
          ["p-locate", "npm:5.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["lodash.merge", [\
      ["npm:4.6.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/lodash.merge-npm-4.6.2-77cb4416bf-10c0.zip/node_modules/lodash.merge/",\
        "packageDependencies": [\
          ["lodash.merge", "npm:4.6.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["lru-cache", [\
      ["npm:10.4.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/lru-cache-npm-10.4.3-30c10b861a-10c0.zip/node_modules/lru-cache/",\
        "packageDependencies": [\
          ["lru-cache", "npm:10.4.3"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:5.1.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/lru-cache-npm-5.1.1-f475882a51-10c0.zip/node_modules/lru-cache/",\
        "packageDependencies": [\
          ["lru-cache", "npm:5.1.1"],\
          ["yallist", "npm:3.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["make-fetch-happen", [\
      ["npm:14.0.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/make-fetch-happen-npm-14.0.3-23b30e8691-10c0.zip/node_modules/make-fetch-happen/",\
        "packageDependencies": [\
          ["make-fetch-happen", "npm:14.0.3"],\
          ["@npmcli/agent", "npm:3.0.0"],\
          ["cacache", "npm:19.0.1"],\
          ["http-cache-semantics", "npm:4.1.1"],\
          ["minipass", "npm:7.1.2"],\
          ["minipass-fetch", "npm:4.0.1"],\
          ["minipass-flush", "npm:1.0.5"],\
          ["minipass-pipeline", "npm:1.2.4"],\
          ["negotiator", "npm:1.0.0"],\
          ["proc-log", "npm:5.0.0"],\
          ["promise-retry", "npm:2.0.1"],\
          ["ssri", "npm:12.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["merge2", [\
      ["npm:1.4.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/merge2-npm-1.4.1-a2507bd06c-10c0.zip/node_modules/merge2/",\
        "packageDependencies": [\
          ["merge2", "npm:1.4.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["micromatch", [\
      ["npm:4.0.8", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/micromatch-npm-4.0.8-c9570e4aca-10c0.zip/node_modules/micromatch/",\
        "packageDependencies": [\
          ["micromatch", "npm:4.0.8"],\
          ["braces", "npm:3.0.3"],\
          ["picomatch", "npm:2.3.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["minimatch", [\
      ["npm:3.1.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/minimatch-npm-3.1.2-9405269906-10c0.zip/node_modules/minimatch/",\
        "packageDependencies": [\
          ["minimatch", "npm:3.1.2"],\
          ["brace-expansion", "npm:1.1.11"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:9.0.5", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/minimatch-npm-9.0.5-9aa93d97fa-10c0.zip/node_modules/minimatch/",\
        "packageDependencies": [\
          ["minimatch", "npm:9.0.5"],\
          ["brace-expansion", "npm:2.0.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["minipass", [\
      ["npm:3.3.6", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/minipass-npm-3.3.6-b8d93a945b-10c0.zip/node_modules/minipass/",\
        "packageDependencies": [\
          ["minipass", "npm:3.3.6"],\
          ["yallist", "npm:4.0.0"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:7.1.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/minipass-npm-7.1.2-3a5327d36d-10c0.zip/node_modules/minipass/",\
        "packageDependencies": [\
          ["minipass", "npm:7.1.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["minipass-collect", [\
      ["npm:2.0.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/minipass-collect-npm-2.0.1-73d3907e40-10c0.zip/node_modules/minipass-collect/",\
        "packageDependencies": [\
          ["minipass-collect", "npm:2.0.1"],\
          ["minipass", "npm:7.1.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["minipass-fetch", [\
      ["npm:4.0.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/minipass-fetch-npm-4.0.1-ce1d15e957-10c0.zip/node_modules/minipass-fetch/",\
        "packageDependencies": [\
          ["minipass-fetch", "npm:4.0.1"],\
          ["encoding", "npm:0.1.13"],\
          ["minipass", "npm:7.1.2"],\
          ["minipass-sized", "npm:1.0.3"],\
          ["minizlib", "npm:3.0.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["minipass-flush", [\
      ["npm:1.0.5", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/minipass-flush-npm-1.0.5-efe79d9826-10c0.zip/node_modules/minipass-flush/",\
        "packageDependencies": [\
          ["minipass-flush", "npm:1.0.5"],\
          ["minipass", "npm:3.3.6"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["minipass-pipeline", [\
      ["npm:1.2.4", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/minipass-pipeline-npm-1.2.4-5924cb077f-10c0.zip/node_modules/minipass-pipeline/",\
        "packageDependencies": [\
          ["minipass-pipeline", "npm:1.2.4"],\
          ["minipass", "npm:3.3.6"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["minipass-sized", [\
      ["npm:1.0.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/minipass-sized-npm-1.0.3-306d86f432-10c0.zip/node_modules/minipass-sized/",\
        "packageDependencies": [\
          ["minipass-sized", "npm:1.0.3"],\
          ["minipass", "npm:3.3.6"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["minizlib", [\
      ["npm:3.0.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/minizlib-npm-3.0.2-f56e815013-10c0.zip/node_modules/minizlib/",\
        "packageDependencies": [\
          ["minizlib", "npm:3.0.2"],\
          ["minipass", "npm:7.1.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["mkdirp", [\
      ["npm:3.0.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/mkdirp-npm-3.0.1-f94bfa769e-10c0.zip/node_modules/mkdirp/",\
        "packageDependencies": [\
          ["mkdirp", "npm:3.0.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["ms", [\
      ["npm:2.1.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/ms-npm-2.1.3-81ff3cfac1-10c0.zip/node_modules/ms/",\
        "packageDependencies": [\
          ["ms", "npm:2.1.3"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["nanoid", [\
      ["npm:3.3.11", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/nanoid-npm-3.3.11-f98c1f9ef6-10c0.zip/node_modules/nanoid/",\
        "packageDependencies": [\
          ["nanoid", "npm:3.3.11"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["natural-compare", [\
      ["npm:1.4.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/natural-compare-npm-1.4.0-97b75b362d-10c0.zip/node_modules/natural-compare/",\
        "packageDependencies": [\
          ["natural-compare", "npm:1.4.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["negotiator", [\
      ["npm:1.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/negotiator-npm-1.0.0-47d727e27e-10c0.zip/node_modules/negotiator/",\
        "packageDependencies": [\
          ["negotiator", "npm:1.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["node-gyp", [\
      ["npm:11.2.0", {\
        "packageLocation": "./.yarn/unplugged/node-gyp-npm-11.2.0-36aeb0fa50/node_modules/node-gyp/",\
        "packageDependencies": [\
          ["node-gyp", "npm:11.2.0"],\
          ["env-paths", "npm:2.2.1"],\
          ["exponential-backoff", "npm:3.1.2"],\
          ["graceful-fs", "npm:4.2.11"],\
          ["make-fetch-happen", "npm:14.0.3"],\
          ["nopt", "npm:8.1.0"],\
          ["proc-log", "npm:5.0.0"],\
          ["semver", "npm:7.7.1"],\
          ["tar", "npm:7.4.3"],\
          ["tinyglobby", "npm:0.2.12"],\
          ["which", "npm:5.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["node-releases", [\
      ["npm:2.0.19", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/node-releases-npm-2.0.19-b123ed6240-10c0.zip/node_modules/node-releases/",\
        "packageDependencies": [\
          ["node-releases", "npm:2.0.19"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["nopt", [\
      ["npm:8.1.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/nopt-npm-8.1.0-5570ef63cd-10c0.zip/node_modules/nopt/",\
        "packageDependencies": [\
          ["nopt", "npm:8.1.0"],\
          ["abbrev", "npm:3.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["optionator", [\
      ["npm:0.9.4", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/optionator-npm-0.9.4-1f114b00e8-10c0.zip/node_modules/optionator/",\
        "packageDependencies": [\
          ["optionator", "npm:0.9.4"],\
          ["deep-is", "npm:0.1.4"],\
          ["fast-levenshtein", "npm:2.0.6"],\
          ["levn", "npm:0.4.1"],\
          ["prelude-ls", "npm:1.2.1"],\
          ["type-check", "npm:0.4.0"],\
          ["word-wrap", "npm:1.2.5"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["p-limit", [\
      ["npm:3.1.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/p-limit-npm-3.1.0-05d2ede37f-10c0.zip/node_modules/p-limit/",\
        "packageDependencies": [\
          ["p-limit", "npm:3.1.0"],\
          ["yocto-queue", "npm:0.1.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["p-locate", [\
      ["npm:5.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/p-locate-npm-5.0.0-92cc7c7a3e-10c0.zip/node_modules/p-locate/",\
        "packageDependencies": [\
          ["p-locate", "npm:5.0.0"],\
          ["p-limit", "npm:3.1.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["p-map", [\
      ["npm:7.0.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/p-map-npm-7.0.3-93bbec0d8c-10c0.zip/node_modules/p-map/",\
        "packageDependencies": [\
          ["p-map", "npm:7.0.3"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["package-json-from-dist", [\
      ["npm:1.0.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/package-json-from-dist-npm-1.0.1-4631a88465-10c0.zip/node_modules/package-json-from-dist/",\
        "packageDependencies": [\
          ["package-json-from-dist", "npm:1.0.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["parent-module", [\
      ["npm:1.0.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/parent-module-npm-1.0.1-1fae11b095-10c0.zip/node_modules/parent-module/",\
        "packageDependencies": [\
          ["parent-module", "npm:1.0.1"],\
          ["callsites", "npm:3.1.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["path-exists", [\
      ["npm:4.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/path-exists-npm-4.0.0-e9e4f63eb0-10c0.zip/node_modules/path-exists/",\
        "packageDependencies": [\
          ["path-exists", "npm:4.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["path-key", [\
      ["npm:3.1.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/path-key-npm-3.1.1-0e66ea8321-10c0.zip/node_modules/path-key/",\
        "packageDependencies": [\
          ["path-key", "npm:3.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["path-scurry", [\
      ["npm:1.11.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/path-scurry-npm-1.11.1-aaf8c339af-10c0.zip/node_modules/path-scurry/",\
        "packageDependencies": [\
          ["path-scurry", "npm:1.11.1"],\
          ["lru-cache", "npm:10.4.3"],\
          ["minipass", "npm:7.1.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["picocolors", [\
      ["npm:1.1.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/picocolors-npm-1.1.1-4fede47cf1-10c0.zip/node_modules/picocolors/",\
        "packageDependencies": [\
          ["picocolors", "npm:1.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["picomatch", [\
      ["npm:2.3.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/picomatch-npm-2.3.1-c782cfd986-10c0.zip/node_modules/picomatch/",\
        "packageDependencies": [\
          ["picomatch", "npm:2.3.1"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:4.0.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/picomatch-npm-4.0.2-e93516ddf2-10c0.zip/node_modules/picomatch/",\
        "packageDependencies": [\
          ["picomatch", "npm:4.0.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["postcss", [\
      ["npm:8.5.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/postcss-npm-8.5.3-37174aa03d-10c0.zip/node_modules/postcss/",\
        "packageDependencies": [\
          ["postcss", "npm:8.5.3"],\
          ["nanoid", "npm:3.3.11"],\
          ["picocolors", "npm:1.1.1"],\
          ["source-map-js", "npm:1.2.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["prelude-ls", [\
      ["npm:1.2.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/prelude-ls-npm-1.2.1-3e4d272a55-10c0.zip/node_modules/prelude-ls/",\
        "packageDependencies": [\
          ["prelude-ls", "npm:1.2.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["proc-log", [\
      ["npm:5.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/proc-log-npm-5.0.0-405173f9b4-10c0.zip/node_modules/proc-log/",\
        "packageDependencies": [\
          ["proc-log", "npm:5.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["promise-retry", [\
      ["npm:2.0.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/promise-retry-npm-2.0.1-871f0b01b7-10c0.zip/node_modules/promise-retry/",\
        "packageDependencies": [\
          ["promise-retry", "npm:2.0.1"],\
          ["err-code", "npm:2.0.3"],\
          ["retry", "npm:0.12.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["punycode", [\
      ["npm:2.3.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/punycode-npm-2.3.1-97543c420d-10c0.zip/node_modules/punycode/",\
        "packageDependencies": [\
          ["punycode", "npm:2.3.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["queue-microtask", [\
      ["npm:1.2.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/queue-microtask-npm-1.2.3-fcc98e4e2d-10c0.zip/node_modules/queue-microtask/",\
        "packageDependencies": [\
          ["queue-microtask", "npm:1.2.3"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["react", [\
      ["npm:19.1.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/react-npm-19.1.0-9804a7da5b-10c0.zip/node_modules/react/",\
        "packageDependencies": [\
          ["react", "npm:19.1.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["react-dom", [\
      ["npm:19.1.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/react-dom-npm-19.1.0-773f826e46-10c0.zip/node_modules/react-dom/",\
        "packageDependencies": [\
          ["react-dom", "npm:19.1.0"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:19.1.0", {\
        "packageLocation": "./.yarn/__virtual__/react-dom-virtual-cb425eca0e/6/home/csillag/.yarn/berry/cache/react-dom-npm-19.1.0-773f826e46-10c0.zip/node_modules/react-dom/",\
        "packageDependencies": [\
          ["react-dom", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:19.1.0"],\
          ["@types/react", "npm:19.1.0"],\
          ["react", "npm:19.1.0"],\
          ["scheduler", "npm:0.26.0"]\
        ],\
        "packagePeers": [\
          "@types/react",\
          "react"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["react-refresh", [\
      ["npm:0.14.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/react-refresh-npm-0.14.2-95df341b4d-10c0.zip/node_modules/react-refresh/",\
        "packageDependencies": [\
          ["react-refresh", "npm:0.14.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["resolve-from", [\
      ["npm:4.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/resolve-from-npm-4.0.0-f758ec21bf-10c0.zip/node_modules/resolve-from/",\
        "packageDependencies": [\
          ["resolve-from", "npm:4.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["retry", [\
      ["npm:0.12.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/retry-npm-0.12.0-72ac7fb4cc-10c0.zip/node_modules/retry/",\
        "packageDependencies": [\
          ["retry", "npm:0.12.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["reusify", [\
      ["npm:1.1.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/reusify-npm-1.1.0-96242be57f-10c0.zip/node_modules/reusify/",\
        "packageDependencies": [\
          ["reusify", "npm:1.1.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["rollup", [\
      ["npm:4.39.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/rollup-npm-4.39.0-8409a7015f-10c0.zip/node_modules/rollup/",\
        "packageDependencies": [\
          ["rollup", "npm:4.39.0"],\
          ["@rollup/rollup-android-arm-eabi", "npm:4.39.0"],\
          ["@rollup/rollup-android-arm64", "npm:4.39.0"],\
          ["@rollup/rollup-darwin-arm64", "npm:4.39.0"],\
          ["@rollup/rollup-darwin-x64", "npm:4.39.0"],\
          ["@rollup/rollup-freebsd-arm64", "npm:4.39.0"],\
          ["@rollup/rollup-freebsd-x64", "npm:4.39.0"],\
          ["@rollup/rollup-linux-arm-gnueabihf", "npm:4.39.0"],\
          ["@rollup/rollup-linux-arm-musleabihf", "npm:4.39.0"],\
          ["@rollup/rollup-linux-arm64-gnu", "npm:4.39.0"],\
          ["@rollup/rollup-linux-arm64-musl", "npm:4.39.0"],\
          ["@rollup/rollup-linux-loongarch64-gnu", "npm:4.39.0"],\
          ["@rollup/rollup-linux-powerpc64le-gnu", "npm:4.39.0"],\
          ["@rollup/rollup-linux-riscv64-gnu", "npm:4.39.0"],\
          ["@rollup/rollup-linux-riscv64-musl", "npm:4.39.0"],\
          ["@rollup/rollup-linux-s390x-gnu", "npm:4.39.0"],\
          ["@rollup/rollup-linux-x64-gnu", "npm:4.39.0"],\
          ["@rollup/rollup-linux-x64-musl", "npm:4.39.0"],\
          ["@rollup/rollup-win32-arm64-msvc", "npm:4.39.0"],\
          ["@rollup/rollup-win32-ia32-msvc", "npm:4.39.0"],\
          ["@rollup/rollup-win32-x64-msvc", "npm:4.39.0"],\
          ["@types/estree", "npm:1.0.7"],\
          ["fsevents", "patch:fsevents@npm%3A2.3.3#optional!builtin<compat/fsevents>::version=2.3.3&hash=df0bf1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["run-parallel", [\
      ["npm:1.2.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/run-parallel-npm-1.2.0-3f47ff2034-10c0.zip/node_modules/run-parallel/",\
        "packageDependencies": [\
          ["run-parallel", "npm:1.2.0"],\
          ["queue-microtask", "npm:1.2.3"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["safer-buffer", [\
      ["npm:2.1.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/safer-buffer-npm-2.1.2-8d5c0b705e-10c0.zip/node_modules/safer-buffer/",\
        "packageDependencies": [\
          ["safer-buffer", "npm:2.1.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["scheduler", [\
      ["npm:0.26.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/scheduler-npm-0.26.0-980301a213-10c0.zip/node_modules/scheduler/",\
        "packageDependencies": [\
          ["scheduler", "npm:0.26.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["semver", [\
      ["npm:6.3.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/semver-npm-6.3.1-bcba31fdbe-10c0.zip/node_modules/semver/",\
        "packageDependencies": [\
          ["semver", "npm:6.3.1"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:7.7.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/semver-npm-7.7.1-4572475307-10c0.zip/node_modules/semver/",\
        "packageDependencies": [\
          ["semver", "npm:7.7.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["shebang-command", [\
      ["npm:2.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/shebang-command-npm-2.0.0-eb2b01921d-10c0.zip/node_modules/shebang-command/",\
        "packageDependencies": [\
          ["shebang-command", "npm:2.0.0"],\
          ["shebang-regex", "npm:3.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["shebang-regex", [\
      ["npm:3.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/shebang-regex-npm-3.0.0-899a0cd65e-10c0.zip/node_modules/shebang-regex/",\
        "packageDependencies": [\
          ["shebang-regex", "npm:3.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["signal-exit", [\
      ["npm:4.1.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/signal-exit-npm-4.1.0-61fb957687-10c0.zip/node_modules/signal-exit/",\
        "packageDependencies": [\
          ["signal-exit", "npm:4.1.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["smart-buffer", [\
      ["npm:4.2.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/smart-buffer-npm-4.2.0-5ac3f668bb-10c0.zip/node_modules/smart-buffer/",\
        "packageDependencies": [\
          ["smart-buffer", "npm:4.2.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["socks", [\
      ["npm:2.8.4", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/socks-npm-2.8.4-8194b86bd0-10c0.zip/node_modules/socks/",\
        "packageDependencies": [\
          ["socks", "npm:2.8.4"],\
          ["ip-address", "npm:9.0.5"],\
          ["smart-buffer", "npm:4.2.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["socks-proxy-agent", [\
      ["npm:8.0.5", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/socks-proxy-agent-npm-8.0.5-24d77a90dc-10c0.zip/node_modules/socks-proxy-agent/",\
        "packageDependencies": [\
          ["socks-proxy-agent", "npm:8.0.5"],\
          ["agent-base", "npm:7.1.3"],\
          ["debug", "virtual:e376c6d25689d1413f13b759a5649fe969efab30320e886cab81ece2b6daf8c4c74f642faff7228a9a286b4b82bc7bac5773e45f1085910307cd111b19a8cd17#npm:4.4.0"],\
          ["socks", "npm:2.8.4"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["source-map-js", [\
      ["npm:1.2.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/source-map-js-npm-1.2.1-b9a47d7e1a-10c0.zip/node_modules/source-map-js/",\
        "packageDependencies": [\
          ["source-map-js", "npm:1.2.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["sprintf-js", [\
      ["npm:1.1.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/sprintf-js-npm-1.1.3-b99efd75b2-10c0.zip/node_modules/sprintf-js/",\
        "packageDependencies": [\
          ["sprintf-js", "npm:1.1.3"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["ssri", [\
      ["npm:12.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/ssri-npm-12.0.0-97c0e53d2e-10c0.zip/node_modules/ssri/",\
        "packageDependencies": [\
          ["ssri", "npm:12.0.0"],\
          ["minipass", "npm:7.1.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["string-width", [\
      ["npm:4.2.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/string-width-npm-4.2.3-2c27177bae-10c0.zip/node_modules/string-width/",\
        "packageDependencies": [\
          ["string-width", "npm:4.2.3"],\
          ["emoji-regex", "npm:8.0.0"],\
          ["is-fullwidth-code-point", "npm:3.0.0"],\
          ["strip-ansi", "npm:6.0.1"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:5.1.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/string-width-npm-5.1.2-bf60531341-10c0.zip/node_modules/string-width/",\
        "packageDependencies": [\
          ["string-width", "npm:5.1.2"],\
          ["eastasianwidth", "npm:0.2.0"],\
          ["emoji-regex", "npm:9.2.2"],\
          ["strip-ansi", "npm:7.1.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["strip-ansi", [\
      ["npm:6.0.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/strip-ansi-npm-6.0.1-caddc7cb40-10c0.zip/node_modules/strip-ansi/",\
        "packageDependencies": [\
          ["strip-ansi", "npm:6.0.1"],\
          ["ansi-regex", "npm:5.0.1"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:7.1.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/strip-ansi-npm-7.1.0-7453b80b79-10c0.zip/node_modules/strip-ansi/",\
        "packageDependencies": [\
          ["strip-ansi", "npm:7.1.0"],\
          ["ansi-regex", "npm:6.1.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["strip-json-comments", [\
      ["npm:3.1.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/strip-json-comments-npm-3.1.1-dcb2324823-10c0.zip/node_modules/strip-json-comments/",\
        "packageDependencies": [\
          ["strip-json-comments", "npm:3.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["supports-color", [\
      ["npm:7.2.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/supports-color-npm-7.2.0-606bfcf7da-10c0.zip/node_modules/supports-color/",\
        "packageDependencies": [\
          ["supports-color", "npm:7.2.0"],\
          ["has-flag", "npm:4.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["tailwindcss", [\
      ["npm:4.1.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/tailwindcss-npm-4.1.1-2a3f9456fe-10c0.zip/node_modules/tailwindcss/",\
        "packageDependencies": [\
          ["tailwindcss", "npm:4.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["tapable", [\
      ["npm:2.2.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/tapable-npm-2.2.1-8cf5ff3039-10c0.zip/node_modules/tapable/",\
        "packageDependencies": [\
          ["tapable", "npm:2.2.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["tar", [\
      ["npm:7.4.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/tar-npm-7.4.3-1dbbd1ffc3-10c0.zip/node_modules/tar/",\
        "packageDependencies": [\
          ["tar", "npm:7.4.3"],\
          ["@isaacs/fs-minipass", "npm:4.0.1"],\
          ["chownr", "npm:3.0.0"],\
          ["minipass", "npm:7.1.2"],\
          ["minizlib", "npm:3.0.2"],\
          ["mkdirp", "npm:3.0.1"],\
          ["yallist", "npm:5.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["theme-testing", [\
      ["workspace:.", {\
        "packageLocation": "./",\
        "packageDependencies": [\
          ["theme-testing", "workspace:."],\
          ["@eslint/js", "npm:9.23.0"],\
          ["@tailwindcss/vite", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:4.1.1"],\
          ["@types/react", "npm:19.1.0"],\
          ["@types/react-dom", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:19.1.1"],\
          ["@vitejs/plugin-react", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:4.3.4"],\
          ["eslint", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:9.23.0"],\
          ["eslint-plugin-react-hooks", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:5.2.0"],\
          ["eslint-plugin-react-refresh", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:0.4.19"],\
          ["globals", "npm:15.15.0"],\
          ["react", "npm:19.1.0"],\
          ["react-dom", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:19.1.0"],\
          ["tailwindcss", "npm:4.1.1"],\
          ["typescript", "patch:typescript@npm%3A5.7.3#optional!builtin<compat/typescript>::version=5.7.3&hash=e012d7"],\
          ["typescript-eslint", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:8.29.0"],\
          ["vite", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:6.2.5"]\
        ],\
        "linkType": "SOFT"\
      }]\
    ]],\
    ["tinyglobby", [\
      ["npm:0.2.12", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/tinyglobby-npm-0.2.12-c8807de691-10c0.zip/node_modules/tinyglobby/",\
        "packageDependencies": [\
          ["tinyglobby", "npm:0.2.12"],\
          ["fdir", "virtual:c8807de691826868d9a774dfe20fb184997709c19896ccda6c1d382d679c7c2453bf893d9e0510372bd84566a8523db06ec721126eb95bb24e97992998e8a625#npm:6.4.3"],\
          ["picomatch", "npm:4.0.2"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["to-regex-range", [\
      ["npm:5.0.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/to-regex-range-npm-5.0.1-f1e8263b00-10c0.zip/node_modules/to-regex-range/",\
        "packageDependencies": [\
          ["to-regex-range", "npm:5.0.1"],\
          ["is-number", "npm:7.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["ts-api-utils", [\
      ["npm:2.1.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/ts-api-utils-npm-2.1.0-2549dfd29f-10c0.zip/node_modules/ts-api-utils/",\
        "packageDependencies": [\
          ["ts-api-utils", "npm:2.1.0"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:661ba055b73d038ae542acf8be53ffdf78498c031ebbcbfc0f9911d8c9f78f45b340388fe624d0bb6de2e5e29b7b66909e8d976cea0fa5ceba0580ab1acc3d3a#npm:2.1.0", {\
        "packageLocation": "./.yarn/__virtual__/ts-api-utils-virtual-739f249b6a/6/home/csillag/.yarn/berry/cache/ts-api-utils-npm-2.1.0-2549dfd29f-10c0.zip/node_modules/ts-api-utils/",\
        "packageDependencies": [\
          ["ts-api-utils", "virtual:661ba055b73d038ae542acf8be53ffdf78498c031ebbcbfc0f9911d8c9f78f45b340388fe624d0bb6de2e5e29b7b66909e8d976cea0fa5ceba0580ab1acc3d3a#npm:2.1.0"],\
          ["@types/typescript", null],\
          ["typescript", "patch:typescript@npm%3A5.7.3#optional!builtin<compat/typescript>::version=5.7.3&hash=e012d7"]\
        ],\
        "packagePeers": [\
          "@types/typescript",\
          "typescript"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["type-check", [\
      ["npm:0.4.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/type-check-npm-0.4.0-60565800ce-10c0.zip/node_modules/type-check/",\
        "packageDependencies": [\
          ["type-check", "npm:0.4.0"],\
          ["prelude-ls", "npm:1.2.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["typescript", [\
      ["patch:typescript@npm%3A5.7.3#optional!builtin<compat/typescript>::version=5.7.3&hash=e012d7", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/typescript-patch-3fb2719c11-10c0.zip/node_modules/typescript/",\
        "packageDependencies": [\
          ["typescript", "patch:typescript@npm%3A5.7.3#optional!builtin<compat/typescript>::version=5.7.3&hash=e012d7"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["typescript-eslint", [\
      ["npm:8.29.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/typescript-eslint-npm-8.29.0-f84221505d-10c0.zip/node_modules/typescript-eslint/",\
        "packageDependencies": [\
          ["typescript-eslint", "npm:8.29.0"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:8.29.0", {\
        "packageLocation": "./.yarn/__virtual__/typescript-eslint-virtual-3568de6a75/6/home/csillag/.yarn/berry/cache/typescript-eslint-npm-8.29.0-f84221505d-10c0.zip/node_modules/typescript-eslint/",\
        "packageDependencies": [\
          ["typescript-eslint", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:8.29.0"],\
          ["@types/eslint", null],\
          ["@types/typescript", null],\
          ["@typescript-eslint/eslint-plugin", "virtual:3568de6a75ac6f5f2e2f2216d91582220e968d85ff0f0ce26526a2e1b977a68878e32cfcf6ab61950419b063c087319ad2a416acce2efb43eefd247332dc1342#npm:8.29.0"],\
          ["@typescript-eslint/parser", "virtual:3568de6a75ac6f5f2e2f2216d91582220e968d85ff0f0ce26526a2e1b977a68878e32cfcf6ab61950419b063c087319ad2a416acce2efb43eefd247332dc1342#npm:8.29.0"],\
          ["@typescript-eslint/utils", "virtual:3568de6a75ac6f5f2e2f2216d91582220e968d85ff0f0ce26526a2e1b977a68878e32cfcf6ab61950419b063c087319ad2a416acce2efb43eefd247332dc1342#npm:8.29.0"],\
          ["eslint", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:9.23.0"],\
          ["typescript", "patch:typescript@npm%3A5.7.3#optional!builtin<compat/typescript>::version=5.7.3&hash=e012d7"]\
        ],\
        "packagePeers": [\
          "@types/eslint",\
          "@types/typescript",\
          "eslint",\
          "typescript"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["unique-filename", [\
      ["npm:4.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/unique-filename-npm-4.0.0-bfc100c4e3-10c0.zip/node_modules/unique-filename/",\
        "packageDependencies": [\
          ["unique-filename", "npm:4.0.0"],\
          ["unique-slug", "npm:5.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["unique-slug", [\
      ["npm:5.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/unique-slug-npm-5.0.0-11508c0469-10c0.zip/node_modules/unique-slug/",\
        "packageDependencies": [\
          ["unique-slug", "npm:5.0.0"],\
          ["imurmurhash", "npm:0.1.4"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["update-browserslist-db", [\
      ["npm:1.1.3", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/update-browserslist-db-npm-1.1.3-569a9be54b-10c0.zip/node_modules/update-browserslist-db/",\
        "packageDependencies": [\
          ["update-browserslist-db", "npm:1.1.3"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:2fdeb5face9914bb5fd94c70f084d153c80d2f09e5aabee010e4220b248dc23fca8f73c7beed0195e45ae6e2b1cb25388f709d7bfc4f00e473d573887faf4e5c#npm:1.1.3", {\
        "packageLocation": "./.yarn/__virtual__/update-browserslist-db-virtual-d61a3b9678/6/home/csillag/.yarn/berry/cache/update-browserslist-db-npm-1.1.3-569a9be54b-10c0.zip/node_modules/update-browserslist-db/",\
        "packageDependencies": [\
          ["update-browserslist-db", "virtual:2fdeb5face9914bb5fd94c70f084d153c80d2f09e5aabee010e4220b248dc23fca8f73c7beed0195e45ae6e2b1cb25388f709d7bfc4f00e473d573887faf4e5c#npm:1.1.3"],\
          ["@types/browserslist", null],\
          ["browserslist", "npm:4.24.4"],\
          ["escalade", "npm:3.2.0"],\
          ["picocolors", "npm:1.1.1"]\
        ],\
        "packagePeers": [\
          "@types/browserslist",\
          "browserslist"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["uri-js", [\
      ["npm:4.4.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/uri-js-npm-4.4.1-66d11cbcaf-10c0.zip/node_modules/uri-js/",\
        "packageDependencies": [\
          ["uri-js", "npm:4.4.1"],\
          ["punycode", "npm:2.3.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["vite", [\
      ["npm:6.2.5", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/vite-npm-6.2.5-813f4c9986-10c0.zip/node_modules/vite/",\
        "packageDependencies": [\
          ["vite", "npm:6.2.5"]\
        ],\
        "linkType": "SOFT"\
      }],\
      ["virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:6.2.5", {\
        "packageLocation": "./.yarn/__virtual__/vite-virtual-7d3684a99d/6/home/csillag/.yarn/berry/cache/vite-npm-6.2.5-813f4c9986-10c0.zip/node_modules/vite/",\
        "packageDependencies": [\
          ["vite", "virtual:8356a7acc25f383c9aa5fd84be2b13c86e459a3242a2294ebb399e741602853a2ed566ff3621563ad8308365862959e43a263a96bac535176dccf47bf67c511b#npm:6.2.5"],\
          ["@types/jiti", null],\
          ["@types/less", null],\
          ["@types/lightningcss", null],\
          ["@types/node", null],\
          ["@types/sass", null],\
          ["@types/sass-embedded", null],\
          ["@types/stylus", null],\
          ["@types/sugarss", null],\
          ["@types/terser", null],\
          ["@types/tsx", null],\
          ["@types/yaml", null],\
          ["esbuild", "npm:0.25.2"],\
          ["fsevents", "patch:fsevents@npm%3A2.3.3#optional!builtin<compat/fsevents>::version=2.3.3&hash=df0bf1"],\
          ["jiti", null],\
          ["less", null],\
          ["lightningcss", null],\
          ["postcss", "npm:8.5.3"],\
          ["rollup", "npm:4.39.0"],\
          ["sass", null],\
          ["sass-embedded", null],\
          ["stylus", null],\
          ["sugarss", null],\
          ["terser", null],\
          ["tsx", null],\
          ["yaml", null]\
        ],\
        "packagePeers": [\
          "@types/jiti",\
          "@types/less",\
          "@types/lightningcss",\
          "@types/node",\
          "@types/sass-embedded",\
          "@types/sass",\
          "@types/stylus",\
          "@types/sugarss",\
          "@types/terser",\
          "@types/tsx",\
          "@types/yaml",\
          "jiti",\
          "less",\
          "lightningcss",\
          "sass-embedded",\
          "sass",\
          "stylus",\
          "sugarss",\
          "terser",\
          "tsx",\
          "yaml"\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["which", [\
      ["npm:2.0.2", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/which-npm-2.0.2-320ddf72f7-10c0.zip/node_modules/which/",\
        "packageDependencies": [\
          ["which", "npm:2.0.2"],\
          ["isexe", "npm:2.0.0"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:5.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/which-npm-5.0.0-15aa39eb60-10c0.zip/node_modules/which/",\
        "packageDependencies": [\
          ["which", "npm:5.0.0"],\
          ["isexe", "npm:3.1.1"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["word-wrap", [\
      ["npm:1.2.5", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/word-wrap-npm-1.2.5-42d00c4b09-10c0.zip/node_modules/word-wrap/",\
        "packageDependencies": [\
          ["word-wrap", "npm:1.2.5"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["wrap-ansi", [\
      ["npm:7.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/wrap-ansi-npm-7.0.0-ad6e1a0554-10c0.zip/node_modules/wrap-ansi/",\
        "packageDependencies": [\
          ["wrap-ansi", "npm:7.0.0"],\
          ["ansi-styles", "npm:4.3.0"],\
          ["string-width", "npm:4.2.3"],\
          ["strip-ansi", "npm:6.0.1"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:8.1.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/wrap-ansi-npm-8.1.0-26a4e6ae28-10c0.zip/node_modules/wrap-ansi/",\
        "packageDependencies": [\
          ["wrap-ansi", "npm:8.1.0"],\
          ["ansi-styles", "npm:6.2.1"],\
          ["string-width", "npm:5.1.2"],\
          ["strip-ansi", "npm:7.1.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["yallist", [\
      ["npm:3.1.1", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/yallist-npm-3.1.1-a568a556b4-10c0.zip/node_modules/yallist/",\
        "packageDependencies": [\
          ["yallist", "npm:3.1.1"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:4.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/yallist-npm-4.0.0-b493d9e907-10c0.zip/node_modules/yallist/",\
        "packageDependencies": [\
          ["yallist", "npm:4.0.0"]\
        ],\
        "linkType": "HARD"\
      }],\
      ["npm:5.0.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/yallist-npm-5.0.0-8732dd9f1c-10c0.zip/node_modules/yallist/",\
        "packageDependencies": [\
          ["yallist", "npm:5.0.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]],\
    ["yocto-queue", [\
      ["npm:0.1.0", {\
        "packageLocation": "../../../../../home/csillag/.yarn/berry/cache/yocto-queue-npm-0.1.0-c6c9a7db29-10c0.zip/node_modules/yocto-queue/",\
        "packageDependencies": [\
          ["yocto-queue", "npm:0.1.0"]\
        ],\
        "linkType": "HARD"\
      }]\
    ]]\
  ]\
}';

function $$SETUP_STATE(hydrateRuntimeState, basePath) {
  return hydrateRuntimeState(JSON.parse(RAW_RUNTIME_STATE), {basePath: basePath || __dirname});
}

const fs = require('fs');
const path$1 = require('path');
const stream = require('stream');
const nodeUtils = require('util');
const zlib = require('zlib');
const crypto = require('crypto');
const os = require('os');
const events = require('events');
const require$$0 = require('module');
const StringDecoder = require('string_decoder');
const url = require('url');
const buffer = require('buffer');
const readline = require('readline');
const assert = require('assert');

function _interopNamespaceDefault(e) {
	const n = Object.create(null, { [Symbol.toStringTag]: { value: 'Module' } });
	if (e) {
		for (const k in e) {
			if (k !== 'default') {
				const d = Object.getOwnPropertyDescriptor(e, k);
				Object.defineProperty(n, k, d.get ? d : {
					enumerable: true,
					get: () => e[k]
				});
			}
		}
	}
	n.default = e;
	return Object.freeze(n);
}

const nodeUtils__namespace = /*#__PURE__*/_interopNamespaceDefault(nodeUtils);

function getDefaultExportFromCjs (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

const S_IFMT = 61440;
const S_IFDIR = 16384;
const S_IFREG = 32768;
const S_IFLNK = 40960;
const SAFE_TIME = 456789e3;

function makeError$1(code, message) {
  return Object.assign(new Error(`${code}: ${message}`), { code });
}
function EBUSY(message) {
  return makeError$1(`EBUSY`, message);
}
function ENOSYS(message, reason) {
  return makeError$1(`ENOSYS`, `${message}, ${reason}`);
}
function EINVAL(reason) {
  return makeError$1(`EINVAL`, `invalid argument, ${reason}`);
}
function EBADF(reason) {
  return makeError$1(`EBADF`, `bad file descriptor, ${reason}`);
}
function ENOENT(reason) {
  return makeError$1(`ENOENT`, `no such file or directory, ${reason}`);
}
function ENOTDIR(reason) {
  return makeError$1(`ENOTDIR`, `not a directory, ${reason}`);
}
function EISDIR(reason) {
  return makeError$1(`EISDIR`, `illegal operation on a directory, ${reason}`);
}
function EEXIST(reason) {
  return makeError$1(`EEXIST`, `file already exists, ${reason}`);
}
function EROFS(reason) {
  return makeError$1(`EROFS`, `read-only filesystem, ${reason}`);
}
function ENOTEMPTY(reason) {
  return makeError$1(`ENOTEMPTY`, `directory not empty, ${reason}`);
}
function EOPNOTSUPP(reason) {
  return makeError$1(`EOPNOTSUPP`, `operation not supported, ${reason}`);
}
function ERR_DIR_CLOSED() {
  return makeError$1(`ERR_DIR_CLOSED`, `Directory handle was closed`);
}

const DEFAULT_MODE = S_IFREG | 420;
class DirEntry {
  name = ``;
  path = ``;
  mode = 0;
  isBlockDevice() {
    return false;
  }
  isCharacterDevice() {
    return false;
  }
  isDirectory() {
    return (this.mode & S_IFMT) === S_IFDIR;
  }
  isFIFO() {
    return false;
  }
  isFile() {
    return (this.mode & S_IFMT) === S_IFREG;
  }
  isSocket() {
    return false;
  }
  isSymbolicLink() {
    return (this.mode & S_IFMT) === S_IFLNK;
  }
}
class StatEntry {
  uid = 0;
  gid = 0;
  size = 0;
  blksize = 0;
  atimeMs = 0;
  mtimeMs = 0;
  ctimeMs = 0;
  birthtimeMs = 0;
  atime = /* @__PURE__ */ new Date(0);
  mtime = /* @__PURE__ */ new Date(0);
  ctime = /* @__PURE__ */ new Date(0);
  birthtime = /* @__PURE__ */ new Date(0);
  dev = 0;
  ino = 0;
  mode = DEFAULT_MODE;
  nlink = 1;
  rdev = 0;
  blocks = 1;
  isBlockDevice() {
    return false;
  }
  isCharacterDevice() {
    return false;
  }
  isDirectory() {
    return (this.mode & S_IFMT) === S_IFDIR;
  }
  isFIFO() {
    return false;
  }
  isFile() {
    return (this.mode & S_IFMT) === S_IFREG;
  }
  isSocket() {
    return false;
  }
  isSymbolicLink() {
    return (this.mode & S_IFMT) === S_IFLNK;
  }
}
class BigIntStatsEntry {
  uid = BigInt(0);
  gid = BigInt(0);
  size = BigInt(0);
  blksize = BigInt(0);
  atimeMs = BigInt(0);
  mtimeMs = BigInt(0);
  ctimeMs = BigInt(0);
  birthtimeMs = BigInt(0);
  atimeNs = BigInt(0);
  mtimeNs = BigInt(0);
  ctimeNs = BigInt(0);
  birthtimeNs = BigInt(0);
  atime = /* @__PURE__ */ new Date(0);
  mtime = /* @__PURE__ */ new Date(0);
  ctime = /* @__PURE__ */ new Date(0);
  birthtime = /* @__PURE__ */ new Date(0);
  dev = BigInt(0);
  ino = BigInt(0);
  mode = BigInt(DEFAULT_MODE);
  nlink = BigInt(1);
  rdev = BigInt(0);
  blocks = BigInt(1);
  isBlockDevice() {
    return false;
  }
  isCharacterDevice() {
    return false;
  }
  isDirectory() {
    return (this.mode & BigInt(S_IFMT)) === BigInt(S_IFDIR);
  }
  isFIFO() {
    return false;
  }
  isFile() {
    return (this.mode & BigInt(S_IFMT)) === BigInt(S_IFREG);
  }
  isSocket() {
    return false;
  }
  isSymbolicLink() {
    return (this.mode & BigInt(S_IFMT)) === BigInt(S_IFLNK);
  }
}
function makeDefaultStats() {
  return new StatEntry();
}
function clearStats(stats) {
  for (const key in stats) {
    if (Object.hasOwn(stats, key)) {
      const element = stats[key];
      if (typeof element === `number`) {
        stats[key] = 0;
      } else if (typeof element === `bigint`) {
        stats[key] = BigInt(0);
      } else if (nodeUtils__namespace.types.isDate(element)) {
        stats[key] = /* @__PURE__ */ new Date(0);
      }
    }
  }
  return stats;
}
function convertToBigIntStats(stats) {
  const bigintStats = new BigIntStatsEntry();
  for (const key in stats) {
    if (Object.hasOwn(stats, key)) {
      const element = stats[key];
      if (typeof element === `number`) {
        bigintStats[key] = BigInt(element);
      } else if (nodeUtils__namespace.types.isDate(element)) {
        bigintStats[key] = new Date(element);
      }
    }
  }
  bigintStats.atimeNs = bigintStats.atimeMs * BigInt(1e6);
  bigintStats.mtimeNs = bigintStats.mtimeMs * BigInt(1e6);
  bigintStats.ctimeNs = bigintStats.ctimeMs * BigInt(1e6);
  bigintStats.birthtimeNs = bigintStats.birthtimeMs * BigInt(1e6);
  return bigintStats;
}
function areStatsEqual(a, b) {
  if (a.atimeMs !== b.atimeMs)
    return false;
  if (a.birthtimeMs !== b.birthtimeMs)
    return false;
  if (a.blksize !== b.blksize)
    return false;
  if (a.blocks !== b.blocks)
    return false;
  if (a.ctimeMs !== b.ctimeMs)
    return false;
  if (a.dev !== b.dev)
    return false;
  if (a.gid !== b.gid)
    return false;
  if (a.ino !== b.ino)
    return false;
  if (a.isBlockDevice() !== b.isBlockDevice())
    return false;
  if (a.isCharacterDevice() !== b.isCharacterDevice())
    return false;
  if (a.isDirectory() !== b.isDirectory())
    return false;
  if (a.isFIFO() !== b.isFIFO())
    return false;
  if (a.isFile() !== b.isFile())
    return false;
  if (a.isSocket() !== b.isSocket())
    return false;
  if (a.isSymbolicLink() !== b.isSymbolicLink())
    return false;
  if (a.mode !== b.mode)
    return false;
  if (a.mtimeMs !== b.mtimeMs)
    return false;
  if (a.nlink !== b.nlink)
    return false;
  if (a.rdev !== b.rdev)
    return false;
  if (a.size !== b.size)
    return false;
  if (a.uid !== b.uid)
    return false;
  const aN = a;
  const bN = b;
  if (aN.atimeNs !== bN.atimeNs)
    return false;
  if (aN.mtimeNs !== bN.mtimeNs)
    return false;
  if (aN.ctimeNs !== bN.ctimeNs)
    return false;
  if (aN.birthtimeNs !== bN.birthtimeNs)
    return false;
  return true;
}

const PortablePath = {
  root: `/`,
  dot: `.`,
  parent: `..`
};
const Filename = {
  home: `~`,
  nodeModules: `node_modules`,
  manifest: `package.json`,
  lockfile: `yarn.lock`,
  virtual: `__virtual__`,
  /**
   * @deprecated
   */
  pnpJs: `.pnp.js`,
  pnpCjs: `.pnp.cjs`,
  pnpData: `.pnp.data.json`,
  pnpEsmLoader: `.pnp.loader.mjs`,
  rc: `.yarnrc.yml`,
  env: `.env`
};
const npath = Object.create(path$1);
const ppath = Object.create(path$1.posix);
npath.cwd = () => process.cwd();
ppath.cwd = process.platform === `win32` ? () => toPortablePath(process.cwd()) : process.cwd;
if (process.platform === `win32`) {
  ppath.resolve = (...segments) => {
    if (segments.length > 0 && ppath.isAbsolute(segments[0])) {
      return path$1.posix.resolve(...segments);
    } else {
      return path$1.posix.resolve(ppath.cwd(), ...segments);
    }
  };
}
const contains = function(pathUtils, from, to) {
  from = pathUtils.normalize(from);
  to = pathUtils.normalize(to);
  if (from === to)
    return `.`;
  if (!from.endsWith(pathUtils.sep))
    from = from + pathUtils.sep;
  if (to.startsWith(from)) {
    return to.slice(from.length);
  } else {
    return null;
  }
};
npath.contains = (from, to) => contains(npath, from, to);
ppath.contains = (from, to) => contains(ppath, from, to);
const WINDOWS_PATH_REGEXP = /^([a-zA-Z]:.*)$/;
const UNC_WINDOWS_PATH_REGEXP = /^\/\/(\.\/)?(.*)$/;
const PORTABLE_PATH_REGEXP = /^\/([a-zA-Z]:.*)$/;
const UNC_PORTABLE_PATH_REGEXP = /^\/unc\/(\.dot\/)?(.*)$/;
function fromPortablePathWin32(p) {
  let portablePathMatch, uncPortablePathMatch;
  if (portablePathMatch = p.match(PORTABLE_PATH_REGEXP))
    p = portablePathMatch[1];
  else if (uncPortablePathMatch = p.match(UNC_PORTABLE_PATH_REGEXP))
    p = `\\\\${uncPortablePathMatch[1] ? `.\\` : ``}${uncPortablePathMatch[2]}`;
  else
    return p;
  return p.replace(/\//g, `\\`);
}
function toPortablePathWin32(p) {
  p = p.replace(/\\/g, `/`);
  let windowsPathMatch, uncWindowsPathMatch;
  if (windowsPathMatch = p.match(WINDOWS_PATH_REGEXP))
    p = `/${windowsPathMatch[1]}`;
  else if (uncWindowsPathMatch = p.match(UNC_WINDOWS_PATH_REGEXP))
    p = `/unc/${uncWindowsPathMatch[1] ? `.dot/` : ``}${uncWindowsPathMatch[2]}`;
  return p;
}
const toPortablePath = process.platform === `win32` ? toPortablePathWin32 : (p) => p;
const fromPortablePath = process.platform === `win32` ? fromPortablePathWin32 : (p) => p;
npath.fromPortablePath = fromPortablePath;
npath.toPortablePath = toPortablePath;
function convertPath(targetPathUtils, sourcePath) {
  return targetPathUtils === npath ? fromPortablePath(sourcePath) : toPortablePath(sourcePath);
}

const defaultTime = new Date(SAFE_TIME * 1e3);
const defaultTimeMs = defaultTime.getTime();
async function copyPromise(destinationFs, destination, sourceFs, source, opts) {
  const normalizedDestination = destinationFs.pathUtils.normalize(destination);
  const normalizedSource = sourceFs.pathUtils.normalize(source);
  const prelayout = [];
  const postlayout = [];
  const { atime, mtime } = opts.stableTime ? { atime: defaultTime, mtime: defaultTime } : await sourceFs.lstatPromise(normalizedSource);
  await destinationFs.mkdirpPromise(destinationFs.pathUtils.dirname(destination), { utimes: [atime, mtime] });
  await copyImpl(prelayout, postlayout, destinationFs, normalizedDestination, sourceFs, normalizedSource, { ...opts, didParentExist: true });
  for (const operation of prelayout)
    await operation();
  await Promise.all(postlayout.map((operation) => {
    return operation();
  }));
}
async function copyImpl(prelayout, postlayout, destinationFs, destination, sourceFs, source, opts) {
  const destinationStat = opts.didParentExist ? await maybeLStat(destinationFs, destination) : null;
  const sourceStat = await sourceFs.lstatPromise(source);
  const { atime, mtime } = opts.stableTime ? { atime: defaultTime, mtime: defaultTime } : sourceStat;
  let updated;
  switch (true) {
    case sourceStat.isDirectory():
      {
        updated = await copyFolder(prelayout, postlayout, destinationFs, destination, destinationStat, sourceFs, source, sourceStat, opts);
      }
      break;
    case sourceStat.isFile():
      {
        updated = await copyFile(prelayout, postlayout, destinationFs, destination, destinationStat, sourceFs, source, sourceStat, opts);
      }
      break;
    case sourceStat.isSymbolicLink():
      {
        updated = await copySymlink(prelayout, postlayout, destinationFs, destination, destinationStat, sourceFs, source, sourceStat, opts);
      }
      break;
    default:
      {
        throw new Error(`Unsupported file type (${sourceStat.mode})`);
      }
  }
  if (opts.linkStrategy?.type !== `HardlinkFromIndex` || !sourceStat.isFile()) {
    if (updated || destinationStat?.mtime?.getTime() !== mtime.getTime() || destinationStat?.atime?.getTime() !== atime.getTime()) {
      postlayout.push(() => destinationFs.lutimesPromise(destination, atime, mtime));
      updated = true;
    }
    if (destinationStat === null || (destinationStat.mode & 511) !== (sourceStat.mode & 511)) {
      postlayout.push(() => destinationFs.chmodPromise(destination, sourceStat.mode & 511));
      updated = true;
    }
  }
  return updated;
}
async function maybeLStat(baseFs, p) {
  try {
    return await baseFs.lstatPromise(p);
  } catch (e) {
    return null;
  }
}
async function copyFolder(prelayout, postlayout, destinationFs, destination, destinationStat, sourceFs, source, sourceStat, opts) {
  if (destinationStat !== null && !destinationStat.isDirectory()) {
    if (opts.overwrite) {
      prelayout.push(async () => destinationFs.removePromise(destination));
      destinationStat = null;
    } else {
      return false;
    }
  }
  let updated = false;
  if (destinationStat === null) {
    prelayout.push(async () => {
      try {
        await destinationFs.mkdirPromise(destination, { mode: sourceStat.mode });
      } catch (err) {
        if (err.code !== `EEXIST`) {
          throw err;
        }
      }
    });
    updated = true;
  }
  const entries = await sourceFs.readdirPromise(source);
  const nextOpts = opts.didParentExist && !destinationStat ? { ...opts, didParentExist: false } : opts;
  if (opts.stableSort) {
    for (const entry of entries.sort()) {
      if (await copyImpl(prelayout, postlayout, destinationFs, destinationFs.pathUtils.join(destination, entry), sourceFs, sourceFs.pathUtils.join(source, entry), nextOpts)) {
        updated = true;
      }
    }
  } else {
    const entriesUpdateStatus = await Promise.all(entries.map(async (entry) => {
      await copyImpl(prelayout, postlayout, destinationFs, destinationFs.pathUtils.join(destination, entry), sourceFs, sourceFs.pathUtils.join(source, entry), nextOpts);
    }));
    if (entriesUpdateStatus.some((status) => status)) {
      updated = true;
    }
  }
  return updated;
}
async function copyFileViaIndex(prelayout, postlayout, destinationFs, destination, destinationStat, sourceFs, source, sourceStat, opts, linkStrategy) {
  const sourceHash = await sourceFs.checksumFilePromise(source, { algorithm: `sha1` });
  const indexPath = destinationFs.pathUtils.join(linkStrategy.indexPath, sourceHash.slice(0, 2), `${sourceHash}.dat`);
  let AtomicBehavior;
  ((AtomicBehavior2) => {
    AtomicBehavior2[AtomicBehavior2["Lock"] = 0] = "Lock";
    AtomicBehavior2[AtomicBehavior2["Rename"] = 1] = "Rename";
  })(AtomicBehavior || (AtomicBehavior = {}));
  let atomicBehavior = 1 /* Rename */;
  let indexStat = await maybeLStat(destinationFs, indexPath);
  if (destinationStat) {
    const isDestinationHardlinkedFromIndex = indexStat && destinationStat.dev === indexStat.dev && destinationStat.ino === indexStat.ino;
    const isIndexModified = indexStat?.mtimeMs !== defaultTimeMs;
    if (isDestinationHardlinkedFromIndex) {
      if (isIndexModified && linkStrategy.autoRepair) {
        atomicBehavior = 0 /* Lock */;
        indexStat = null;
      }
    }
    if (!isDestinationHardlinkedFromIndex) {
      if (opts.overwrite) {
        prelayout.push(async () => destinationFs.removePromise(destination));
        destinationStat = null;
      } else {
        return false;
      }
    }
  }
  const tempPath = !indexStat && atomicBehavior === 1 /* Rename */ ? `${indexPath}.${Math.floor(Math.random() * 4294967296).toString(16).padStart(8, `0`)}` : null;
  let tempPathCleaned = false;
  prelayout.push(async () => {
    if (!indexStat) {
      if (atomicBehavior === 0 /* Lock */) {
        await destinationFs.lockPromise(indexPath, async () => {
          const content = await sourceFs.readFilePromise(source);
          await destinationFs.writeFilePromise(indexPath, content);
        });
      }
      if (atomicBehavior === 1 /* Rename */ && tempPath) {
        const content = await sourceFs.readFilePromise(source);
        await destinationFs.writeFilePromise(tempPath, content);
        try {
          await destinationFs.linkPromise(tempPath, indexPath);
        } catch (err) {
          if (err.code === `EEXIST`) {
            tempPathCleaned = true;
            await destinationFs.unlinkPromise(tempPath);
          } else {
            throw err;
          }
        }
      }
    }
    if (!destinationStat) {
      await destinationFs.linkPromise(indexPath, destination);
    }
  });
  postlayout.push(async () => {
    if (!indexStat)
      await destinationFs.lutimesPromise(indexPath, defaultTime, defaultTime);
    if (tempPath && !tempPathCleaned) {
      await destinationFs.unlinkPromise(tempPath);
    }
  });
  return false;
}
async function copyFileDirect(prelayout, postlayout, destinationFs, destination, destinationStat, sourceFs, source, sourceStat, opts) {
  if (destinationStat !== null) {
    if (opts.overwrite) {
      prelayout.push(async () => destinationFs.removePromise(destination));
      destinationStat = null;
    } else {
      return false;
    }
  }
  prelayout.push(async () => {
    const content = await sourceFs.readFilePromise(source);
    await destinationFs.writeFilePromise(destination, content);
  });
  return true;
}
async function copyFile(prelayout, postlayout, destinationFs, destination, destinationStat, sourceFs, source, sourceStat, opts) {
  if (opts.linkStrategy?.type === `HardlinkFromIndex`) {
    return copyFileViaIndex(prelayout, postlayout, destinationFs, destination, destinationStat, sourceFs, source, sourceStat, opts, opts.linkStrategy);
  } else {
    return copyFileDirect(prelayout, postlayout, destinationFs, destination, destinationStat, sourceFs, source, sourceStat, opts);
  }
}
async function copySymlink(prelayout, postlayout, destinationFs, destination, destinationStat, sourceFs, source, sourceStat, opts) {
  if (destinationStat !== null) {
    if (opts.overwrite) {
      prelayout.push(async () => destinationFs.removePromise(destination));
      destinationStat = null;
    } else {
      return false;
    }
  }
  prelayout.push(async () => {
    await destinationFs.symlinkPromise(convertPath(destinationFs.pathUtils, await sourceFs.readlinkPromise(source)), destination);
  });
  return true;
}

class CustomDir {
  constructor(path, nextDirent, opts = {}) {
    this.path = path;
    this.nextDirent = nextDirent;
    this.opts = opts;
  }
  closed = false;
  throwIfClosed() {
    if (this.closed) {
      throw ERR_DIR_CLOSED();
    }
  }
  async *[Symbol.asyncIterator]() {
    try {
      let dirent;
      while ((dirent = await this.read()) !== null) {
        yield dirent;
      }
    } finally {
      await this.close();
    }
  }
  read(cb) {
    const dirent = this.readSync();
    if (typeof cb !== `undefined`)
      return cb(null, dirent);
    return Promise.resolve(dirent);
  }
  readSync() {
    this.throwIfClosed();
    return this.nextDirent();
  }
  close(cb) {
    this.closeSync();
    if (typeof cb !== `undefined`)
      return cb(null);
    return Promise.resolve();
  }
  closeSync() {
    this.throwIfClosed();
    this.opts.onClose?.();
    this.closed = true;
  }
}
function opendir(fakeFs, path, entries, opts) {
  const nextDirent = () => {
    const filename = entries.shift();
    if (typeof filename === `undefined`)
      return null;
    const entryPath = fakeFs.pathUtils.join(path, filename);
    return Object.assign(fakeFs.statSync(entryPath), {
      name: filename,
      path: void 0
    });
  };
  return new CustomDir(path, nextDirent, opts);
}

function assertStatus(current, expected) {
  if (current !== expected) {
    throw new Error(`Invalid StatWatcher status: expected '${expected}', got '${current}'`);
  }
}
class CustomStatWatcher extends events.EventEmitter {
  fakeFs;
  path;
  bigint;
  status = "ready" /* Ready */;
  changeListeners = /* @__PURE__ */ new Map();
  lastStats;
  startTimeout = null;
  static create(fakeFs, path, opts) {
    const statWatcher = new CustomStatWatcher(fakeFs, path, opts);
    statWatcher.start();
    return statWatcher;
  }
  constructor(fakeFs, path, { bigint = false } = {}) {
    super();
    this.fakeFs = fakeFs;
    this.path = path;
    this.bigint = bigint;
    this.lastStats = this.stat();
  }
  start() {
    assertStatus(this.status, "ready" /* Ready */);
    this.status = "running" /* Running */;
    this.startTimeout = setTimeout(() => {
      this.startTimeout = null;
      if (!this.fakeFs.existsSync(this.path)) {
        this.emit("change" /* Change */, this.lastStats, this.lastStats);
      }
    }, 3);
  }
  stop() {
    assertStatus(this.status, "running" /* Running */);
    this.status = "stopped" /* Stopped */;
    if (this.startTimeout !== null) {
      clearTimeout(this.startTimeout);
      this.startTimeout = null;
    }
    this.emit("stop" /* Stop */);
  }
  stat() {
    try {
      return this.fakeFs.statSync(this.path, { bigint: this.bigint });
    } catch (error) {
      const statInstance = this.bigint ? new BigIntStatsEntry() : new StatEntry();
      return clearStats(statInstance);
    }
  }
  /**
   * Creates an interval whose callback compares the current stats with the previous stats and notifies all listeners in case of changes.
   *
   * @param opts.persistent Decides whether the interval should be immediately unref-ed.
   */
  makeInterval(opts) {
    const interval = setInterval(() => {
      const currentStats = this.stat();
      const previousStats = this.lastStats;
      if (areStatsEqual(currentStats, previousStats))
        return;
      this.lastStats = currentStats;
      this.emit("change" /* Change */, currentStats, previousStats);
    }, opts.interval);
    return opts.persistent ? interval : interval.unref();
  }
  /**
   * Registers a listener and assigns it an interval.
   */
  registerChangeListener(listener, opts) {
    this.addListener("change" /* Change */, listener);
    this.changeListeners.set(listener, this.makeInterval(opts));
  }
  /**
   * Unregisters the listener and clears the assigned interval.
   */
  unregisterChangeListener(listener) {
    this.removeListener("change" /* Change */, listener);
    const interval = this.changeListeners.get(listener);
    if (typeof interval !== `undefined`)
      clearInterval(interval);
    this.changeListeners.delete(listener);
  }
  /**
   * Unregisters all listeners and clears all assigned intervals.
   */
  unregisterAllChangeListeners() {
    for (const listener of this.changeListeners.keys()) {
      this.unregisterChangeListener(listener);
    }
  }
  hasChangeListeners() {
    return this.changeListeners.size > 0;
  }
  /**
   * Refs all stored intervals.
   */
  ref() {
    for (const interval of this.changeListeners.values())
      interval.ref();
    return this;
  }
  /**
   * Unrefs all stored intervals.
   */
  unref() {
    for (const interval of this.changeListeners.values())
      interval.unref();
    return this;
  }
}

const statWatchersByFakeFS = /* @__PURE__ */ new WeakMap();
function watchFile(fakeFs, path, a, b) {
  let bigint;
  let persistent;
  let interval;
  let listener;
  switch (typeof a) {
    case `function`:
      {
        bigint = false;
        persistent = true;
        interval = 5007;
        listener = a;
      }
      break;
    default:
      {
        ({
          bigint = false,
          persistent = true,
          interval = 5007
        } = a);
        listener = b;
      }
      break;
  }
  let statWatchers = statWatchersByFakeFS.get(fakeFs);
  if (typeof statWatchers === `undefined`)
    statWatchersByFakeFS.set(fakeFs, statWatchers = /* @__PURE__ */ new Map());
  let statWatcher = statWatchers.get(path);
  if (typeof statWatcher === `undefined`) {
    statWatcher = CustomStatWatcher.create(fakeFs, path, { bigint });
    statWatchers.set(path, statWatcher);
  }
  statWatcher.registerChangeListener(listener, { persistent, interval });
  return statWatcher;
}
function unwatchFile(fakeFs, path, cb) {
  const statWatchers = statWatchersByFakeFS.get(fakeFs);
  if (typeof statWatchers === `undefined`)
    return;
  const statWatcher = statWatchers.get(path);
  if (typeof statWatcher === `undefined`)
    return;
  if (typeof cb === `undefined`)
    statWatcher.unregisterAllChangeListeners();
  else
    statWatcher.unregisterChangeListener(cb);
  if (!statWatcher.hasChangeListeners()) {
    statWatcher.stop();
    statWatchers.delete(path);
  }
}
function unwatchAllFiles(fakeFs) {
  const statWatchers = statWatchersByFakeFS.get(fakeFs);
  if (typeof statWatchers === `undefined`)
    return;
  for (const path of statWatchers.keys()) {
    unwatchFile(fakeFs, path);
  }
}

class FakeFS {
  pathUtils;
  constructor(pathUtils) {
    this.pathUtils = pathUtils;
  }
  async *genTraversePromise(init, { stableSort = false } = {}) {
    const stack = [init];
    while (stack.length > 0) {
      const p = stack.shift();
      const entry = await this.lstatPromise(p);
      if (entry.isDirectory()) {
        const entries = await this.readdirPromise(p);
        if (stableSort) {
          for (const entry2 of entries.sort()) {
            stack.push(this.pathUtils.join(p, entry2));
          }
        } else {
          throw new Error(`Not supported`);
        }
      } else {
        yield p;
      }
    }
  }
  async checksumFilePromise(path, { algorithm = `sha512` } = {}) {
    const fd = await this.openPromise(path, `r`);
    try {
      const CHUNK_SIZE = 65536;
      const chunk = Buffer.allocUnsafeSlow(CHUNK_SIZE);
      const hash = crypto.createHash(algorithm);
      let bytesRead = 0;
      while ((bytesRead = await this.readPromise(fd, chunk, 0, CHUNK_SIZE)) !== 0)
        hash.update(bytesRead === CHUNK_SIZE ? chunk : chunk.slice(0, bytesRead));
      return hash.digest(`hex`);
    } finally {
      await this.closePromise(fd);
    }
  }
  async removePromise(p, { recursive = true, maxRetries = 5 } = {}) {
    let stat;
    try {
      stat = await this.lstatPromise(p);
    } catch (error) {
      if (error.code === `ENOENT`) {
        return;
      } else {
        throw error;
      }
    }
    if (stat.isDirectory()) {
      if (recursive) {
        const entries = await this.readdirPromise(p);
        await Promise.all(entries.map((entry) => {
          return this.removePromise(this.pathUtils.resolve(p, entry));
        }));
      }
      for (let t = 0; t <= maxRetries; t++) {
        try {
          await this.rmdirPromise(p);
          break;
        } catch (error) {
          if (error.code !== `EBUSY` && error.code !== `ENOTEMPTY`) {
            throw error;
          } else if (t < maxRetries) {
            await new Promise((resolve) => setTimeout(resolve, t * 100));
          }
        }
      }
    } else {
      await this.unlinkPromise(p);
    }
  }
  removeSync(p, { recursive = true } = {}) {
    let stat;
    try {
      stat = this.lstatSync(p);
    } catch (error) {
      if (error.code === `ENOENT`) {
        return;
      } else {
        throw error;
      }
    }
    if (stat.isDirectory()) {
      if (recursive)
        for (const entry of this.readdirSync(p))
          this.removeSync(this.pathUtils.resolve(p, entry));
      this.rmdirSync(p);
    } else {
      this.unlinkSync(p);
    }
  }
  async mkdirpPromise(p, { chmod, utimes } = {}) {
    p = this.resolve(p);
    if (p === this.pathUtils.dirname(p))
      return void 0;
    const parts = p.split(this.pathUtils.sep);
    let createdDirectory;
    for (let u = 2; u <= parts.length; ++u) {
      const subPath = parts.slice(0, u).join(this.pathUtils.sep);
      if (!this.existsSync(subPath)) {
        try {
          await this.mkdirPromise(subPath);
        } catch (error) {
          if (error.code === `EEXIST`) {
            continue;
          } else {
            throw error;
          }
        }
        createdDirectory ??= subPath;
        if (chmod != null)
          await this.chmodPromise(subPath, chmod);
        if (utimes != null) {
          await this.utimesPromise(subPath, utimes[0], utimes[1]);
        } else {
          const parentStat = await this.statPromise(this.pathUtils.dirname(subPath));
          await this.utimesPromise(subPath, parentStat.atime, parentStat.mtime);
        }
      }
    }
    return createdDirectory;
  }
  mkdirpSync(p, { chmod, utimes } = {}) {
    p = this.resolve(p);
    if (p === this.pathUtils.dirname(p))
      return void 0;
    const parts = p.split(this.pathUtils.sep);
    let createdDirectory;
    for (let u = 2; u <= parts.length; ++u) {
      const subPath = parts.slice(0, u).join(this.pathUtils.sep);
      if (!this.existsSync(subPath)) {
        try {
          this.mkdirSync(subPath);
        } catch (error) {
          if (error.code === `EEXIST`) {
            continue;
          } else {
            throw error;
          }
        }
        createdDirectory ??= subPath;
        if (chmod != null)
          this.chmodSync(subPath, chmod);
        if (utimes != null) {
          this.utimesSync(subPath, utimes[0], utimes[1]);
        } else {
          const parentStat = this.statSync(this.pathUtils.dirname(subPath));
          this.utimesSync(subPath, parentStat.atime, parentStat.mtime);
        }
      }
    }
    return createdDirectory;
  }
  async copyPromise(destination, source, { baseFs = this, overwrite = true, stableSort = false, stableTime = false, linkStrategy = null } = {}) {
    return await copyPromise(this, destination, baseFs, source, { overwrite, stableSort, stableTime, linkStrategy });
  }
  copySync(destination, source, { baseFs = this, overwrite = true } = {}) {
    const stat = baseFs.lstatSync(source);
    const exists = this.existsSync(destination);
    if (stat.isDirectory()) {
      this.mkdirpSync(destination);
      const directoryListing = baseFs.readdirSync(source);
      for (const entry of directoryListing) {
        this.copySync(this.pathUtils.join(destination, entry), baseFs.pathUtils.join(source, entry), { baseFs, overwrite });
      }
    } else if (stat.isFile()) {
      if (!exists || overwrite) {
        if (exists)
          this.removeSync(destination);
        const content = baseFs.readFileSync(source);
        this.writeFileSync(destination, content);
      }
    } else if (stat.isSymbolicLink()) {
      if (!exists || overwrite) {
        if (exists)
          this.removeSync(destination);
        const target = baseFs.readlinkSync(source);
        this.symlinkSync(convertPath(this.pathUtils, target), destination);
      }
    } else {
      throw new Error(`Unsupported file type (file: ${source}, mode: 0o${stat.mode.toString(8).padStart(6, `0`)})`);
    }
    const mode = stat.mode & 511;
    this.chmodSync(destination, mode);
  }
  async changeFilePromise(p, content, opts = {}) {
    if (Buffer.isBuffer(content)) {
      return this.changeFileBufferPromise(p, content, opts);
    } else {
      return this.changeFileTextPromise(p, content, opts);
    }
  }
  async changeFileBufferPromise(p, content, { mode } = {}) {
    let current = Buffer.alloc(0);
    try {
      current = await this.readFilePromise(p);
    } catch (error) {
    }
    if (Buffer.compare(current, content) === 0)
      return;
    await this.writeFilePromise(p, content, { mode });
  }
  async changeFileTextPromise(p, content, { automaticNewlines, mode } = {}) {
    let current = ``;
    try {
      current = await this.readFilePromise(p, `utf8`);
    } catch (error) {
    }
    const normalizedContent = automaticNewlines ? normalizeLineEndings(current, content) : content;
    if (current === normalizedContent)
      return;
    await this.writeFilePromise(p, normalizedContent, { mode });
  }
  changeFileSync(p, content, opts = {}) {
    if (Buffer.isBuffer(content)) {
      return this.changeFileBufferSync(p, content, opts);
    } else {
      return this.changeFileTextSync(p, content, opts);
    }
  }
  changeFileBufferSync(p, content, { mode } = {}) {
    let current = Buffer.alloc(0);
    try {
      current = this.readFileSync(p);
    } catch (error) {
    }
    if (Buffer.compare(current, content) === 0)
      return;
    this.writeFileSync(p, content, { mode });
  }
  changeFileTextSync(p, content, { automaticNewlines = false, mode } = {}) {
    let current = ``;
    try {
      current = this.readFileSync(p, `utf8`);
    } catch (error) {
    }
    const normalizedContent = automaticNewlines ? normalizeLineEndings(current, content) : content;
    if (current === normalizedContent)
      return;
    this.writeFileSync(p, normalizedContent, { mode });
  }
  async movePromise(fromP, toP) {
    try {
      await this.renamePromise(fromP, toP);
    } catch (error) {
      if (error.code === `EXDEV`) {
        await this.copyPromise(toP, fromP);
        await this.removePromise(fromP);
      } else {
        throw error;
      }
    }
  }
  moveSync(fromP, toP) {
    try {
      this.renameSync(fromP, toP);
    } catch (error) {
      if (error.code === `EXDEV`) {
        this.copySync(toP, fromP);
        this.removeSync(fromP);
      } else {
        throw error;
      }
    }
  }
  async lockPromise(affectedPath, callback) {
    const lockPath = `${affectedPath}.flock`;
    const interval = 1e3 / 60;
    const startTime = Date.now();
    let fd = null;
    const isAlive = async () => {
      let pid;
      try {
        [pid] = await this.readJsonPromise(lockPath);
      } catch (error) {
        return Date.now() - startTime < 500;
      }
      try {
        process.kill(pid, 0);
        return true;
      } catch (error) {
        return false;
      }
    };
    while (fd === null) {
      try {
        fd = await this.openPromise(lockPath, `wx`);
      } catch (error) {
        if (error.code === `EEXIST`) {
          if (!await isAlive()) {
            try {
              await this.unlinkPromise(lockPath);
              continue;
            } catch (error2) {
            }
          }
          if (Date.now() - startTime < 60 * 1e3) {
            await new Promise((resolve) => setTimeout(resolve, interval));
          } else {
            throw new Error(`Couldn't acquire a lock in a reasonable time (via ${lockPath})`);
          }
        } else {
          throw error;
        }
      }
    }
    await this.writePromise(fd, JSON.stringify([process.pid]));
    try {
      return await callback();
    } finally {
      try {
        await this.closePromise(fd);
        await this.unlinkPromise(lockPath);
      } catch (error) {
      }
    }
  }
  async readJsonPromise(p) {
    const content = await this.readFilePromise(p, `utf8`);
    try {
      return JSON.parse(content);
    } catch (error) {
      error.message += ` (in ${p})`;
      throw error;
    }
  }
  readJsonSync(p) {
    const content = this.readFileSync(p, `utf8`);
    try {
      return JSON.parse(content);
    } catch (error) {
      error.message += ` (in ${p})`;
      throw error;
    }
  }
  async writeJsonPromise(p, data, { compact = false } = {}) {
    const space = compact ? 0 : 2;
    return await this.writeFilePromise(p, `${JSON.stringify(data, null, space)}
`);
  }
  writeJsonSync(p, data, { compact = false } = {}) {
    const space = compact ? 0 : 2;
    return this.writeFileSync(p, `${JSON.stringify(data, null, space)}
`);
  }
  async preserveTimePromise(p, cb) {
    const stat = await this.lstatPromise(p);
    const result = await cb();
    if (typeof result !== `undefined`)
      p = result;
    await this.lutimesPromise(p, stat.atime, stat.mtime);
  }
  async preserveTimeSync(p, cb) {
    const stat = this.lstatSync(p);
    const result = cb();
    if (typeof result !== `undefined`)
      p = result;
    this.lutimesSync(p, stat.atime, stat.mtime);
  }
}
class BasePortableFakeFS extends FakeFS {
  constructor() {
    super(ppath);
  }
}
function getEndOfLine(content) {
  const matches = content.match(/\r?\n/g);
  if (matches === null)
    return os.EOL;
  const crlf = matches.filter((nl) => nl === `\r
`).length;
  const lf = matches.length - crlf;
  return crlf > lf ? `\r
` : `
`;
}
function normalizeLineEndings(originalContent, newContent) {
  return newContent.replace(/\r?\n/g, getEndOfLine(originalContent));
}

class ProxiedFS extends FakeFS {
  getExtractHint(hints) {
    return this.baseFs.getExtractHint(hints);
  }
  resolve(path) {
    return this.mapFromBase(this.baseFs.resolve(this.mapToBase(path)));
  }
  getRealPath() {
    return this.mapFromBase(this.baseFs.getRealPath());
  }
  async openPromise(p, flags, mode) {
    return this.baseFs.openPromise(this.mapToBase(p), flags, mode);
  }
  openSync(p, flags, mode) {
    return this.baseFs.openSync(this.mapToBase(p), flags, mode);
  }
  async opendirPromise(p, opts) {
    return Object.assign(await this.baseFs.opendirPromise(this.mapToBase(p), opts), { path: p });
  }
  opendirSync(p, opts) {
    return Object.assign(this.baseFs.opendirSync(this.mapToBase(p), opts), { path: p });
  }
  async readPromise(fd, buffer, offset, length, position) {
    return await this.baseFs.readPromise(fd, buffer, offset, length, position);
  }
  readSync(fd, buffer, offset, length, position) {
    return this.baseFs.readSync(fd, buffer, offset, length, position);
  }
  async writePromise(fd, buffer, offset, length, position) {
    if (typeof buffer === `string`) {
      return await this.baseFs.writePromise(fd, buffer, offset);
    } else {
      return await this.baseFs.writePromise(fd, buffer, offset, length, position);
    }
  }
  writeSync(fd, buffer, offset, length, position) {
    if (typeof buffer === `string`) {
      return this.baseFs.writeSync(fd, buffer, offset);
    } else {
      return this.baseFs.writeSync(fd, buffer, offset, length, position);
    }
  }
  async closePromise(fd) {
    return this.baseFs.closePromise(fd);
  }
  closeSync(fd) {
    this.baseFs.closeSync(fd);
  }
  createReadStream(p, opts) {
    return this.baseFs.createReadStream(p !== null ? this.mapToBase(p) : p, opts);
  }
  createWriteStream(p, opts) {
    return this.baseFs.createWriteStream(p !== null ? this.mapToBase(p) : p, opts);
  }
  async realpathPromise(p) {
    return this.mapFromBase(await this.baseFs.realpathPromise(this.mapToBase(p)));
  }
  realpathSync(p) {
    return this.mapFromBase(this.baseFs.realpathSync(this.mapToBase(p)));
  }
  async existsPromise(p) {
    return this.baseFs.existsPromise(this.mapToBase(p));
  }
  existsSync(p) {
    return this.baseFs.existsSync(this.mapToBase(p));
  }
  accessSync(p, mode) {
    return this.baseFs.accessSync(this.mapToBase(p), mode);
  }
  async accessPromise(p, mode) {
    return this.baseFs.accessPromise(this.mapToBase(p), mode);
  }
  async statPromise(p, opts) {
    return this.baseFs.statPromise(this.mapToBase(p), opts);
  }
  statSync(p, opts) {
    return this.baseFs.statSync(this.mapToBase(p), opts);
  }
  async fstatPromise(fd, opts) {
    return this.baseFs.fstatPromise(fd, opts);
  }
  fstatSync(fd, opts) {
    return this.baseFs.fstatSync(fd, opts);
  }
  lstatPromise(p, opts) {
    return this.baseFs.lstatPromise(this.mapToBase(p), opts);
  }
  lstatSync(p, opts) {
    return this.baseFs.lstatSync(this.mapToBase(p), opts);
  }
  async fchmodPromise(fd, mask) {
    return this.baseFs.fchmodPromise(fd, mask);
  }
  fchmodSync(fd, mask) {
    return this.baseFs.fchmodSync(fd, mask);
  }
  async chmodPromise(p, mask) {
    return this.baseFs.chmodPromise(this.mapToBase(p), mask);
  }
  chmodSync(p, mask) {
    return this.baseFs.chmodSync(this.mapToBase(p), mask);
  }
  async fchownPromise(fd, uid, gid) {
    return this.baseFs.fchownPromise(fd, uid, gid);
  }
  fchownSync(fd, uid, gid) {
    return this.baseFs.fchownSync(fd, uid, gid);
  }
  async chownPromise(p, uid, gid) {
    return this.baseFs.chownPromise(this.mapToBase(p), uid, gid);
  }
  chownSync(p, uid, gid) {
    return this.baseFs.chownSync(this.mapToBase(p), uid, gid);
  }
  async renamePromise(oldP, newP) {
    return this.baseFs.renamePromise(this.mapToBase(oldP), this.mapToBase(newP));
  }
  renameSync(oldP, newP) {
    return this.baseFs.renameSync(this.mapToBase(oldP), this.mapToBase(newP));
  }
  async copyFilePromise(sourceP, destP, flags = 0) {
    return this.baseFs.copyFilePromise(this.mapToBase(sourceP), this.mapToBase(destP), flags);
  }
  copyFileSync(sourceP, destP, flags = 0) {
    return this.baseFs.copyFileSync(this.mapToBase(sourceP), this.mapToBase(destP), flags);
  }
  async appendFilePromise(p, content, opts) {
    return this.baseFs.appendFilePromise(this.fsMapToBase(p), content, opts);
  }
  appendFileSync(p, content, opts) {
    return this.baseFs.appendFileSync(this.fsMapToBase(p), content, opts);
  }
  async writeFilePromise(p, content, opts) {
    return this.baseFs.writeFilePromise(this.fsMapToBase(p), content, opts);
  }
  writeFileSync(p, content, opts) {
    return this.baseFs.writeFileSync(this.fsMapToBase(p), content, opts);
  }
  async unlinkPromise(p) {
    return this.baseFs.unlinkPromise(this.mapToBase(p));
  }
  unlinkSync(p) {
    return this.baseFs.unlinkSync(this.mapToBase(p));
  }
  async utimesPromise(p, atime, mtime) {
    return this.baseFs.utimesPromise(this.mapToBase(p), atime, mtime);
  }
  utimesSync(p, atime, mtime) {
    return this.baseFs.utimesSync(this.mapToBase(p), atime, mtime);
  }
  async lutimesPromise(p, atime, mtime) {
    return this.baseFs.lutimesPromise(this.mapToBase(p), atime, mtime);
  }
  lutimesSync(p, atime, mtime) {
    return this.baseFs.lutimesSync(this.mapToBase(p), atime, mtime);
  }
  async mkdirPromise(p, opts) {
    return this.baseFs.mkdirPromise(this.mapToBase(p), opts);
  }
  mkdirSync(p, opts) {
    return this.baseFs.mkdirSync(this.mapToBase(p), opts);
  }
  async rmdirPromise(p, opts) {
    return this.baseFs.rmdirPromise(this.mapToBase(p), opts);
  }
  rmdirSync(p, opts) {
    return this.baseFs.rmdirSync(this.mapToBase(p), opts);
  }
  async linkPromise(existingP, newP) {
    return this.baseFs.linkPromise(this.mapToBase(existingP), this.mapToBase(newP));
  }
  linkSync(existingP, newP) {
    return this.baseFs.linkSync(this.mapToBase(existingP), this.mapToBase(newP));
  }
  async symlinkPromise(target, p, type) {
    const mappedP = this.mapToBase(p);
    if (this.pathUtils.isAbsolute(target))
      return this.baseFs.symlinkPromise(this.mapToBase(target), mappedP, type);
    const mappedAbsoluteTarget = this.mapToBase(this.pathUtils.join(this.pathUtils.dirname(p), target));
    const mappedTarget = this.baseFs.pathUtils.relative(this.baseFs.pathUtils.dirname(mappedP), mappedAbsoluteTarget);
    return this.baseFs.symlinkPromise(mappedTarget, mappedP, type);
  }
  symlinkSync(target, p, type) {
    const mappedP = this.mapToBase(p);
    if (this.pathUtils.isAbsolute(target))
      return this.baseFs.symlinkSync(this.mapToBase(target), mappedP, type);
    const mappedAbsoluteTarget = this.mapToBase(this.pathUtils.join(this.pathUtils.dirname(p), target));
    const mappedTarget = this.baseFs.pathUtils.relative(this.baseFs.pathUtils.dirname(mappedP), mappedAbsoluteTarget);
    return this.baseFs.symlinkSync(mappedTarget, mappedP, type);
  }
  async readFilePromise(p, encoding) {
    return this.baseFs.readFilePromise(this.fsMapToBase(p), encoding);
  }
  readFileSync(p, encoding) {
    return this.baseFs.readFileSync(this.fsMapToBase(p), encoding);
  }
  readdirPromise(p, opts) {
    return this.baseFs.readdirPromise(this.mapToBase(p), opts);
  }
  readdirSync(p, opts) {
    return this.baseFs.readdirSync(this.mapToBase(p), opts);
  }
  async readlinkPromise(p) {
    return this.mapFromBase(await this.baseFs.readlinkPromise(this.mapToBase(p)));
  }
  readlinkSync(p) {
    return this.mapFromBase(this.baseFs.readlinkSync(this.mapToBase(p)));
  }
  async truncatePromise(p, len) {
    return this.baseFs.truncatePromise(this.mapToBase(p), len);
  }
  truncateSync(p, len) {
    return this.baseFs.truncateSync(this.mapToBase(p), len);
  }
  async ftruncatePromise(fd, len) {
    return this.baseFs.ftruncatePromise(fd, len);
  }
  ftruncateSync(fd, len) {
    return this.baseFs.ftruncateSync(fd, len);
  }
  watch(p, a, b) {
    return this.baseFs.watch(
      this.mapToBase(p),
      // @ts-expect-error
      a,
      b
    );
  }
  watchFile(p, a, b) {
    return this.baseFs.watchFile(
      this.mapToBase(p),
      // @ts-expect-error
      a,
      b
    );
  }
  unwatchFile(p, cb) {
    return this.baseFs.unwatchFile(this.mapToBase(p), cb);
  }
  fsMapToBase(p) {
    if (typeof p === `number`) {
      return p;
    } else {
      return this.mapToBase(p);
    }
  }
}

function direntToPortable(dirent) {
  const portableDirent = dirent;
  if (typeof dirent.path === `string`)
    portableDirent.path = npath.toPortablePath(dirent.path);
  return portableDirent;
}
class NodeFS extends BasePortableFakeFS {
  realFs;
  constructor(realFs = fs) {
    super();
    this.realFs = realFs;
  }
  getExtractHint() {
    return false;
  }
  getRealPath() {
    return PortablePath.root;
  }
  resolve(p) {
    return ppath.resolve(p);
  }
  async openPromise(p, flags, mode) {
    return await new Promise((resolve, reject) => {
      this.realFs.open(npath.fromPortablePath(p), flags, mode, this.makeCallback(resolve, reject));
    });
  }
  openSync(p, flags, mode) {
    return this.realFs.openSync(npath.fromPortablePath(p), flags, mode);
  }
  async opendirPromise(p, opts) {
    return await new Promise((resolve, reject) => {
      if (typeof opts !== `undefined`) {
        this.realFs.opendir(npath.fromPortablePath(p), opts, this.makeCallback(resolve, reject));
      } else {
        this.realFs.opendir(npath.fromPortablePath(p), this.makeCallback(resolve, reject));
      }
    }).then((dir) => {
      const dirWithFixedPath = dir;
      Object.defineProperty(dirWithFixedPath, `path`, {
        value: p,
        configurable: true,
        writable: true
      });
      return dirWithFixedPath;
    });
  }
  opendirSync(p, opts) {
    const dir = typeof opts !== `undefined` ? this.realFs.opendirSync(npath.fromPortablePath(p), opts) : this.realFs.opendirSync(npath.fromPortablePath(p));
    const dirWithFixedPath = dir;
    Object.defineProperty(dirWithFixedPath, `path`, {
      value: p,
      configurable: true,
      writable: true
    });
    return dirWithFixedPath;
  }
  async readPromise(fd, buffer, offset = 0, length = 0, position = -1) {
    return await new Promise((resolve, reject) => {
      this.realFs.read(fd, buffer, offset, length, position, (error, bytesRead) => {
        if (error) {
          reject(error);
        } else {
          resolve(bytesRead);
        }
      });
    });
  }
  readSync(fd, buffer, offset, length, position) {
    return this.realFs.readSync(fd, buffer, offset, length, position);
  }
  async writePromise(fd, buffer, offset, length, position) {
    return await new Promise((resolve, reject) => {
      if (typeof buffer === `string`) {
        return this.realFs.write(fd, buffer, offset, this.makeCallback(resolve, reject));
      } else {
        return this.realFs.write(fd, buffer, offset, length, position, this.makeCallback(resolve, reject));
      }
    });
  }
  writeSync(fd, buffer, offset, length, position) {
    if (typeof buffer === `string`) {
      return this.realFs.writeSync(fd, buffer, offset);
    } else {
      return this.realFs.writeSync(fd, buffer, offset, length, position);
    }
  }
  async closePromise(fd) {
    await new Promise((resolve, reject) => {
      this.realFs.close(fd, this.makeCallback(resolve, reject));
    });
  }
  closeSync(fd) {
    this.realFs.closeSync(fd);
  }
  createReadStream(p, opts) {
    const realPath = p !== null ? npath.fromPortablePath(p) : p;
    return this.realFs.createReadStream(realPath, opts);
  }
  createWriteStream(p, opts) {
    const realPath = p !== null ? npath.fromPortablePath(p) : p;
    return this.realFs.createWriteStream(realPath, opts);
  }
  async realpathPromise(p) {
    return await new Promise((resolve, reject) => {
      this.realFs.realpath(npath.fromPortablePath(p), {}, this.makeCallback(resolve, reject));
    }).then((path) => {
      return npath.toPortablePath(path);
    });
  }
  realpathSync(p) {
    return npath.toPortablePath(this.realFs.realpathSync(npath.fromPortablePath(p), {}));
  }
  async existsPromise(p) {
    return await new Promise((resolve) => {
      this.realFs.exists(npath.fromPortablePath(p), resolve);
    });
  }
  accessSync(p, mode) {
    return this.realFs.accessSync(npath.fromPortablePath(p), mode);
  }
  async accessPromise(p, mode) {
    return await new Promise((resolve, reject) => {
      this.realFs.access(npath.fromPortablePath(p), mode, this.makeCallback(resolve, reject));
    });
  }
  existsSync(p) {
    return this.realFs.existsSync(npath.fromPortablePath(p));
  }
  async statPromise(p, opts) {
    return await new Promise((resolve, reject) => {
      if (opts) {
        this.realFs.stat(npath.fromPortablePath(p), opts, this.makeCallback(resolve, reject));
      } else {
        this.realFs.stat(npath.fromPortablePath(p), this.makeCallback(resolve, reject));
      }
    });
  }
  statSync(p, opts) {
    if (opts) {
      return this.realFs.statSync(npath.fromPortablePath(p), opts);
    } else {
      return this.realFs.statSync(npath.fromPortablePath(p));
    }
  }
  async fstatPromise(fd, opts) {
    return await new Promise((resolve, reject) => {
      if (opts) {
        this.realFs.fstat(fd, opts, this.makeCallback(resolve, reject));
      } else {
        this.realFs.fstat(fd, this.makeCallback(resolve, reject));
      }
    });
  }
  fstatSync(fd, opts) {
    if (opts) {
      return this.realFs.fstatSync(fd, opts);
    } else {
      return this.realFs.fstatSync(fd);
    }
  }
  async lstatPromise(p, opts) {
    return await new Promise((resolve, reject) => {
      if (opts) {
        this.realFs.lstat(npath.fromPortablePath(p), opts, this.makeCallback(resolve, reject));
      } else {
        this.realFs.lstat(npath.fromPortablePath(p), this.makeCallback(resolve, reject));
      }
    });
  }
  lstatSync(p, opts) {
    if (opts) {
      return this.realFs.lstatSync(npath.fromPortablePath(p), opts);
    } else {
      return this.realFs.lstatSync(npath.fromPortablePath(p));
    }
  }
  async fchmodPromise(fd, mask) {
    return await new Promise((resolve, reject) => {
      this.realFs.fchmod(fd, mask, this.makeCallback(resolve, reject));
    });
  }
  fchmodSync(fd, mask) {
    return this.realFs.fchmodSync(fd, mask);
  }
  async chmodPromise(p, mask) {
    return await new Promise((resolve, reject) => {
      this.realFs.chmod(npath.fromPortablePath(p), mask, this.makeCallback(resolve, reject));
    });
  }
  chmodSync(p, mask) {
    return this.realFs.chmodSync(npath.fromPortablePath(p), mask);
  }
  async fchownPromise(fd, uid, gid) {
    return await new Promise((resolve, reject) => {
      this.realFs.fchown(fd, uid, gid, this.makeCallback(resolve, reject));
    });
  }
  fchownSync(fd, uid, gid) {
    return this.realFs.fchownSync(fd, uid, gid);
  }
  async chownPromise(p, uid, gid) {
    return await new Promise((resolve, reject) => {
      this.realFs.chown(npath.fromPortablePath(p), uid, gid, this.makeCallback(resolve, reject));
    });
  }
  chownSync(p, uid, gid) {
    return this.realFs.chownSync(npath.fromPortablePath(p), uid, gid);
  }
  async renamePromise(oldP, newP) {
    return await new Promise((resolve, reject) => {
      this.realFs.rename(npath.fromPortablePath(oldP), npath.fromPortablePath(newP), this.makeCallback(resolve, reject));
    });
  }
  renameSync(oldP, newP) {
    return this.realFs.renameSync(npath.fromPortablePath(oldP), npath.fromPortablePath(newP));
  }
  async copyFilePromise(sourceP, destP, flags = 0) {
    return await new Promise((resolve, reject) => {
      this.realFs.copyFile(npath.fromPortablePath(sourceP), npath.fromPortablePath(destP), flags, this.makeCallback(resolve, reject));
    });
  }
  copyFileSync(sourceP, destP, flags = 0) {
    return this.realFs.copyFileSync(npath.fromPortablePath(sourceP), npath.fromPortablePath(destP), flags);
  }
  async appendFilePromise(p, content, opts) {
    return await new Promise((resolve, reject) => {
      const fsNativePath = typeof p === `string` ? npath.fromPortablePath(p) : p;
      if (opts) {
        this.realFs.appendFile(fsNativePath, content, opts, this.makeCallback(resolve, reject));
      } else {
        this.realFs.appendFile(fsNativePath, content, this.makeCallback(resolve, reject));
      }
    });
  }
  appendFileSync(p, content, opts) {
    const fsNativePath = typeof p === `string` ? npath.fromPortablePath(p) : p;
    if (opts) {
      this.realFs.appendFileSync(fsNativePath, content, opts);
    } else {
      this.realFs.appendFileSync(fsNativePath, content);
    }
  }
  async writeFilePromise(p, content, opts) {
    return await new Promise((resolve, reject) => {
      const fsNativePath = typeof p === `string` ? npath.fromPortablePath(p) : p;
      if (opts) {
        this.realFs.writeFile(fsNativePath, content, opts, this.makeCallback(resolve, reject));
      } else {
        this.realFs.writeFile(fsNativePath, content, this.makeCallback(resolve, reject));
      }
    });
  }
  writeFileSync(p, content, opts) {
    const fsNativePath = typeof p === `string` ? npath.fromPortablePath(p) : p;
    if (opts) {
      this.realFs.writeFileSync(fsNativePath, content, opts);
    } else {
      this.realFs.writeFileSync(fsNativePath, content);
    }
  }
  async unlinkPromise(p) {
    return await new Promise((resolve, reject) => {
      this.realFs.unlink(npath.fromPortablePath(p), this.makeCallback(resolve, reject));
    });
  }
  unlinkSync(p) {
    return this.realFs.unlinkSync(npath.fromPortablePath(p));
  }
  async utimesPromise(p, atime, mtime) {
    return await new Promise((resolve, reject) => {
      this.realFs.utimes(npath.fromPortablePath(p), atime, mtime, this.makeCallback(resolve, reject));
    });
  }
  utimesSync(p, atime, mtime) {
    this.realFs.utimesSync(npath.fromPortablePath(p), atime, mtime);
  }
  async lutimesPromise(p, atime, mtime) {
    return await new Promise((resolve, reject) => {
      this.realFs.lutimes(npath.fromPortablePath(p), atime, mtime, this.makeCallback(resolve, reject));
    });
  }
  lutimesSync(p, atime, mtime) {
    this.realFs.lutimesSync(npath.fromPortablePath(p), atime, mtime);
  }
  async mkdirPromise(p, opts) {
    return await new Promise((resolve, reject) => {
      this.realFs.mkdir(npath.fromPortablePath(p), opts, this.makeCallback(resolve, reject));
    });
  }
  mkdirSync(p, opts) {
    return this.realFs.mkdirSync(npath.fromPortablePath(p), opts);
  }
  async rmdirPromise(p, opts) {
    return await new Promise((resolve, reject) => {
      if (opts) {
        this.realFs.rmdir(npath.fromPortablePath(p), opts, this.makeCallback(resolve, reject));
      } else {
        this.realFs.rmdir(npath.fromPortablePath(p), this.makeCallback(resolve, reject));
      }
    });
  }
  rmdirSync(p, opts) {
    return this.realFs.rmdirSync(npath.fromPortablePath(p), opts);
  }
  async linkPromise(existingP, newP) {
    return await new Promise((resolve, reject) => {
      this.realFs.link(npath.fromPortablePath(existingP), npath.fromPortablePath(newP), this.makeCallback(resolve, reject));
    });
  }
  linkSync(existingP, newP) {
    return this.realFs.linkSync(npath.fromPortablePath(existingP), npath.fromPortablePath(newP));
  }
  async symlinkPromise(target, p, type) {
    return await new Promise((resolve, reject) => {
      this.realFs.symlink(npath.fromPortablePath(target.replace(/\/+$/, ``)), npath.fromPortablePath(p), type, this.makeCallback(resolve, reject));
    });
  }
  symlinkSync(target, p, type) {
    return this.realFs.symlinkSync(npath.fromPortablePath(target.replace(/\/+$/, ``)), npath.fromPortablePath(p), type);
  }
  async readFilePromise(p, encoding) {
    return await new Promise((resolve, reject) => {
      const fsNativePath = typeof p === `string` ? npath.fromPortablePath(p) : p;
      this.realFs.readFile(fsNativePath, encoding, this.makeCallback(resolve, reject));
    });
  }
  readFileSync(p, encoding) {
    const fsNativePath = typeof p === `string` ? npath.fromPortablePath(p) : p;
    return this.realFs.readFileSync(fsNativePath, encoding);
  }
  async readdirPromise(p, opts) {
    return await new Promise((resolve, reject) => {
      if (opts) {
        if (opts.recursive && process.platform === `win32`) {
          if (opts.withFileTypes) {
            this.realFs.readdir(npath.fromPortablePath(p), opts, this.makeCallback((results) => resolve(results.map(direntToPortable)), reject));
          } else {
            this.realFs.readdir(npath.fromPortablePath(p), opts, this.makeCallback((results) => resolve(results.map(npath.toPortablePath)), reject));
          }
        } else {
          this.realFs.readdir(npath.fromPortablePath(p), opts, this.makeCallback(resolve, reject));
        }
      } else {
        this.realFs.readdir(npath.fromPortablePath(p), this.makeCallback(resolve, reject));
      }
    });
  }
  readdirSync(p, opts) {
    if (opts) {
      if (opts.recursive && process.platform === `win32`) {
        if (opts.withFileTypes) {
          return this.realFs.readdirSync(npath.fromPortablePath(p), opts).map(direntToPortable);
        } else {
          return this.realFs.readdirSync(npath.fromPortablePath(p), opts).map(npath.toPortablePath);
        }
      } else {
        return this.realFs.readdirSync(npath.fromPortablePath(p), opts);
      }
    } else {
      return this.realFs.readdirSync(npath.fromPortablePath(p));
    }
  }
  async readlinkPromise(p) {
    return await new Promise((resolve, reject) => {
      this.realFs.readlink(npath.fromPortablePath(p), this.makeCallback(resolve, reject));
    }).then((path) => {
      return npath.toPortablePath(path);
    });
  }
  readlinkSync(p) {
    return npath.toPortablePath(this.realFs.readlinkSync(npath.fromPortablePath(p)));
  }
  async truncatePromise(p, len) {
    return await new Promise((resolve, reject) => {
      this.realFs.truncate(npath.fromPortablePath(p), len, this.makeCallback(resolve, reject));
    });
  }
  truncateSync(p, len) {
    return this.realFs.truncateSync(npath.fromPortablePath(p), len);
  }
  async ftruncatePromise(fd, len) {
    return await new Promise((resolve, reject) => {
      this.realFs.ftruncate(fd, len, this.makeCallback(resolve, reject));
    });
  }
  ftruncateSync(fd, len) {
    return this.realFs.ftruncateSync(fd, len);
  }
  watch(p, a, b) {
    return this.realFs.watch(
      npath.fromPortablePath(p),
      // @ts-expect-error
      a,
      b
    );
  }
  watchFile(p, a, b) {
    return this.realFs.watchFile(
      npath.fromPortablePath(p),
      // @ts-expect-error
      a,
      b
    );
  }
  unwatchFile(p, cb) {
    return this.realFs.unwatchFile(npath.fromPortablePath(p), cb);
  }
  makeCallback(resolve, reject) {
    return (err, result) => {
      if (err) {
        reject(err);
      } else {
        resolve(result);
      }
    };
  }
}

const MOUNT_MASK = 4278190080;
class MountFS extends BasePortableFakeFS {
  baseFs;
  mountInstances;
  fdMap = /* @__PURE__ */ new Map();
  nextFd = 3;
  factoryPromise;
  factorySync;
  filter;
  getMountPoint;
  magic;
  maxAge;
  maxOpenFiles;
  typeCheck;
  isMount = /* @__PURE__ */ new Set();
  notMount = /* @__PURE__ */ new Set();
  realPaths = /* @__PURE__ */ new Map();
  constructor({ baseFs = new NodeFS(), filter = null, magicByte = 42, maxOpenFiles = Infinity, useCache = true, maxAge = 5e3, typeCheck = fs.constants.S_IFREG, getMountPoint, factoryPromise, factorySync }) {
    if (Math.floor(magicByte) !== magicByte || !(magicByte > 1 && magicByte <= 127))
      throw new Error(`The magic byte must be set to a round value between 1 and 127 included`);
    super();
    this.baseFs = baseFs;
    this.mountInstances = useCache ? /* @__PURE__ */ new Map() : null;
    this.factoryPromise = factoryPromise;
    this.factorySync = factorySync;
    this.filter = filter;
    this.getMountPoint = getMountPoint;
    this.magic = magicByte << 24;
    this.maxAge = maxAge;
    this.maxOpenFiles = maxOpenFiles;
    this.typeCheck = typeCheck;
  }
  getExtractHint(hints) {
    return this.baseFs.getExtractHint(hints);
  }
  getRealPath() {
    return this.baseFs.getRealPath();
  }
  saveAndClose() {
    unwatchAllFiles(this);
    if (this.mountInstances) {
      for (const [path, { childFs }] of this.mountInstances.entries()) {
        childFs.saveAndClose?.();
        this.mountInstances.delete(path);
      }
    }
  }
  discardAndClose() {
    unwatchAllFiles(this);
    if (this.mountInstances) {
      for (const [path, { childFs }] of this.mountInstances.entries()) {
        childFs.discardAndClose?.();
        this.mountInstances.delete(path);
      }
    }
  }
  resolve(p) {
    return this.baseFs.resolve(p);
  }
  remapFd(mountFs, fd) {
    const remappedFd = this.nextFd++ | this.magic;
    this.fdMap.set(remappedFd, [mountFs, fd]);
    return remappedFd;
  }
  async openPromise(p, flags, mode) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.openPromise(p, flags, mode);
    }, async (mountFs, { subPath }) => {
      return this.remapFd(mountFs, await mountFs.openPromise(subPath, flags, mode));
    });
  }
  openSync(p, flags, mode) {
    return this.makeCallSync(p, () => {
      return this.baseFs.openSync(p, flags, mode);
    }, (mountFs, { subPath }) => {
      return this.remapFd(mountFs, mountFs.openSync(subPath, flags, mode));
    });
  }
  async opendirPromise(p, opts) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.opendirPromise(p, opts);
    }, async (mountFs, { subPath }) => {
      return await mountFs.opendirPromise(subPath, opts);
    }, {
      requireSubpath: false
    });
  }
  opendirSync(p, opts) {
    return this.makeCallSync(p, () => {
      return this.baseFs.opendirSync(p, opts);
    }, (mountFs, { subPath }) => {
      return mountFs.opendirSync(subPath, opts);
    }, {
      requireSubpath: false
    });
  }
  async readPromise(fd, buffer, offset, length, position) {
    if ((fd & MOUNT_MASK) !== this.magic)
      return await this.baseFs.readPromise(fd, buffer, offset, length, position);
    const entry = this.fdMap.get(fd);
    if (typeof entry === `undefined`)
      throw EBADF(`read`);
    const [mountFs, realFd] = entry;
    return await mountFs.readPromise(realFd, buffer, offset, length, position);
  }
  readSync(fd, buffer, offset, length, position) {
    if ((fd & MOUNT_MASK) !== this.magic)
      return this.baseFs.readSync(fd, buffer, offset, length, position);
    const entry = this.fdMap.get(fd);
    if (typeof entry === `undefined`)
      throw EBADF(`readSync`);
    const [mountFs, realFd] = entry;
    return mountFs.readSync(realFd, buffer, offset, length, position);
  }
  async writePromise(fd, buffer, offset, length, position) {
    if ((fd & MOUNT_MASK) !== this.magic) {
      if (typeof buffer === `string`) {
        return await this.baseFs.writePromise(fd, buffer, offset);
      } else {
        return await this.baseFs.writePromise(fd, buffer, offset, length, position);
      }
    }
    const entry = this.fdMap.get(fd);
    if (typeof entry === `undefined`)
      throw EBADF(`write`);
    const [mountFs, realFd] = entry;
    if (typeof buffer === `string`) {
      return await mountFs.writePromise(realFd, buffer, offset);
    } else {
      return await mountFs.writePromise(realFd, buffer, offset, length, position);
    }
  }
  writeSync(fd, buffer, offset, length, position) {
    if ((fd & MOUNT_MASK) !== this.magic) {
      if (typeof buffer === `string`) {
        return this.baseFs.writeSync(fd, buffer, offset);
      } else {
        return this.baseFs.writeSync(fd, buffer, offset, length, position);
      }
    }
    const entry = this.fdMap.get(fd);
    if (typeof entry === `undefined`)
      throw EBADF(`writeSync`);
    const [mountFs, realFd] = entry;
    if (typeof buffer === `string`) {
      return mountFs.writeSync(realFd, buffer, offset);
    } else {
      return mountFs.writeSync(realFd, buffer, offset, length, position);
    }
  }
  async closePromise(fd) {
    if ((fd & MOUNT_MASK) !== this.magic)
      return await this.baseFs.closePromise(fd);
    const entry = this.fdMap.get(fd);
    if (typeof entry === `undefined`)
      throw EBADF(`close`);
    this.fdMap.delete(fd);
    const [mountFs, realFd] = entry;
    return await mountFs.closePromise(realFd);
  }
  closeSync(fd) {
    if ((fd & MOUNT_MASK) !== this.magic)
      return this.baseFs.closeSync(fd);
    const entry = this.fdMap.get(fd);
    if (typeof entry === `undefined`)
      throw EBADF(`closeSync`);
    this.fdMap.delete(fd);
    const [mountFs, realFd] = entry;
    return mountFs.closeSync(realFd);
  }
  createReadStream(p, opts) {
    if (p === null)
      return this.baseFs.createReadStream(p, opts);
    return this.makeCallSync(p, () => {
      return this.baseFs.createReadStream(p, opts);
    }, (mountFs, { archivePath, subPath }) => {
      const stream = mountFs.createReadStream(subPath, opts);
      stream.path = npath.fromPortablePath(this.pathUtils.join(archivePath, subPath));
      return stream;
    });
  }
  createWriteStream(p, opts) {
    if (p === null)
      return this.baseFs.createWriteStream(p, opts);
    return this.makeCallSync(p, () => {
      return this.baseFs.createWriteStream(p, opts);
    }, (mountFs, { subPath }) => {
      return mountFs.createWriteStream(subPath, opts);
    });
  }
  async realpathPromise(p) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.realpathPromise(p);
    }, async (mountFs, { archivePath, subPath }) => {
      let realArchivePath = this.realPaths.get(archivePath);
      if (typeof realArchivePath === `undefined`) {
        realArchivePath = await this.baseFs.realpathPromise(archivePath);
        this.realPaths.set(archivePath, realArchivePath);
      }
      return this.pathUtils.join(realArchivePath, this.pathUtils.relative(PortablePath.root, await mountFs.realpathPromise(subPath)));
    });
  }
  realpathSync(p) {
    return this.makeCallSync(p, () => {
      return this.baseFs.realpathSync(p);
    }, (mountFs, { archivePath, subPath }) => {
      let realArchivePath = this.realPaths.get(archivePath);
      if (typeof realArchivePath === `undefined`) {
        realArchivePath = this.baseFs.realpathSync(archivePath);
        this.realPaths.set(archivePath, realArchivePath);
      }
      return this.pathUtils.join(realArchivePath, this.pathUtils.relative(PortablePath.root, mountFs.realpathSync(subPath)));
    });
  }
  async existsPromise(p) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.existsPromise(p);
    }, async (mountFs, { subPath }) => {
      return await mountFs.existsPromise(subPath);
    });
  }
  existsSync(p) {
    return this.makeCallSync(p, () => {
      return this.baseFs.existsSync(p);
    }, (mountFs, { subPath }) => {
      return mountFs.existsSync(subPath);
    });
  }
  async accessPromise(p, mode) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.accessPromise(p, mode);
    }, async (mountFs, { subPath }) => {
      return await mountFs.accessPromise(subPath, mode);
    });
  }
  accessSync(p, mode) {
    return this.makeCallSync(p, () => {
      return this.baseFs.accessSync(p, mode);
    }, (mountFs, { subPath }) => {
      return mountFs.accessSync(subPath, mode);
    });
  }
  async statPromise(p, opts) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.statPromise(p, opts);
    }, async (mountFs, { subPath }) => {
      return await mountFs.statPromise(subPath, opts);
    });
  }
  statSync(p, opts) {
    return this.makeCallSync(p, () => {
      return this.baseFs.statSync(p, opts);
    }, (mountFs, { subPath }) => {
      return mountFs.statSync(subPath, opts);
    });
  }
  async fstatPromise(fd, opts) {
    if ((fd & MOUNT_MASK) !== this.magic)
      return this.baseFs.fstatPromise(fd, opts);
    const entry = this.fdMap.get(fd);
    if (typeof entry === `undefined`)
      throw EBADF(`fstat`);
    const [mountFs, realFd] = entry;
    return mountFs.fstatPromise(realFd, opts);
  }
  fstatSync(fd, opts) {
    if ((fd & MOUNT_MASK) !== this.magic)
      return this.baseFs.fstatSync(fd, opts);
    const entry = this.fdMap.get(fd);
    if (typeof entry === `undefined`)
      throw EBADF(`fstatSync`);
    const [mountFs, realFd] = entry;
    return mountFs.fstatSync(realFd, opts);
  }
  async lstatPromise(p, opts) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.lstatPromise(p, opts);
    }, async (mountFs, { subPath }) => {
      return await mountFs.lstatPromise(subPath, opts);
    });
  }
  lstatSync(p, opts) {
    return this.makeCallSync(p, () => {
      return this.baseFs.lstatSync(p, opts);
    }, (mountFs, { subPath }) => {
      return mountFs.lstatSync(subPath, opts);
    });
  }
  async fchmodPromise(fd, mask) {
    if ((fd & MOUNT_MASK) !== this.magic)
      return this.baseFs.fchmodPromise(fd, mask);
    const entry = this.fdMap.get(fd);
    if (typeof entry === `undefined`)
      throw EBADF(`fchmod`);
    const [mountFs, realFd] = entry;
    return mountFs.fchmodPromise(realFd, mask);
  }
  fchmodSync(fd, mask) {
    if ((fd & MOUNT_MASK) !== this.magic)
      return this.baseFs.fchmodSync(fd, mask);
    const entry = this.fdMap.get(fd);
    if (typeof entry === `undefined`)
      throw EBADF(`fchmodSync`);
    const [mountFs, realFd] = entry;
    return mountFs.fchmodSync(realFd, mask);
  }
  async chmodPromise(p, mask) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.chmodPromise(p, mask);
    }, async (mountFs, { subPath }) => {
      return await mountFs.chmodPromise(subPath, mask);
    });
  }
  chmodSync(p, mask) {
    return this.makeCallSync(p, () => {
      return this.baseFs.chmodSync(p, mask);
    }, (mountFs, { subPath }) => {
      return mountFs.chmodSync(subPath, mask);
    });
  }
  async fchownPromise(fd, uid, gid) {
    if ((fd & MOUNT_MASK) !== this.magic)
      return this.baseFs.fchownPromise(fd, uid, gid);
    const entry = this.fdMap.get(fd);
    if (typeof entry === `undefined`)
      throw EBADF(`fchown`);
    const [zipFs, realFd] = entry;
    return zipFs.fchownPromise(realFd, uid, gid);
  }
  fchownSync(fd, uid, gid) {
    if ((fd & MOUNT_MASK) !== this.magic)
      return this.baseFs.fchownSync(fd, uid, gid);
    const entry = this.fdMap.get(fd);
    if (typeof entry === `undefined`)
      throw EBADF(`fchownSync`);
    const [zipFs, realFd] = entry;
    return zipFs.fchownSync(realFd, uid, gid);
  }
  async chownPromise(p, uid, gid) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.chownPromise(p, uid, gid);
    }, async (mountFs, { subPath }) => {
      return await mountFs.chownPromise(subPath, uid, gid);
    });
  }
  chownSync(p, uid, gid) {
    return this.makeCallSync(p, () => {
      return this.baseFs.chownSync(p, uid, gid);
    }, (mountFs, { subPath }) => {
      return mountFs.chownSync(subPath, uid, gid);
    });
  }
  async renamePromise(oldP, newP) {
    return await this.makeCallPromise(oldP, async () => {
      return await this.makeCallPromise(newP, async () => {
        return await this.baseFs.renamePromise(oldP, newP);
      }, async () => {
        throw Object.assign(new Error(`EEXDEV: cross-device link not permitted`), { code: `EEXDEV` });
      });
    }, async (mountFsO, { subPath: subPathO }) => {
      return await this.makeCallPromise(newP, async () => {
        throw Object.assign(new Error(`EEXDEV: cross-device link not permitted`), { code: `EEXDEV` });
      }, async (mountFsN, { subPath: subPathN }) => {
        if (mountFsO !== mountFsN) {
          throw Object.assign(new Error(`EEXDEV: cross-device link not permitted`), { code: `EEXDEV` });
        } else {
          return await mountFsO.renamePromise(subPathO, subPathN);
        }
      });
    });
  }
  renameSync(oldP, newP) {
    return this.makeCallSync(oldP, () => {
      return this.makeCallSync(newP, () => {
        return this.baseFs.renameSync(oldP, newP);
      }, () => {
        throw Object.assign(new Error(`EEXDEV: cross-device link not permitted`), { code: `EEXDEV` });
      });
    }, (mountFsO, { subPath: subPathO }) => {
      return this.makeCallSync(newP, () => {
        throw Object.assign(new Error(`EEXDEV: cross-device link not permitted`), { code: `EEXDEV` });
      }, (mountFsN, { subPath: subPathN }) => {
        if (mountFsO !== mountFsN) {
          throw Object.assign(new Error(`EEXDEV: cross-device link not permitted`), { code: `EEXDEV` });
        } else {
          return mountFsO.renameSync(subPathO, subPathN);
        }
      });
    });
  }
  async copyFilePromise(sourceP, destP, flags = 0) {
    const fallback = async (sourceFs, sourceP2, destFs, destP2) => {
      if ((flags & fs.constants.COPYFILE_FICLONE_FORCE) !== 0)
        throw Object.assign(new Error(`EXDEV: cross-device clone not permitted, copyfile '${sourceP2}' -> ${destP2}'`), { code: `EXDEV` });
      if (flags & fs.constants.COPYFILE_EXCL && await this.existsPromise(sourceP2))
        throw Object.assign(new Error(`EEXIST: file already exists, copyfile '${sourceP2}' -> '${destP2}'`), { code: `EEXIST` });
      let content;
      try {
        content = await sourceFs.readFilePromise(sourceP2);
      } catch (error) {
        throw Object.assign(new Error(`EINVAL: invalid argument, copyfile '${sourceP2}' -> '${destP2}'`), { code: `EINVAL` });
      }
      await destFs.writeFilePromise(destP2, content);
    };
    return await this.makeCallPromise(sourceP, async () => {
      return await this.makeCallPromise(destP, async () => {
        return await this.baseFs.copyFilePromise(sourceP, destP, flags);
      }, async (mountFsD, { subPath: subPathD }) => {
        return await fallback(this.baseFs, sourceP, mountFsD, subPathD);
      });
    }, async (mountFsS, { subPath: subPathS }) => {
      return await this.makeCallPromise(destP, async () => {
        return await fallback(mountFsS, subPathS, this.baseFs, destP);
      }, async (mountFsD, { subPath: subPathD }) => {
        if (mountFsS !== mountFsD) {
          return await fallback(mountFsS, subPathS, mountFsD, subPathD);
        } else {
          return await mountFsS.copyFilePromise(subPathS, subPathD, flags);
        }
      });
    });
  }
  copyFileSync(sourceP, destP, flags = 0) {
    const fallback = (sourceFs, sourceP2, destFs, destP2) => {
      if ((flags & fs.constants.COPYFILE_FICLONE_FORCE) !== 0)
        throw Object.assign(new Error(`EXDEV: cross-device clone not permitted, copyfile '${sourceP2}' -> ${destP2}'`), { code: `EXDEV` });
      if (flags & fs.constants.COPYFILE_EXCL && this.existsSync(sourceP2))
        throw Object.assign(new Error(`EEXIST: file already exists, copyfile '${sourceP2}' -> '${destP2}'`), { code: `EEXIST` });
      let content;
      try {
        content = sourceFs.readFileSync(sourceP2);
      } catch (error) {
        throw Object.assign(new Error(`EINVAL: invalid argument, copyfile '${sourceP2}' -> '${destP2}'`), { code: `EINVAL` });
      }
      destFs.writeFileSync(destP2, content);
    };
    return this.makeCallSync(sourceP, () => {
      return this.makeCallSync(destP, () => {
        return this.baseFs.copyFileSync(sourceP, destP, flags);
      }, (mountFsD, { subPath: subPathD }) => {
        return fallback(this.baseFs, sourceP, mountFsD, subPathD);
      });
    }, (mountFsS, { subPath: subPathS }) => {
      return this.makeCallSync(destP, () => {
        return fallback(mountFsS, subPathS, this.baseFs, destP);
      }, (mountFsD, { subPath: subPathD }) => {
        if (mountFsS !== mountFsD) {
          return fallback(mountFsS, subPathS, mountFsD, subPathD);
        } else {
          return mountFsS.copyFileSync(subPathS, subPathD, flags);
        }
      });
    });
  }
  async appendFilePromise(p, content, opts) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.appendFilePromise(p, content, opts);
    }, async (mountFs, { subPath }) => {
      return await mountFs.appendFilePromise(subPath, content, opts);
    });
  }
  appendFileSync(p, content, opts) {
    return this.makeCallSync(p, () => {
      return this.baseFs.appendFileSync(p, content, opts);
    }, (mountFs, { subPath }) => {
      return mountFs.appendFileSync(subPath, content, opts);
    });
  }
  async writeFilePromise(p, content, opts) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.writeFilePromise(p, content, opts);
    }, async (mountFs, { subPath }) => {
      return await mountFs.writeFilePromise(subPath, content, opts);
    });
  }
  writeFileSync(p, content, opts) {
    return this.makeCallSync(p, () => {
      return this.baseFs.writeFileSync(p, content, opts);
    }, (mountFs, { subPath }) => {
      return mountFs.writeFileSync(subPath, content, opts);
    });
  }
  async unlinkPromise(p) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.unlinkPromise(p);
    }, async (mountFs, { subPath }) => {
      return await mountFs.unlinkPromise(subPath);
    });
  }
  unlinkSync(p) {
    return this.makeCallSync(p, () => {
      return this.baseFs.unlinkSync(p);
    }, (mountFs, { subPath }) => {
      return mountFs.unlinkSync(subPath);
    });
  }
  async utimesPromise(p, atime, mtime) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.utimesPromise(p, atime, mtime);
    }, async (mountFs, { subPath }) => {
      return await mountFs.utimesPromise(subPath, atime, mtime);
    });
  }
  utimesSync(p, atime, mtime) {
    return this.makeCallSync(p, () => {
      return this.baseFs.utimesSync(p, atime, mtime);
    }, (mountFs, { subPath }) => {
      return mountFs.utimesSync(subPath, atime, mtime);
    });
  }
  async lutimesPromise(p, atime, mtime) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.lutimesPromise(p, atime, mtime);
    }, async (mountFs, { subPath }) => {
      return await mountFs.lutimesPromise(subPath, atime, mtime);
    });
  }
  lutimesSync(p, atime, mtime) {
    return this.makeCallSync(p, () => {
      return this.baseFs.lutimesSync(p, atime, mtime);
    }, (mountFs, { subPath }) => {
      return mountFs.lutimesSync(subPath, atime, mtime);
    });
  }
  async mkdirPromise(p, opts) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.mkdirPromise(p, opts);
    }, async (mountFs, { subPath }) => {
      return await mountFs.mkdirPromise(subPath, opts);
    });
  }
  mkdirSync(p, opts) {
    return this.makeCallSync(p, () => {
      return this.baseFs.mkdirSync(p, opts);
    }, (mountFs, { subPath }) => {
      return mountFs.mkdirSync(subPath, opts);
    });
  }
  async rmdirPromise(p, opts) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.rmdirPromise(p, opts);
    }, async (mountFs, { subPath }) => {
      return await mountFs.rmdirPromise(subPath, opts);
    });
  }
  rmdirSync(p, opts) {
    return this.makeCallSync(p, () => {
      return this.baseFs.rmdirSync(p, opts);
    }, (mountFs, { subPath }) => {
      return mountFs.rmdirSync(subPath, opts);
    });
  }
  async linkPromise(existingP, newP) {
    return await this.makeCallPromise(newP, async () => {
      return await this.baseFs.linkPromise(existingP, newP);
    }, async (mountFs, { subPath }) => {
      return await mountFs.linkPromise(existingP, subPath);
    });
  }
  linkSync(existingP, newP) {
    return this.makeCallSync(newP, () => {
      return this.baseFs.linkSync(existingP, newP);
    }, (mountFs, { subPath }) => {
      return mountFs.linkSync(existingP, subPath);
    });
  }
  async symlinkPromise(target, p, type) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.symlinkPromise(target, p, type);
    }, async (mountFs, { subPath }) => {
      return await mountFs.symlinkPromise(target, subPath);
    });
  }
  symlinkSync(target, p, type) {
    return this.makeCallSync(p, () => {
      return this.baseFs.symlinkSync(target, p, type);
    }, (mountFs, { subPath }) => {
      return mountFs.symlinkSync(target, subPath);
    });
  }
  async readFilePromise(p, encoding) {
    return this.makeCallPromise(p, async () => {
      return await this.baseFs.readFilePromise(p, encoding);
    }, async (mountFs, { subPath }) => {
      return await mountFs.readFilePromise(subPath, encoding);
    });
  }
  readFileSync(p, encoding) {
    return this.makeCallSync(p, () => {
      return this.baseFs.readFileSync(p, encoding);
    }, (mountFs, { subPath }) => {
      return mountFs.readFileSync(subPath, encoding);
    });
  }
  async readdirPromise(p, opts) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.readdirPromise(p, opts);
    }, async (mountFs, { subPath }) => {
      return await mountFs.readdirPromise(subPath, opts);
    }, {
      requireSubpath: false
    });
  }
  readdirSync(p, opts) {
    return this.makeCallSync(p, () => {
      return this.baseFs.readdirSync(p, opts);
    }, (mountFs, { subPath }) => {
      return mountFs.readdirSync(subPath, opts);
    }, {
      requireSubpath: false
    });
  }
  async readlinkPromise(p) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.readlinkPromise(p);
    }, async (mountFs, { subPath }) => {
      return await mountFs.readlinkPromise(subPath);
    });
  }
  readlinkSync(p) {
    return this.makeCallSync(p, () => {
      return this.baseFs.readlinkSync(p);
    }, (mountFs, { subPath }) => {
      return mountFs.readlinkSync(subPath);
    });
  }
  async truncatePromise(p, len) {
    return await this.makeCallPromise(p, async () => {
      return await this.baseFs.truncatePromise(p, len);
    }, async (mountFs, { subPath }) => {
      return await mountFs.truncatePromise(subPath, len);
    });
  }
  truncateSync(p, len) {
    return this.makeCallSync(p, () => {
      return this.baseFs.truncateSync(p, len);
    }, (mountFs, { subPath }) => {
      return mountFs.truncateSync(subPath, len);
    });
  }
  async ftruncatePromise(fd, len) {
    if ((fd & MOUNT_MASK) !== this.magic)
      return this.baseFs.ftruncatePromise(fd, len);
    const entry = this.fdMap.get(fd);
    if (typeof entry === `undefined`)
      throw EBADF(`ftruncate`);
    const [mountFs, realFd] = entry;
    return mountFs.ftruncatePromise(realFd, len);
  }
  ftruncateSync(fd, len) {
    if ((fd & MOUNT_MASK) !== this.magic)
      return this.baseFs.ftruncateSync(fd, len);
    const entry = this.fdMap.get(fd);
    if (typeof entry === `undefined`)
      throw EBADF(`ftruncateSync`);
    const [mountFs, realFd] = entry;
    return mountFs.ftruncateSync(realFd, len);
  }
  watch(p, a, b) {
    return this.makeCallSync(p, () => {
      return this.baseFs.watch(
        p,
        // @ts-expect-error
        a,
        b
      );
    }, (mountFs, { subPath }) => {
      return mountFs.watch(
        subPath,
        // @ts-expect-error
        a,
        b
      );
    });
  }
  watchFile(p, a, b) {
    return this.makeCallSync(p, () => {
      return this.baseFs.watchFile(
        p,
        // @ts-expect-error
        a,
        b
      );
    }, () => {
      return watchFile(this, p, a, b);
    });
  }
  unwatchFile(p, cb) {
    return this.makeCallSync(p, () => {
      return this.baseFs.unwatchFile(p, cb);
    }, () => {
      return unwatchFile(this, p, cb);
    });
  }
  async makeCallPromise(p, discard, accept, { requireSubpath = true } = {}) {
    if (typeof p !== `string`)
      return await discard();
    const normalizedP = this.resolve(p);
    const mountInfo = this.findMount(normalizedP);
    if (!mountInfo)
      return await discard();
    if (requireSubpath && mountInfo.subPath === `/`)
      return await discard();
    return await this.getMountPromise(mountInfo.archivePath, async (mountFs) => await accept(mountFs, mountInfo));
  }
  makeCallSync(p, discard, accept, { requireSubpath = true } = {}) {
    if (typeof p !== `string`)
      return discard();
    const normalizedP = this.resolve(p);
    const mountInfo = this.findMount(normalizedP);
    if (!mountInfo)
      return discard();
    if (requireSubpath && mountInfo.subPath === `/`)
      return discard();
    return this.getMountSync(mountInfo.archivePath, (mountFs) => accept(mountFs, mountInfo));
  }
  findMount(p) {
    if (this.filter && !this.filter.test(p))
      return null;
    let filePath = ``;
    while (true) {
      const pathPartWithArchive = p.substring(filePath.length);
      const mountPoint = this.getMountPoint(pathPartWithArchive, filePath);
      if (!mountPoint)
        return null;
      filePath = this.pathUtils.join(filePath, mountPoint);
      if (!this.isMount.has(filePath)) {
        if (this.notMount.has(filePath))
          continue;
        try {
          if (this.typeCheck !== null && (this.baseFs.lstatSync(filePath).mode & fs.constants.S_IFMT) !== this.typeCheck) {
            this.notMount.add(filePath);
            continue;
          }
        } catch {
          return null;
        }
        this.isMount.add(filePath);
      }
      return {
        archivePath: filePath,
        subPath: this.pathUtils.join(PortablePath.root, p.substring(filePath.length))
      };
    }
  }
  limitOpenFilesTimeout = null;
  limitOpenFiles(max) {
    if (this.mountInstances === null)
      return;
    const now = Date.now();
    let nextExpiresAt = now + this.maxAge;
    let closeCount = max === null ? 0 : this.mountInstances.size - max;
    for (const [path, { childFs, expiresAt, refCount }] of this.mountInstances.entries()) {
      if (refCount !== 0 || childFs.hasOpenFileHandles?.()) {
        continue;
      } else if (now >= expiresAt) {
        childFs.saveAndClose?.();
        this.mountInstances.delete(path);
        closeCount -= 1;
        continue;
      } else if (max === null || closeCount <= 0) {
        nextExpiresAt = expiresAt;
        break;
      }
      childFs.saveAndClose?.();
      this.mountInstances.delete(path);
      closeCount -= 1;
    }
    if (this.limitOpenFilesTimeout === null && (max === null && this.mountInstances.size > 0 || max !== null) && isFinite(nextExpiresAt)) {
      this.limitOpenFilesTimeout = setTimeout(() => {
        this.limitOpenFilesTimeout = null;
        this.limitOpenFiles(null);
      }, nextExpiresAt - now).unref();
    }
  }
  async getMountPromise(p, accept) {
    if (this.mountInstances) {
      let cachedMountFs = this.mountInstances.get(p);
      if (!cachedMountFs) {
        const createFsInstance = await this.factoryPromise(this.baseFs, p);
        cachedMountFs = this.mountInstances.get(p);
        if (!cachedMountFs) {
          cachedMountFs = {
            childFs: createFsInstance(),
            expiresAt: 0,
            refCount: 0
          };
        }
      }
      this.mountInstances.delete(p);
      this.limitOpenFiles(this.maxOpenFiles - 1);
      this.mountInstances.set(p, cachedMountFs);
      cachedMountFs.expiresAt = Date.now() + this.maxAge;
      cachedMountFs.refCount += 1;
      try {
        return await accept(cachedMountFs.childFs);
      } finally {
        cachedMountFs.refCount -= 1;
      }
    } else {
      const mountFs = (await this.factoryPromise(this.baseFs, p))();
      try {
        return await accept(mountFs);
      } finally {
        mountFs.saveAndClose?.();
      }
    }
  }
  getMountSync(p, accept) {
    if (this.mountInstances) {
      let cachedMountFs = this.mountInstances.get(p);
      if (!cachedMountFs) {
        cachedMountFs = {
          childFs: this.factorySync(this.baseFs, p),
          expiresAt: 0,
          refCount: 0
        };
      }
      this.mountInstances.delete(p);
      this.limitOpenFiles(this.maxOpenFiles - 1);
      this.mountInstances.set(p, cachedMountFs);
      cachedMountFs.expiresAt = Date.now() + this.maxAge;
      return accept(cachedMountFs.childFs);
    } else {
      const childFs = this.factorySync(this.baseFs, p);
      try {
        return accept(childFs);
      } finally {
        childFs.saveAndClose?.();
      }
    }
  }
}

class PosixFS extends ProxiedFS {
  baseFs;
  constructor(baseFs) {
    super(npath);
    this.baseFs = baseFs;
  }
  mapFromBase(path) {
    return npath.fromPortablePath(path);
  }
  mapToBase(path) {
    return npath.toPortablePath(path);
  }
}

const NUMBER_REGEXP = /^[0-9]+$/;
const VIRTUAL_REGEXP = /^(\/(?:[^/]+\/)*?(?:\$\$virtual|__virtual__))((?:\/((?:[^/]+-)?[a-f0-9]+)(?:\/([^/]+))?)?((?:\/.*)?))$/;
const VALID_COMPONENT = /^([^/]+-)?[a-f0-9]+$/;
class VirtualFS extends ProxiedFS {
  baseFs;
  static makeVirtualPath(base, component, to) {
    if (ppath.basename(base) !== `__virtual__`)
      throw new Error(`Assertion failed: Virtual folders must be named "__virtual__"`);
    if (!ppath.basename(component).match(VALID_COMPONENT))
      throw new Error(`Assertion failed: Virtual components must be ended by an hexadecimal hash`);
    const target = ppath.relative(ppath.dirname(base), to);
    const segments = target.split(`/`);
    let depth = 0;
    while (depth < segments.length && segments[depth] === `..`)
      depth += 1;
    const finalSegments = segments.slice(depth);
    const fullVirtualPath = ppath.join(base, component, String(depth), ...finalSegments);
    return fullVirtualPath;
  }
  static resolveVirtual(p) {
    const match = p.match(VIRTUAL_REGEXP);
    if (!match || !match[3] && match[5])
      return p;
    const target = ppath.dirname(match[1]);
    if (!match[3] || !match[4])
      return target;
    const isnum = NUMBER_REGEXP.test(match[4]);
    if (!isnum)
      return p;
    const depth = Number(match[4]);
    const backstep = `../`.repeat(depth);
    const subpath = match[5] || `.`;
    return VirtualFS.resolveVirtual(ppath.join(target, backstep, subpath));
  }
  constructor({ baseFs = new NodeFS() } = {}) {
    super(ppath);
    this.baseFs = baseFs;
  }
  getExtractHint(hints) {
    return this.baseFs.getExtractHint(hints);
  }
  getRealPath() {
    return this.baseFs.getRealPath();
  }
  realpathSync(p) {
    const match = p.match(VIRTUAL_REGEXP);
    if (!match)
      return this.baseFs.realpathSync(p);
    if (!match[5])
      return p;
    const realpath = this.baseFs.realpathSync(this.mapToBase(p));
    return VirtualFS.makeVirtualPath(match[1], match[3], realpath);
  }
  async realpathPromise(p) {
    const match = p.match(VIRTUAL_REGEXP);
    if (!match)
      return await this.baseFs.realpathPromise(p);
    if (!match[5])
      return p;
    const realpath = await this.baseFs.realpathPromise(this.mapToBase(p));
    return VirtualFS.makeVirtualPath(match[1], match[3], realpath);
  }
  mapToBase(p) {
    if (p === ``)
      return p;
    if (this.pathUtils.isAbsolute(p))
      return VirtualFS.resolveVirtual(p);
    const resolvedRoot = VirtualFS.resolveVirtual(this.baseFs.resolve(PortablePath.dot));
    const resolvedP = VirtualFS.resolveVirtual(this.baseFs.resolve(p));
    return ppath.relative(resolvedRoot, resolvedP) || PortablePath.dot;
  }
  mapFromBase(p) {
    return p;
  }
}

class NodePathFS extends ProxiedFS {
  baseFs;
  constructor(baseFs) {
    super(npath);
    this.baseFs = baseFs;
  }
  mapFromBase(path) {
    return path;
  }
  mapToBase(path) {
    if (typeof path === `string`)
      return path;
    if (path instanceof url.URL)
      return url.fileURLToPath(path);
    if (Buffer.isBuffer(path)) {
      const str = path.toString();
      if (!isUtf8(path, str))
        throw new Error(`Non-utf8 buffers are not supported at the moment. Please upvote the following issue if you encounter this error: https://github.com/yarnpkg/berry/issues/4942`);
      return str;
    }
    throw new Error(`Unsupported path type: ${nodeUtils.inspect(path)}`);
  }
}
function isUtf8(buf, str) {
  if (typeof buffer.isUtf8 !== `undefined`)
    return buffer.isUtf8(buf);
  return Buffer.byteLength(str) === buf.byteLength;
}

const kBaseFs = Symbol(`kBaseFs`);
const kFd = Symbol(`kFd`);
const kClosePromise = Symbol(`kClosePromise`);
const kCloseResolve = Symbol(`kCloseResolve`);
const kCloseReject = Symbol(`kCloseReject`);
const kRefs = Symbol(`kRefs`);
const kRef = Symbol(`kRef`);
const kUnref = Symbol(`kUnref`);
class FileHandle {
  [kBaseFs];
  [kFd];
  [kRefs] = 1;
  [kClosePromise] = void 0;
  [kCloseResolve] = void 0;
  [kCloseReject] = void 0;
  constructor(fd, baseFs) {
    this[kBaseFs] = baseFs;
    this[kFd] = fd;
  }
  get fd() {
    return this[kFd];
  }
  async appendFile(data, options) {
    try {
      this[kRef](this.appendFile);
      const encoding = (typeof options === `string` ? options : options?.encoding) ?? void 0;
      return await this[kBaseFs].appendFilePromise(this.fd, data, encoding ? { encoding } : void 0);
    } finally {
      this[kUnref]();
    }
  }
  async chown(uid, gid) {
    try {
      this[kRef](this.chown);
      return await this[kBaseFs].fchownPromise(this.fd, uid, gid);
    } finally {
      this[kUnref]();
    }
  }
  async chmod(mode) {
    try {
      this[kRef](this.chmod);
      return await this[kBaseFs].fchmodPromise(this.fd, mode);
    } finally {
      this[kUnref]();
    }
  }
  createReadStream(options) {
    return this[kBaseFs].createReadStream(null, { ...options, fd: this.fd });
  }
  createWriteStream(options) {
    return this[kBaseFs].createWriteStream(null, { ...options, fd: this.fd });
  }
  // FIXME: Missing FakeFS version
  datasync() {
    throw new Error(`Method not implemented.`);
  }
  // FIXME: Missing FakeFS version
  sync() {
    throw new Error(`Method not implemented.`);
  }
  async read(bufferOrOptions, offset, length, position) {
    try {
      this[kRef](this.read);
      let buffer;
      if (!Buffer.isBuffer(bufferOrOptions)) {
        bufferOrOptions ??= {};
        buffer = bufferOrOptions.buffer ?? Buffer.alloc(16384);
        offset = bufferOrOptions.offset || 0;
        length = bufferOrOptions.length ?? buffer.byteLength;
        position = bufferOrOptions.position ?? null;
      } else {
        buffer = bufferOrOptions;
      }
      offset ??= 0;
      length ??= 0;
      if (length === 0) {
        return {
          bytesRead: length,
          buffer
        };
      }
      const bytesRead = await this[kBaseFs].readPromise(this.fd, buffer, offset, length, position);
      return {
        bytesRead,
        buffer
      };
    } finally {
      this[kUnref]();
    }
  }
  async readFile(options) {
    try {
      this[kRef](this.readFile);
      const encoding = (typeof options === `string` ? options : options?.encoding) ?? void 0;
      return await this[kBaseFs].readFilePromise(this.fd, encoding);
    } finally {
      this[kUnref]();
    }
  }
  readLines(options) {
    return readline.createInterface({
      input: this.createReadStream(options),
      crlfDelay: Infinity
    });
  }
  async stat(opts) {
    try {
      this[kRef](this.stat);
      return await this[kBaseFs].fstatPromise(this.fd, opts);
    } finally {
      this[kUnref]();
    }
  }
  async truncate(len) {
    try {
      this[kRef](this.truncate);
      return await this[kBaseFs].ftruncatePromise(this.fd, len);
    } finally {
      this[kUnref]();
    }
  }
  // FIXME: Missing FakeFS version
  utimes(atime, mtime) {
    throw new Error(`Method not implemented.`);
  }
  async writeFile(data, options) {
    try {
      this[kRef](this.writeFile);
      const encoding = (typeof options === `string` ? options : options?.encoding) ?? void 0;
      await this[kBaseFs].writeFilePromise(this.fd, data, encoding);
    } finally {
      this[kUnref]();
    }
  }
  async write(...args) {
    try {
      this[kRef](this.write);
      if (ArrayBuffer.isView(args[0])) {
        const [buffer, offset, length, position] = args;
        const bytesWritten = await this[kBaseFs].writePromise(this.fd, buffer, offset ?? void 0, length ?? void 0, position ?? void 0);
        return { bytesWritten, buffer };
      } else {
        const [data, position, encoding] = args;
        const bytesWritten = await this[kBaseFs].writePromise(this.fd, data, position, encoding);
        return { bytesWritten, buffer: data };
      }
    } finally {
      this[kUnref]();
    }
  }
  // TODO: Use writev from FakeFS when that is implemented
  async writev(buffers, position) {
    try {
      this[kRef](this.writev);
      let bytesWritten = 0;
      if (typeof position !== `undefined`) {
        for (const buffer of buffers) {
          const writeResult = await this.write(buffer, void 0, void 0, position);
          bytesWritten += writeResult.bytesWritten;
          position += writeResult.bytesWritten;
        }
      } else {
        for (const buffer of buffers) {
          const writeResult = await this.write(buffer);
          bytesWritten += writeResult.bytesWritten;
        }
      }
      return {
        buffers,
        bytesWritten
      };
    } finally {
      this[kUnref]();
    }
  }
  // FIXME: Missing FakeFS version
  readv(buffers, position) {
    throw new Error(`Method not implemented.`);
  }
  close() {
    if (this[kFd] === -1) return Promise.resolve();
    if (this[kClosePromise]) return this[kClosePromise];
    this[kRefs]--;
    if (this[kRefs] === 0) {
      const fd = this[kFd];
      this[kFd] = -1;
      this[kClosePromise] = this[kBaseFs].closePromise(fd).finally(() => {
        this[kClosePromise] = void 0;
      });
    } else {
      this[kClosePromise] = new Promise((resolve, reject) => {
        this[kCloseResolve] = resolve;
        this[kCloseReject] = reject;
      }).finally(() => {
        this[kClosePromise] = void 0;
        this[kCloseReject] = void 0;
        this[kCloseResolve] = void 0;
      });
    }
    return this[kClosePromise];
  }
  [kRef](caller) {
    if (this[kFd] === -1) {
      const err = new Error(`file closed`);
      err.code = `EBADF`;
      err.syscall = caller.name;
      throw err;
    }
    this[kRefs]++;
  }
  [kUnref]() {
    this[kRefs]--;
    if (this[kRefs] === 0) {
      const fd = this[kFd];
      this[kFd] = -1;
      this[kBaseFs].closePromise(fd).then(this[kCloseResolve], this[kCloseReject]);
    }
  }
}

const SYNC_IMPLEMENTATIONS = /* @__PURE__ */ new Set([
  `accessSync`,
  `appendFileSync`,
  `createReadStream`,
  `createWriteStream`,
  `chmodSync`,
  `fchmodSync`,
  `chownSync`,
  `fchownSync`,
  `closeSync`,
  `copyFileSync`,
  `linkSync`,
  `lstatSync`,
  `fstatSync`,
  `lutimesSync`,
  `mkdirSync`,
  `openSync`,
  `opendirSync`,
  `readlinkSync`,
  `readFileSync`,
  `readdirSync`,
  `readlinkSync`,
  `realpathSync`,
  `renameSync`,
  `rmdirSync`,
  `statSync`,
  `symlinkSync`,
  `truncateSync`,
  `ftruncateSync`,
  `unlinkSync`,
  `unwatchFile`,
  `utimesSync`,
  `watch`,
  `watchFile`,
  `writeFileSync`,
  `writeSync`
]);
const ASYNC_IMPLEMENTATIONS = /* @__PURE__ */ new Set([
  `accessPromise`,
  `appendFilePromise`,
  `fchmodPromise`,
  `chmodPromise`,
  `fchownPromise`,
  `chownPromise`,
  `closePromise`,
  `copyFilePromise`,
  `linkPromise`,
  `fstatPromise`,
  `lstatPromise`,
  `lutimesPromise`,
  `mkdirPromise`,
  `openPromise`,
  `opendirPromise`,
  `readdirPromise`,
  `realpathPromise`,
  `readFilePromise`,
  `readdirPromise`,
  `readlinkPromise`,
  `renamePromise`,
  `rmdirPromise`,
  `statPromise`,
  `symlinkPromise`,
  `truncatePromise`,
  `ftruncatePromise`,
  `unlinkPromise`,
  `utimesPromise`,
  `writeFilePromise`,
  `writeSync`
]);
function patchFs(patchedFs, fakeFs) {
  fakeFs = new NodePathFS(fakeFs);
  const setupFn = (target, name, replacement) => {
    const orig = target[name];
    target[name] = replacement;
    if (typeof orig?.[nodeUtils.promisify.custom] !== `undefined`) {
      replacement[nodeUtils.promisify.custom] = orig[nodeUtils.promisify.custom];
    }
  };
  {
    setupFn(patchedFs, `exists`, (p, ...args) => {
      const hasCallback = typeof args[args.length - 1] === `function`;
      const callback = hasCallback ? args.pop() : () => {
      };
      process.nextTick(() => {
        fakeFs.existsPromise(p).then((exists) => {
          callback(exists);
        }, () => {
          callback(false);
        });
      });
    });
    setupFn(patchedFs, `read`, (...args) => {
      let [fd, buffer, offset, length, position, callback] = args;
      if (args.length <= 3) {
        let options = {};
        if (args.length < 3) {
          callback = args[1];
        } else {
          options = args[1];
          callback = args[2];
        }
        ({
          buffer = Buffer.alloc(16384),
          offset = 0,
          length = buffer.byteLength,
          position
        } = options);
      }
      if (offset == null)
        offset = 0;
      length |= 0;
      if (length === 0) {
        process.nextTick(() => {
          callback(null, 0, buffer);
        });
        return;
      }
      if (position == null)
        position = -1;
      process.nextTick(() => {
        fakeFs.readPromise(fd, buffer, offset, length, position).then((bytesRead) => {
          callback(null, bytesRead, buffer);
        }, (error) => {
          callback(error, 0, buffer);
        });
      });
    });
    for (const fnName of ASYNC_IMPLEMENTATIONS) {
      const origName = fnName.replace(/Promise$/, ``);
      if (typeof patchedFs[origName] === `undefined`)
        continue;
      const fakeImpl = fakeFs[fnName];
      if (typeof fakeImpl === `undefined`)
        continue;
      const wrapper = (...args) => {
        const hasCallback = typeof args[args.length - 1] === `function`;
        const callback = hasCallback ? args.pop() : () => {
        };
        process.nextTick(() => {
          fakeImpl.apply(fakeFs, args).then((result) => {
            callback(null, result);
          }, (error) => {
            callback(error);
          });
        });
      };
      setupFn(patchedFs, origName, wrapper);
    }
    patchedFs.realpath.native = patchedFs.realpath;
  }
  {
    setupFn(patchedFs, `existsSync`, (p) => {
      try {
        return fakeFs.existsSync(p);
      } catch (error) {
        return false;
      }
    });
    setupFn(patchedFs, `readSync`, (...args) => {
      let [fd, buffer, offset, length, position] = args;
      if (args.length <= 3) {
        const options = args[2] || {};
        ({ offset = 0, length = buffer.byteLength, position } = options);
      }
      if (offset == null)
        offset = 0;
      length |= 0;
      if (length === 0)
        return 0;
      if (position == null)
        position = -1;
      return fakeFs.readSync(fd, buffer, offset, length, position);
    });
    for (const fnName of SYNC_IMPLEMENTATIONS) {
      const origName = fnName;
      if (typeof patchedFs[origName] === `undefined`)
        continue;
      const fakeImpl = fakeFs[fnName];
      if (typeof fakeImpl === `undefined`)
        continue;
      setupFn(patchedFs, origName, fakeImpl.bind(fakeFs));
    }
    patchedFs.realpathSync.native = patchedFs.realpathSync;
  }
  {
    const patchedFsPromises = patchedFs.promises;
    for (const fnName of ASYNC_IMPLEMENTATIONS) {
      const origName = fnName.replace(/Promise$/, ``);
      if (typeof patchedFsPromises[origName] === `undefined`)
        continue;
      const fakeImpl = fakeFs[fnName];
      if (typeof fakeImpl === `undefined`)
        continue;
      if (fnName === `open`)
        continue;
      setupFn(patchedFsPromises, origName, (pathLike, ...args) => {
        if (pathLike instanceof FileHandle) {
          return pathLike[origName].apply(pathLike, args);
        } else {
          return fakeImpl.call(fakeFs, pathLike, ...args);
        }
      });
    }
    setupFn(patchedFsPromises, `open`, async (...args) => {
      const fd = await fakeFs.openPromise(...args);
      return new FileHandle(fd, fakeFs);
    });
  }
  {
    patchedFs.read[nodeUtils.promisify.custom] = async (fd, buffer, ...args) => {
      const res = fakeFs.readPromise(fd, buffer, ...args);
      return { bytesRead: await res, buffer };
    };
    patchedFs.write[nodeUtils.promisify.custom] = async (fd, buffer, ...args) => {
      const res = fakeFs.writePromise(fd, buffer, ...args);
      return { bytesWritten: await res, buffer };
    };
  }
}

let cachedInstance;
let registeredFactory = () => {
  throw new Error(`Assertion failed: No libzip instance is available, and no factory was configured`);
};
function setFactory(factory) {
  registeredFactory = factory;
}
function getInstance() {
  if (typeof cachedInstance === `undefined`)
    cachedInstance = registeredFactory();
  return cachedInstance;
}

var libzipSync = {exports: {}};

(function (module, exports) {
	var frozenFs = Object.assign({}, fs);
	var createModule = (() => {
	  var _scriptDir = void 0;
	  if (typeof __filename !== "undefined") _scriptDir = _scriptDir || __filename;
	  return function(createModule2) {
	    createModule2 = createModule2 || {};
	    var Module = typeof createModule2 != "undefined" ? createModule2 : {};
	    var readyPromiseResolve, readyPromiseReject;
	    Module["ready"] = new Promise(function(resolve, reject) {
	      readyPromiseResolve = resolve;
	      readyPromiseReject = reject;
	    });
	    var moduleOverrides = Object.assign({}, Module);
	    var scriptDirectory = "";
	    function locateFile(path) {
	      if (Module["locateFile"]) {
	        return Module["locateFile"](path, scriptDirectory);
	      }
	      return scriptDirectory + path;
	    }
	    var read_, readBinary;
	    var fs;
	    var nodePath;
	    var requireNodeFS;
	    {
	      {
	        scriptDirectory = __dirname + "/";
	      }
	      requireNodeFS = () => {
	        if (!nodePath) {
	          fs = frozenFs;
	          nodePath = path$1;
	        }
	      };
	      read_ = function shell_read(filename, binary) {
	        var ret = tryParseAsDataURI(filename);
	        if (ret) {
	          return binary ? ret : ret.toString();
	        }
	        requireNodeFS();
	        filename = nodePath["normalize"](filename);
	        return fs.readFileSync(filename, binary ? void 0 : "utf8");
	      };
	      readBinary = (filename) => {
	        var ret = read_(filename, true);
	        if (!ret.buffer) {
	          ret = new Uint8Array(ret);
	        }
	        return ret;
	      };
	      if (process["argv"].length > 1) {
	        process["argv"][1].replace(/\\/g, "/");
	      }
	      process["argv"].slice(2);
	      Module["inspect"] = function() {
	        return "[Emscripten Module object]";
	      };
	    }
	    Module["print"] || console.log.bind(console);
	    var err = Module["printErr"] || console.warn.bind(console);
	    Object.assign(Module, moduleOverrides);
	    moduleOverrides = null;
	    if (Module["arguments"]) Module["arguments"];
	    if (Module["thisProgram"]) Module["thisProgram"];
	    if (Module["quit"]) Module["quit"];
	    var wasmBinary;
	    if (Module["wasmBinary"]) wasmBinary = Module["wasmBinary"];
	    Module["noExitRuntime"] || true;
	    if (typeof WebAssembly != "object") {
	      abort("no native wasm support detected");
	    }
	    function getValue(ptr, type = "i8", noSafe) {
	      if (type.charAt(type.length - 1) === "*") type = "i32";
	      switch (type) {
	        case "i1":
	          return HEAP8[ptr >> 0];
	        case "i8":
	          return HEAP8[ptr >> 0];
	        case "i16":
	          return LE_HEAP_LOAD_I16((ptr >> 1) * 2);
	        case "i32":
	          return LE_HEAP_LOAD_I32((ptr >> 2) * 4);
	        case "i64":
	          return LE_HEAP_LOAD_I32((ptr >> 2) * 4);
	        case "float":
	          return LE_HEAP_LOAD_F32((ptr >> 2) * 4);
	        case "double":
	          return Number(LE_HEAP_LOAD_F64((ptr >> 3) * 8));
	        default:
	          abort("invalid type for getValue: " + type);
	      }
	      return null;
	    }
	    var wasmMemory;
	    var ABORT = false;
	    function getCFunc(ident) {
	      var func = Module["_" + ident];
	      return func;
	    }
	    function ccall(ident, returnType, argTypes, args, opts) {
	      var toC = { "string": function(str) {
	        var ret2 = 0;
	        if (str !== null && str !== void 0 && str !== 0) {
	          var len = (str.length << 2) + 1;
	          ret2 = stackAlloc(len);
	          stringToUTF8(str, ret2, len);
	        }
	        return ret2;
	      }, "array": function(arr) {
	        var ret2 = stackAlloc(arr.length);
	        writeArrayToMemory(arr, ret2);
	        return ret2;
	      } };
	      function convertReturnValue(ret2) {
	        if (returnType === "string") return UTF8ToString(ret2);
	        if (returnType === "boolean") return Boolean(ret2);
	        return ret2;
	      }
	      var func = getCFunc(ident);
	      var cArgs = [];
	      var stack = 0;
	      if (args) {
	        for (var i = 0; i < args.length; i++) {
	          var converter = toC[argTypes[i]];
	          if (converter) {
	            if (stack === 0) stack = stackSave();
	            cArgs[i] = converter(args[i]);
	          } else {
	            cArgs[i] = args[i];
	          }
	        }
	      }
	      var ret = func.apply(null, cArgs);
	      function onDone(ret2) {
	        if (stack !== 0) stackRestore(stack);
	        return convertReturnValue(ret2);
	      }
	      ret = onDone(ret);
	      return ret;
	    }
	    function cwrap(ident, returnType, argTypes, opts) {
	      argTypes = argTypes || [];
	      var numericArgs = argTypes.every(function(type) {
	        return type === "number";
	      });
	      var numericRet = returnType !== "string";
	      if (numericRet && numericArgs && !opts) {
	        return getCFunc(ident);
	      }
	      return function() {
	        return ccall(ident, returnType, argTypes, arguments);
	      };
	    }
	    var UTF8Decoder = new TextDecoder("utf8");
	    function UTF8ToString(ptr, maxBytesToRead) {
	      if (!ptr) return "";
	      var maxPtr = ptr + maxBytesToRead;
	      for (var end = ptr; !(end >= maxPtr) && HEAPU8[end]; ) ++end;
	      return UTF8Decoder.decode(HEAPU8.subarray(ptr, end));
	    }
	    function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {
	      if (!(maxBytesToWrite > 0)) return 0;
	      var startIdx = outIdx;
	      var endIdx = outIdx + maxBytesToWrite - 1;
	      for (var i = 0; i < str.length; ++i) {
	        var u = str.charCodeAt(i);
	        if (u >= 55296 && u <= 57343) {
	          var u1 = str.charCodeAt(++i);
	          u = 65536 + ((u & 1023) << 10) | u1 & 1023;
	        }
	        if (u <= 127) {
	          if (outIdx >= endIdx) break;
	          heap[outIdx++] = u;
	        } else if (u <= 2047) {
	          if (outIdx + 1 >= endIdx) break;
	          heap[outIdx++] = 192 | u >> 6;
	          heap[outIdx++] = 128 | u & 63;
	        } else if (u <= 65535) {
	          if (outIdx + 2 >= endIdx) break;
	          heap[outIdx++] = 224 | u >> 12;
	          heap[outIdx++] = 128 | u >> 6 & 63;
	          heap[outIdx++] = 128 | u & 63;
	        } else {
	          if (outIdx + 3 >= endIdx) break;
	          heap[outIdx++] = 240 | u >> 18;
	          heap[outIdx++] = 128 | u >> 12 & 63;
	          heap[outIdx++] = 128 | u >> 6 & 63;
	          heap[outIdx++] = 128 | u & 63;
	        }
	      }
	      heap[outIdx] = 0;
	      return outIdx - startIdx;
	    }
	    function stringToUTF8(str, outPtr, maxBytesToWrite) {
	      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
	    }
	    function lengthBytesUTF8(str) {
	      var len = 0;
	      for (var i = 0; i < str.length; ++i) {
	        var u = str.charCodeAt(i);
	        if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
	        if (u <= 127) ++len;
	        else if (u <= 2047) len += 2;
	        else if (u <= 65535) len += 3;
	        else len += 4;
	      }
	      return len;
	    }
	    function allocateUTF8(str) {
	      var size = lengthBytesUTF8(str) + 1;
	      var ret = _malloc(size);
	      if (ret) stringToUTF8Array(str, HEAP8, ret, size);
	      return ret;
	    }
	    function writeArrayToMemory(array, buffer2) {
	      HEAP8.set(array, buffer2);
	    }
	    var buffer, HEAP8, HEAPU8;
	    var HEAP_DATA_VIEW;
	    function updateGlobalBufferAndViews(buf) {
	      buffer = buf;
	      Module["HEAP_DATA_VIEW"] = HEAP_DATA_VIEW = new DataView(buf);
	      Module["HEAP8"] = HEAP8 = new Int8Array(buf);
	      Module["HEAP16"] = new Int16Array(buf);
	      Module["HEAP32"] = new Int32Array(buf);
	      Module["HEAPU8"] = HEAPU8 = new Uint8Array(buf);
	      Module["HEAPU16"] = new Uint16Array(buf);
	      Module["HEAPU32"] = new Uint32Array(buf);
	      Module["HEAPF32"] = new Float32Array(buf);
	      Module["HEAPF64"] = new Float64Array(buf);
	    }
	    Module["INITIAL_MEMORY"] || 16777216;
	    var wasmTable;
	    var __ATPRERUN__ = [];
	    var __ATINIT__ = [];
	    var __ATPOSTRUN__ = [];
	    function preRun() {
	      if (Module["preRun"]) {
	        if (typeof Module["preRun"] == "function") Module["preRun"] = [Module["preRun"]];
	        while (Module["preRun"].length) {
	          addOnPreRun(Module["preRun"].shift());
	        }
	      }
	      callRuntimeCallbacks(__ATPRERUN__);
	    }
	    function initRuntime() {
	      callRuntimeCallbacks(__ATINIT__);
	    }
	    function postRun() {
	      if (Module["postRun"]) {
	        if (typeof Module["postRun"] == "function") Module["postRun"] = [Module["postRun"]];
	        while (Module["postRun"].length) {
	          addOnPostRun(Module["postRun"].shift());
	        }
	      }
	      callRuntimeCallbacks(__ATPOSTRUN__);
	    }
	    function addOnPreRun(cb) {
	      __ATPRERUN__.unshift(cb);
	    }
	    function addOnInit(cb) {
	      __ATINIT__.unshift(cb);
	    }
	    function addOnPostRun(cb) {
	      __ATPOSTRUN__.unshift(cb);
	    }
	    var runDependencies = 0;
	    var dependenciesFulfilled = null;
	    function addRunDependency(id) {
	      runDependencies++;
	      if (Module["monitorRunDependencies"]) {
	        Module["monitorRunDependencies"](runDependencies);
	      }
	    }
	    function removeRunDependency(id) {
	      runDependencies--;
	      if (Module["monitorRunDependencies"]) {
	        Module["monitorRunDependencies"](runDependencies);
	      }
	      if (runDependencies == 0) {
	        if (dependenciesFulfilled) {
	          var callback = dependenciesFulfilled;
	          dependenciesFulfilled = null;
	          callback();
	        }
	      }
	    }
	    Module["preloadedImages"] = {};
	    Module["preloadedAudios"] = {};
	    function abort(what) {
	      {
	        if (Module["onAbort"]) {
	          Module["onAbort"](what);
	        }
	      }
	      what = "Aborted(" + what + ")";
	      err(what);
	      ABORT = true;
	      what += ". Build with -s ASSERTIONS=1 for more info.";
	      var e = new WebAssembly.RuntimeError(what);
	      readyPromiseReject(e);
	      throw e;
	    }
	    var dataURIPrefix = "data:application/octet-stream;base64,";
	    function isDataURI(filename) {
	      return filename.startsWith(dataURIPrefix);
	    }
	    var wasmBinaryFile;
	    wasmBinaryFile = "data:application/octet-stream;base64,";
	    if (!isDataURI(wasmBinaryFile)) {
	      wasmBinaryFile = locateFile(wasmBinaryFile);
	    }
	    function getBinary(file) {
	      try {
	        if (file == wasmBinaryFile && wasmBinary) {
	          return new Uint8Array(wasmBinary);
	        }
	        var binary = tryParseAsDataURI(file);
	        if (binary) {
	          return binary;
	        }
	        if (readBinary) {
	          return readBinary(file);
	        } else {
	          throw "sync fetching of the wasm failed: you can preload it to Module['wasmBinary'] manually, or emcc.py will do that for you when generating HTML (but not JS)";
	        }
	      } catch (err2) {
	        abort(err2);
	      }
	    }
	    function instantiateSync(file, info) {
	      var instance;
	      var module2;
	      var binary;
	      try {
	        binary = getBinary(file);
	        module2 = new WebAssembly.Module(binary);
	        instance = new WebAssembly.Instance(module2, info);
	      } catch (e) {
	        var str = e.toString();
	        err("failed to compile wasm module: " + str);
	        if (str.includes("imported Memory") || str.includes("memory import")) {
	          err("Memory size incompatibility issues may be due to changing INITIAL_MEMORY at runtime to something too large. Use ALLOW_MEMORY_GROWTH to allow any size memory (and also make sure not to set INITIAL_MEMORY at runtime to something smaller than it was at compile time).");
	        }
	        throw e;
	      }
	      return [instance, module2];
	    }
	    function createWasm() {
	      var info = { "a": asmLibraryArg };
	      function receiveInstance(instance, module2) {
	        var exports3 = instance.exports;
	        Module["asm"] = exports3;
	        wasmMemory = Module["asm"]["h"];
	        updateGlobalBufferAndViews(wasmMemory.buffer);
	        wasmTable = Module["asm"]["X"];
	        addOnInit(Module["asm"]["i"]);
	        removeRunDependency();
	      }
	      addRunDependency();
	      if (Module["instantiateWasm"]) {
	        try {
	          var exports2 = Module["instantiateWasm"](info, receiveInstance);
	          return exports2;
	        } catch (e) {
	          err("Module.instantiateWasm callback failed with error: " + e);
	          return false;
	        }
	      }
	      var result = instantiateSync(wasmBinaryFile, info);
	      receiveInstance(result[0]);
	      return Module["asm"];
	    }
	    function LE_HEAP_LOAD_F32(byteOffset) {
	      return HEAP_DATA_VIEW.getFloat32(byteOffset, true);
	    }
	    function LE_HEAP_LOAD_F64(byteOffset) {
	      return HEAP_DATA_VIEW.getFloat64(byteOffset, true);
	    }
	    function LE_HEAP_LOAD_I16(byteOffset) {
	      return HEAP_DATA_VIEW.getInt16(byteOffset, true);
	    }
	    function LE_HEAP_LOAD_I32(byteOffset) {
	      return HEAP_DATA_VIEW.getInt32(byteOffset, true);
	    }
	    function LE_HEAP_STORE_I32(byteOffset, value) {
	      HEAP_DATA_VIEW.setInt32(byteOffset, value, true);
	    }
	    function callRuntimeCallbacks(callbacks) {
	      while (callbacks.length > 0) {
	        var callback = callbacks.shift();
	        if (typeof callback == "function") {
	          callback(Module);
	          continue;
	        }
	        var func = callback.func;
	        if (typeof func == "number") {
	          if (callback.arg === void 0) {
	            getWasmTableEntry(func)();
	          } else {
	            getWasmTableEntry(func)(callback.arg);
	          }
	        } else {
	          func(callback.arg === void 0 ? null : callback.arg);
	        }
	      }
	    }
	    var wasmTableMirror = [];
	    function getWasmTableEntry(funcPtr) {
	      var func = wasmTableMirror[funcPtr];
	      if (!func) {
	        if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;
	        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);
	      }
	      return func;
	    }
	    function __gmtime_js(time, tmPtr) {
	      var date = new Date(LE_HEAP_LOAD_I32((time >> 2) * 4) * 1e3);
	      LE_HEAP_STORE_I32((tmPtr >> 2) * 4, date.getUTCSeconds());
	      LE_HEAP_STORE_I32((tmPtr + 4 >> 2) * 4, date.getUTCMinutes());
	      LE_HEAP_STORE_I32((tmPtr + 8 >> 2) * 4, date.getUTCHours());
	      LE_HEAP_STORE_I32((tmPtr + 12 >> 2) * 4, date.getUTCDate());
	      LE_HEAP_STORE_I32((tmPtr + 16 >> 2) * 4, date.getUTCMonth());
	      LE_HEAP_STORE_I32((tmPtr + 20 >> 2) * 4, date.getUTCFullYear() - 1900);
	      LE_HEAP_STORE_I32((tmPtr + 24 >> 2) * 4, date.getUTCDay());
	      var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);
	      var yday = (date.getTime() - start) / (1e3 * 60 * 60 * 24) | 0;
	      LE_HEAP_STORE_I32((tmPtr + 28 >> 2) * 4, yday);
	    }
	    function __timegm_js(tmPtr) {
	      var time = Date.UTC(LE_HEAP_LOAD_I32((tmPtr + 20 >> 2) * 4) + 1900, LE_HEAP_LOAD_I32((tmPtr + 16 >> 2) * 4), LE_HEAP_LOAD_I32((tmPtr + 12 >> 2) * 4), LE_HEAP_LOAD_I32((tmPtr + 8 >> 2) * 4), LE_HEAP_LOAD_I32((tmPtr + 4 >> 2) * 4), LE_HEAP_LOAD_I32((tmPtr >> 2) * 4), 0);
	      var date = new Date(time);
	      LE_HEAP_STORE_I32((tmPtr + 24 >> 2) * 4, date.getUTCDay());
	      var start = Date.UTC(date.getUTCFullYear(), 0, 1, 0, 0, 0, 0);
	      var yday = (date.getTime() - start) / (1e3 * 60 * 60 * 24) | 0;
	      LE_HEAP_STORE_I32((tmPtr + 28 >> 2) * 4, yday);
	      return date.getTime() / 1e3 | 0;
	    }
	    function _tzset_impl(timezone, daylight, tzname) {
	      var currentYear = (/* @__PURE__ */ new Date()).getFullYear();
	      var winter = new Date(currentYear, 0, 1);
	      var summer = new Date(currentYear, 6, 1);
	      var winterOffset = winter.getTimezoneOffset();
	      var summerOffset = summer.getTimezoneOffset();
	      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);
	      LE_HEAP_STORE_I32((timezone >> 2) * 4, stdTimezoneOffset * 60);
	      LE_HEAP_STORE_I32((daylight >> 2) * 4, Number(winterOffset != summerOffset));
	      function extractZone(date) {
	        var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);
	        return match ? match[1] : "GMT";
	      }
	      var winterName = extractZone(winter);
	      var summerName = extractZone(summer);
	      var winterNamePtr = allocateUTF8(winterName);
	      var summerNamePtr = allocateUTF8(summerName);
	      if (summerOffset < winterOffset) {
	        LE_HEAP_STORE_I32((tzname >> 2) * 4, winterNamePtr);
	        LE_HEAP_STORE_I32((tzname + 4 >> 2) * 4, summerNamePtr);
	      } else {
	        LE_HEAP_STORE_I32((tzname >> 2) * 4, summerNamePtr);
	        LE_HEAP_STORE_I32((tzname + 4 >> 2) * 4, winterNamePtr);
	      }
	    }
	    function __tzset_js(timezone, daylight, tzname) {
	      if (__tzset_js.called) return;
	      __tzset_js.called = true;
	      _tzset_impl(timezone, daylight, tzname);
	    }
	    function _emscripten_memcpy_big(dest, src, num) {
	      HEAPU8.copyWithin(dest, src, src + num);
	    }
	    function _emscripten_get_heap_max() {
	      return 2147483648;
	    }
	    function emscripten_realloc_buffer(size) {
	      try {
	        wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);
	        updateGlobalBufferAndViews(wasmMemory.buffer);
	        return 1;
	      } catch (e) {
	      }
	    }
	    function _emscripten_resize_heap(requestedSize) {
	      var oldSize = HEAPU8.length;
	      requestedSize = requestedSize >>> 0;
	      var maxHeapSize = _emscripten_get_heap_max();
	      if (requestedSize > maxHeapSize) {
	        return false;
	      }
	      let alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;
	      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {
	        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);
	        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);
	        var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));
	        var replacement = emscripten_realloc_buffer(newSize);
	        if (replacement) {
	          return true;
	        }
	      }
	      return false;
	    }
	    function _setTempRet0(val) {
	    }
	    function _time(ptr) {
	      var ret = Date.now() / 1e3 | 0;
	      if (ptr) {
	        LE_HEAP_STORE_I32((ptr >> 2) * 4, ret);
	      }
	      return ret;
	    }
	    function intArrayFromBase64(s) {
	      {
	        var buf = Buffer.from(s, "base64");
	        return new Uint8Array(buf["buffer"], buf["byteOffset"], buf["byteLength"]);
	      }
	    }
	    function tryParseAsDataURI(filename) {
	      if (!isDataURI(filename)) {
	        return;
	      }
	      return intArrayFromBase64(filename.slice(dataURIPrefix.length));
	    }
	    var asmLibraryArg = { "d": __gmtime_js, "e": __timegm_js, "f": __tzset_js, "g": _emscripten_memcpy_big, "c": _emscripten_resize_heap, "a": _setTempRet0, "b": _time };
	    var asm = createWasm();
	    Module["___wasm_call_ctors"] = asm["i"];
	    Module["_zip_ext_count_symlinks"] = asm["j"];
	    Module["_zip_file_get_external_attributes"] = asm["k"];
	    Module["_zipstruct_statS"] = asm["l"];
	    Module["_zipstruct_stat_size"] = asm["m"];
	    Module["_zipstruct_stat_mtime"] = asm["n"];
	    Module["_zipstruct_stat_crc"] = asm["o"];
	    Module["_zipstruct_errorS"] = asm["p"];
	    Module["_zipstruct_error_code_zip"] = asm["q"];
	    Module["_zipstruct_stat_comp_size"] = asm["r"];
	    Module["_zipstruct_stat_comp_method"] = asm["s"];
	    Module["_zip_close"] = asm["t"];
	    Module["_zip_delete"] = asm["u"];
	    Module["_zip_dir_add"] = asm["v"];
	    Module["_zip_discard"] = asm["w"];
	    Module["_zip_error_init_with_code"] = asm["x"];
	    Module["_zip_get_error"] = asm["y"];
	    Module["_zip_file_get_error"] = asm["z"];
	    Module["_zip_error_strerror"] = asm["A"];
	    Module["_zip_fclose"] = asm["B"];
	    Module["_zip_file_add"] = asm["C"];
	    Module["_free"] = asm["D"];
	    var _malloc = Module["_malloc"] = asm["E"];
	    Module["_zip_source_error"] = asm["F"];
	    Module["_zip_source_seek"] = asm["G"];
	    Module["_zip_file_set_external_attributes"] = asm["H"];
	    Module["_zip_file_set_mtime"] = asm["I"];
	    Module["_zip_fopen_index"] = asm["J"];
	    Module["_zip_fread"] = asm["K"];
	    Module["_zip_get_name"] = asm["L"];
	    Module["_zip_get_num_entries"] = asm["M"];
	    Module["_zip_source_read"] = asm["N"];
	    Module["_zip_name_locate"] = asm["O"];
	    Module["_zip_open_from_source"] = asm["P"];
	    Module["_zip_set_file_compression"] = asm["Q"];
	    Module["_zip_source_buffer"] = asm["R"];
	    Module["_zip_source_buffer_create"] = asm["S"];
	    Module["_zip_source_close"] = asm["T"];
	    Module["_zip_source_free"] = asm["U"];
	    Module["_zip_source_keep"] = asm["V"];
	    Module["_zip_source_open"] = asm["W"];
	    Module["_zip_source_tell"] = asm["Y"];
	    Module["_zip_stat_index"] = asm["Z"];
	    var stackSave = Module["stackSave"] = asm["_"];
	    var stackRestore = Module["stackRestore"] = asm["$"];
	    var stackAlloc = Module["stackAlloc"] = asm["aa"];
	    Module["cwrap"] = cwrap;
	    Module["getValue"] = getValue;
	    var calledRun;
	    dependenciesFulfilled = function runCaller() {
	      if (!calledRun) run();
	      if (!calledRun) dependenciesFulfilled = runCaller;
	    };
	    function run(args) {
	      if (runDependencies > 0) {
	        return;
	      }
	      preRun();
	      if (runDependencies > 0) {
	        return;
	      }
	      function doRun() {
	        if (calledRun) return;
	        calledRun = true;
	        Module["calledRun"] = true;
	        if (ABORT) return;
	        initRuntime();
	        readyPromiseResolve(Module);
	        if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();
	        postRun();
	      }
	      if (Module["setStatus"]) {
	        Module["setStatus"]("Running...");
	        setTimeout(function() {
	          setTimeout(function() {
	            Module["setStatus"]("");
	          }, 1);
	          doRun();
	        }, 1);
	      } else {
	        doRun();
	      }
	    }
	    Module["run"] = run;
	    if (Module["preInit"]) {
	      if (typeof Module["preInit"] == "function") Module["preInit"] = [Module["preInit"]];
	      while (Module["preInit"].length > 0) {
	        Module["preInit"].pop()();
	      }
	    }
	    run();
	    return createModule2;
	  };
	})();
	module.exports = createModule; 
} (libzipSync));

var libzipSyncExports = libzipSync.exports;
const createModule = /*@__PURE__*/getDefaultExportFromCjs(libzipSyncExports);

const number64 = [
  `number`,
  // low
  `number`
  // high
];
var Errors = /* @__PURE__ */ ((Errors2) => {
  Errors2[Errors2["ZIP_ER_OK"] = 0] = "ZIP_ER_OK";
  Errors2[Errors2["ZIP_ER_MULTIDISK"] = 1] = "ZIP_ER_MULTIDISK";
  Errors2[Errors2["ZIP_ER_RENAME"] = 2] = "ZIP_ER_RENAME";
  Errors2[Errors2["ZIP_ER_CLOSE"] = 3] = "ZIP_ER_CLOSE";
  Errors2[Errors2["ZIP_ER_SEEK"] = 4] = "ZIP_ER_SEEK";
  Errors2[Errors2["ZIP_ER_READ"] = 5] = "ZIP_ER_READ";
  Errors2[Errors2["ZIP_ER_WRITE"] = 6] = "ZIP_ER_WRITE";
  Errors2[Errors2["ZIP_ER_CRC"] = 7] = "ZIP_ER_CRC";
  Errors2[Errors2["ZIP_ER_ZIPCLOSED"] = 8] = "ZIP_ER_ZIPCLOSED";
  Errors2[Errors2["ZIP_ER_NOENT"] = 9] = "ZIP_ER_NOENT";
  Errors2[Errors2["ZIP_ER_EXISTS"] = 10] = "ZIP_ER_EXISTS";
  Errors2[Errors2["ZIP_ER_OPEN"] = 11] = "ZIP_ER_OPEN";
  Errors2[Errors2["ZIP_ER_TMPOPEN"] = 12] = "ZIP_ER_TMPOPEN";
  Errors2[Errors2["ZIP_ER_ZLIB"] = 13] = "ZIP_ER_ZLIB";
  Errors2[Errors2["ZIP_ER_MEMORY"] = 14] = "ZIP_ER_MEMORY";
  Errors2[Errors2["ZIP_ER_CHANGED"] = 15] = "ZIP_ER_CHANGED";
  Errors2[Errors2["ZIP_ER_COMPNOTSUPP"] = 16] = "ZIP_ER_COMPNOTSUPP";
  Errors2[Errors2["ZIP_ER_EOF"] = 17] = "ZIP_ER_EOF";
  Errors2[Errors2["ZIP_ER_INVAL"] = 18] = "ZIP_ER_INVAL";
  Errors2[Errors2["ZIP_ER_NOZIP"] = 19] = "ZIP_ER_NOZIP";
  Errors2[Errors2["ZIP_ER_INTERNAL"] = 20] = "ZIP_ER_INTERNAL";
  Errors2[Errors2["ZIP_ER_INCONS"] = 21] = "ZIP_ER_INCONS";
  Errors2[Errors2["ZIP_ER_REMOVE"] = 22] = "ZIP_ER_REMOVE";
  Errors2[Errors2["ZIP_ER_DELETED"] = 23] = "ZIP_ER_DELETED";
  Errors2[Errors2["ZIP_ER_ENCRNOTSUPP"] = 24] = "ZIP_ER_ENCRNOTSUPP";
  Errors2[Errors2["ZIP_ER_RDONLY"] = 25] = "ZIP_ER_RDONLY";
  Errors2[Errors2["ZIP_ER_NOPASSWD"] = 26] = "ZIP_ER_NOPASSWD";
  Errors2[Errors2["ZIP_ER_WRONGPASSWD"] = 27] = "ZIP_ER_WRONGPASSWD";
  Errors2[Errors2["ZIP_ER_OPNOTSUPP"] = 28] = "ZIP_ER_OPNOTSUPP";
  Errors2[Errors2["ZIP_ER_INUSE"] = 29] = "ZIP_ER_INUSE";
  Errors2[Errors2["ZIP_ER_TELL"] = 30] = "ZIP_ER_TELL";
  Errors2[Errors2["ZIP_ER_COMPRESSED_DATA"] = 31] = "ZIP_ER_COMPRESSED_DATA";
  return Errors2;
})(Errors || {});
const makeInterface = (emZip) => ({
  // Those are getters because they can change after memory growth
  get HEAPU8() {
    return emZip.HEAPU8;
  },
  errors: Errors,
  SEEK_SET: 0,
  SEEK_CUR: 1,
  SEEK_END: 2,
  ZIP_CHECKCONS: 4,
  ZIP_EXCL: 2,
  ZIP_RDONLY: 16,
  ZIP_FL_OVERWRITE: 8192,
  ZIP_FL_COMPRESSED: 4,
  ZIP_OPSYS_DOS: 0,
  ZIP_OPSYS_AMIGA: 1,
  ZIP_OPSYS_OPENVMS: 2,
  ZIP_OPSYS_UNIX: 3,
  ZIP_OPSYS_VM_CMS: 4,
  ZIP_OPSYS_ATARI_ST: 5,
  ZIP_OPSYS_OS_2: 6,
  ZIP_OPSYS_MACINTOSH: 7,
  ZIP_OPSYS_Z_SYSTEM: 8,
  ZIP_OPSYS_CPM: 9,
  ZIP_OPSYS_WINDOWS_NTFS: 10,
  ZIP_OPSYS_MVS: 11,
  ZIP_OPSYS_VSE: 12,
  ZIP_OPSYS_ACORN_RISC: 13,
  ZIP_OPSYS_VFAT: 14,
  ZIP_OPSYS_ALTERNATE_MVS: 15,
  ZIP_OPSYS_BEOS: 16,
  ZIP_OPSYS_TANDEM: 17,
  ZIP_OPSYS_OS_400: 18,
  ZIP_OPSYS_OS_X: 19,
  ZIP_CM_DEFAULT: -1,
  ZIP_CM_STORE: 0,
  ZIP_CM_DEFLATE: 8,
  uint08S: emZip._malloc(1),
  uint32S: emZip._malloc(4),
  malloc: emZip._malloc,
  free: emZip._free,
  getValue: emZip.getValue,
  openFromSource: emZip.cwrap(`zip_open_from_source`, `number`, [`number`, `number`, `number`]),
  close: emZip.cwrap(`zip_close`, `number`, [`number`]),
  discard: emZip.cwrap(`zip_discard`, null, [`number`]),
  getError: emZip.cwrap(`zip_get_error`, `number`, [`number`]),
  getName: emZip.cwrap(`zip_get_name`, `string`, [`number`, `number`, `number`]),
  getNumEntries: emZip.cwrap(`zip_get_num_entries`, `number`, [`number`, `number`]),
  delete: emZip.cwrap(`zip_delete`, `number`, [`number`, `number`]),
  statIndex: emZip.cwrap(`zip_stat_index`, `number`, [`number`, ...number64, `number`, `number`]),
  fopenIndex: emZip.cwrap(`zip_fopen_index`, `number`, [`number`, ...number64, `number`]),
  fread: emZip.cwrap(`zip_fread`, `number`, [`number`, `number`, `number`, `number`]),
  fclose: emZip.cwrap(`zip_fclose`, `number`, [`number`]),
  dir: {
    add: emZip.cwrap(`zip_dir_add`, `number`, [`number`, `string`])
  },
  file: {
    add: emZip.cwrap(`zip_file_add`, `number`, [`number`, `string`, `number`, `number`]),
    getError: emZip.cwrap(`zip_file_get_error`, `number`, [`number`]),
    getExternalAttributes: emZip.cwrap(`zip_file_get_external_attributes`, `number`, [`number`, ...number64, `number`, `number`, `number`]),
    setExternalAttributes: emZip.cwrap(`zip_file_set_external_attributes`, `number`, [`number`, ...number64, `number`, `number`, `number`]),
    setMtime: emZip.cwrap(`zip_file_set_mtime`, `number`, [`number`, ...number64, `number`, `number`]),
    setCompression: emZip.cwrap(`zip_set_file_compression`, `number`, [`number`, ...number64, `number`, `number`])
  },
  ext: {
    countSymlinks: emZip.cwrap(`zip_ext_count_symlinks`, `number`, [`number`])
  },
  error: {
    initWithCode: emZip.cwrap(`zip_error_init_with_code`, null, [`number`, `number`]),
    strerror: emZip.cwrap(`zip_error_strerror`, `string`, [`number`])
  },
  name: {
    locate: emZip.cwrap(`zip_name_locate`, `number`, [`number`, `string`, `number`])
  },
  source: {
    fromUnattachedBuffer: emZip.cwrap(`zip_source_buffer_create`, `number`, [`number`, ...number64, `number`, `number`]),
    fromBuffer: emZip.cwrap(`zip_source_buffer`, `number`, [`number`, `number`, ...number64, `number`]),
    free: emZip.cwrap(`zip_source_free`, null, [`number`]),
    keep: emZip.cwrap(`zip_source_keep`, null, [`number`]),
    open: emZip.cwrap(`zip_source_open`, `number`, [`number`]),
    close: emZip.cwrap(`zip_source_close`, `number`, [`number`]),
    seek: emZip.cwrap(`zip_source_seek`, `number`, [`number`, ...number64, `number`]),
    tell: emZip.cwrap(`zip_source_tell`, `number`, [`number`]),
    read: emZip.cwrap(`zip_source_read`, `number`, [`number`, `number`, `number`]),
    error: emZip.cwrap(`zip_source_error`, `number`, [`number`])
  },
  struct: {
    statS: emZip.cwrap(`zipstruct_statS`, `number`, []),
    statSize: emZip.cwrap(`zipstruct_stat_size`, `number`, [`number`]),
    statCompSize: emZip.cwrap(`zipstruct_stat_comp_size`, `number`, [`number`]),
    statCompMethod: emZip.cwrap(`zipstruct_stat_comp_method`, `number`, [`number`]),
    statMtime: emZip.cwrap(`zipstruct_stat_mtime`, `number`, [`number`]),
    statCrc: emZip.cwrap(`zipstruct_stat_crc`, `number`, [`number`]),
    errorS: emZip.cwrap(`zipstruct_errorS`, `number`, []),
    errorCodeZip: emZip.cwrap(`zipstruct_error_code_zip`, `number`, [`number`])
  }
});

function getArchivePart(path, extension) {
  let idx = path.indexOf(extension);
  if (idx <= 0)
    return null;
  let nextCharIdx = idx;
  while (idx >= 0) {
    nextCharIdx = idx + extension.length;
    if (path[nextCharIdx] === ppath.sep)
      break;
    if (path[idx - 1] === ppath.sep)
      return null;
    idx = path.indexOf(extension, nextCharIdx);
  }
  if (path.length > nextCharIdx && path[nextCharIdx] !== ppath.sep)
    return null;
  return path.slice(0, nextCharIdx);
}
class ZipOpenFS extends MountFS {
  static async openPromise(fn, opts) {
    const zipOpenFs = new ZipOpenFS(opts);
    try {
      return await fn(zipOpenFs);
    } finally {
      zipOpenFs.saveAndClose();
    }
  }
  constructor(opts = {}) {
    const fileExtensions = opts.fileExtensions;
    const readOnlyArchives = opts.readOnlyArchives;
    const getMountPoint = typeof fileExtensions === `undefined` ? (path) => getArchivePart(path, `.zip`) : (path) => {
      for (const extension of fileExtensions) {
        const result = getArchivePart(path, extension);
        if (result) {
          return result;
        }
      }
      return null;
    };
    const factorySync = (baseFs, p) => {
      return new ZipFS(p, {
        baseFs,
        readOnly: readOnlyArchives,
        stats: baseFs.statSync(p)
      });
    };
    const factoryPromise = async (baseFs, p) => {
      const zipOptions = {
        baseFs,
        readOnly: readOnlyArchives,
        stats: await baseFs.statPromise(p)
      };
      return () => {
        return new ZipFS(p, zipOptions);
      };
    };
    super({
      ...opts,
      factorySync,
      factoryPromise,
      getMountPoint
    });
  }
}

const DEFAULT_COMPRESSION_LEVEL = `mixed`;
function toUnixTimestamp(time) {
  if (typeof time === `string` && String(+time) === time)
    return +time;
  if (typeof time === `number` && Number.isFinite(time)) {
    if (time < 0) {
      return Date.now() / 1e3;
    } else {
      return time;
    }
  }
  if (nodeUtils.types.isDate(time))
    return time.getTime() / 1e3;
  throw new Error(`Invalid time`);
}
function makeEmptyArchive() {
  return Buffer.from([
    80,
    75,
    5,
    6,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
  ]);
}
class LibzipError extends Error {
  code;
  constructor(message, code) {
    super(message);
    this.name = `Libzip Error`;
    this.code = code;
  }
}
class ZipFS extends BasePortableFakeFS {
  libzip;
  baseFs;
  path;
  stats;
  zip;
  lzSource;
  level;
  listings = /* @__PURE__ */ new Map();
  entries = /* @__PURE__ */ new Map();
  /**
   * A cache of indices mapped to file sources.
   * Populated by `setFileSource` calls.
   * Required for supporting read after write.
   */
  fileSources = /* @__PURE__ */ new Map();
  symlinkCount;
  fds = /* @__PURE__ */ new Map();
  nextFd = 0;
  ready = false;
  readOnly = false;
  constructor(source, opts = {}) {
    super();
    const pathOptions = opts;
    this.level = typeof pathOptions.level !== `undefined` ? pathOptions.level : DEFAULT_COMPRESSION_LEVEL;
    source ??= makeEmptyArchive();
    if (typeof source === `string`) {
      const { baseFs = new NodeFS() } = pathOptions;
      this.baseFs = baseFs;
      this.path = source;
    } else {
      this.path = null;
      this.baseFs = null;
    }
    if (opts.stats) {
      this.stats = opts.stats;
    } else {
      if (typeof source === `string`) {
        try {
          this.stats = this.baseFs.statSync(source);
        } catch (error) {
          if (error.code === `ENOENT` && pathOptions.create) {
            this.stats = makeDefaultStats();
          } else {
            throw error;
          }
        }
      } else {
        this.stats = makeDefaultStats();
      }
    }
    this.libzip = getInstance();
    const errPtr = this.libzip.malloc(4);
    try {
      let flags = 0;
      if (opts.readOnly) {
        flags |= this.libzip.ZIP_RDONLY;
        this.readOnly = true;
      }
      if (typeof source === `string`)
        source = pathOptions.create ? makeEmptyArchive() : this.baseFs.readFileSync(source);
      const lzSource = this.allocateUnattachedSource(source);
      try {
        this.zip = this.libzip.openFromSource(lzSource, flags, errPtr);
        this.lzSource = lzSource;
      } catch (error) {
        this.libzip.source.free(lzSource);
        throw error;
      }
      if (this.zip === 0) {
        const error = this.libzip.struct.errorS();
        this.libzip.error.initWithCode(error, this.libzip.getValue(errPtr, `i32`));
        throw this.makeLibzipError(error);
      }
    } finally {
      this.libzip.free(errPtr);
    }
    this.listings.set(PortablePath.root, /* @__PURE__ */ new Set());
    const entryCount = this.libzip.getNumEntries(this.zip, 0);
    for (let t = 0; t < entryCount; ++t) {
      const raw = this.libzip.getName(this.zip, t, 0);
      if (ppath.isAbsolute(raw))
        continue;
      const p = ppath.resolve(PortablePath.root, raw);
      this.registerEntry(p, t);
      if (raw.endsWith(`/`)) {
        this.registerListing(p);
      }
    }
    this.symlinkCount = this.libzip.ext.countSymlinks(this.zip);
    if (this.symlinkCount === -1)
      throw this.makeLibzipError(this.libzip.getError(this.zip));
    this.ready = true;
  }
  makeLibzipError(error) {
    const errorCode = this.libzip.struct.errorCodeZip(error);
    const strerror = this.libzip.error.strerror(error);
    const libzipError = new LibzipError(strerror, this.libzip.errors[errorCode]);
    if (errorCode === this.libzip.errors.ZIP_ER_CHANGED)
      throw new Error(`Assertion failed: Unexpected libzip error: ${libzipError.message}`);
    return libzipError;
  }
  getExtractHint(hints) {
    for (const fileName of this.entries.keys()) {
      const ext = this.pathUtils.extname(fileName);
      if (hints.relevantExtensions.has(ext)) {
        return true;
      }
    }
    return false;
  }
  getAllFiles() {
    return Array.from(this.entries.keys());
  }
  getRealPath() {
    if (!this.path)
      throw new Error(`ZipFS don't have real paths when loaded from a buffer`);
    return this.path;
  }
  prepareClose() {
    if (!this.ready)
      throw EBUSY(`archive closed, close`);
    unwatchAllFiles(this);
  }
  getBufferAndClose() {
    this.prepareClose();
    if (this.entries.size === 0) {
      this.discardAndClose();
      return makeEmptyArchive();
    }
    try {
      this.libzip.source.keep(this.lzSource);
      if (this.libzip.close(this.zip) === -1)
        throw this.makeLibzipError(this.libzip.getError(this.zip));
      if (this.libzip.source.open(this.lzSource) === -1)
        throw this.makeLibzipError(this.libzip.source.error(this.lzSource));
      if (this.libzip.source.seek(this.lzSource, 0, 0, this.libzip.SEEK_END) === -1)
        throw this.makeLibzipError(this.libzip.source.error(this.lzSource));
      const size = this.libzip.source.tell(this.lzSource);
      if (size === -1)
        throw this.makeLibzipError(this.libzip.source.error(this.lzSource));
      if (this.libzip.source.seek(this.lzSource, 0, 0, this.libzip.SEEK_SET) === -1)
        throw this.makeLibzipError(this.libzip.source.error(this.lzSource));
      const buffer = this.libzip.malloc(size);
      if (!buffer)
        throw new Error(`Couldn't allocate enough memory`);
      try {
        const rc = this.libzip.source.read(this.lzSource, buffer, size);
        if (rc === -1)
          throw this.makeLibzipError(this.libzip.source.error(this.lzSource));
        else if (rc < size)
          throw new Error(`Incomplete read`);
        else if (rc > size)
          throw new Error(`Overread`);
        const memory = this.libzip.HEAPU8.subarray(buffer, buffer + size);
        return Buffer.from(memory);
      } finally {
        this.libzip.free(buffer);
      }
    } finally {
      this.libzip.source.close(this.lzSource);
      this.libzip.source.free(this.lzSource);
      this.ready = false;
    }
  }
  discardAndClose() {
    this.prepareClose();
    this.libzip.discard(this.zip);
    this.ready = false;
  }
  saveAndClose() {
    if (!this.path || !this.baseFs)
      throw new Error(`ZipFS cannot be saved and must be discarded when loaded from a buffer`);
    if (this.readOnly) {
      this.discardAndClose();
      return;
    }
    const newMode = this.baseFs.existsSync(this.path) || this.stats.mode === DEFAULT_MODE ? void 0 : this.stats.mode;
    this.baseFs.writeFileSync(this.path, this.getBufferAndClose(), { mode: newMode });
    this.ready = false;
  }
  resolve(p) {
    return ppath.resolve(PortablePath.root, p);
  }
  async openPromise(p, flags, mode) {
    return this.openSync(p, flags, mode);
  }
  openSync(p, flags, mode) {
    const fd = this.nextFd++;
    this.fds.set(fd, { cursor: 0, p });
    return fd;
  }
  hasOpenFileHandles() {
    return !!this.fds.size;
  }
  async opendirPromise(p, opts) {
    return this.opendirSync(p, opts);
  }
  opendirSync(p, opts = {}) {
    const resolvedP = this.resolveFilename(`opendir '${p}'`, p);
    if (!this.entries.has(resolvedP) && !this.listings.has(resolvedP))
      throw ENOENT(`opendir '${p}'`);
    const directoryListing = this.listings.get(resolvedP);
    if (!directoryListing)
      throw ENOTDIR(`opendir '${p}'`);
    const entries = [...directoryListing];
    const fd = this.openSync(resolvedP, `r`);
    const onClose = () => {
      this.closeSync(fd);
    };
    return opendir(this, resolvedP, entries, { onClose });
  }
  async readPromise(fd, buffer, offset, length, position) {
    return this.readSync(fd, buffer, offset, length, position);
  }
  readSync(fd, buffer, offset = 0, length = buffer.byteLength, position = -1) {
    const entry = this.fds.get(fd);
    if (typeof entry === `undefined`)
      throw EBADF(`read`);
    const realPosition = position === -1 || position === null ? entry.cursor : position;
    const source = this.readFileSync(entry.p);
    source.copy(buffer, offset, realPosition, realPosition + length);
    const bytesRead = Math.max(0, Math.min(source.length - realPosition, length));
    if (position === -1 || position === null)
      entry.cursor += bytesRead;
    return bytesRead;
  }
  async writePromise(fd, buffer, offset, length, position) {
    if (typeof buffer === `string`) {
      return this.writeSync(fd, buffer, position);
    } else {
      return this.writeSync(fd, buffer, offset, length, position);
    }
  }
  writeSync(fd, buffer, offset, length, position) {
    const entry = this.fds.get(fd);
    if (typeof entry === `undefined`)
      throw EBADF(`read`);
    throw new Error(`Unimplemented`);
  }
  async closePromise(fd) {
    return this.closeSync(fd);
  }
  closeSync(fd) {
    const entry = this.fds.get(fd);
    if (typeof entry === `undefined`)
      throw EBADF(`read`);
    this.fds.delete(fd);
  }
  createReadStream(p, { encoding } = {}) {
    if (p === null)
      throw new Error(`Unimplemented`);
    const fd = this.openSync(p, `r`);
    const stream$1 = Object.assign(
      new stream.PassThrough({
        emitClose: true,
        autoDestroy: true,
        destroy: (error, callback) => {
          clearImmediate(immediate);
          this.closeSync(fd);
          callback(error);
        }
      }),
      {
        close() {
          stream$1.destroy();
        },
        bytesRead: 0,
        path: p,
        // "This property is `true` if the underlying file has not been opened yet"
        pending: false
      }
    );
    const immediate = setImmediate(async () => {
      try {
        const data = await this.readFilePromise(p, encoding);
        stream$1.bytesRead = data.length;
        stream$1.end(data);
      } catch (error) {
        stream$1.destroy(error);
      }
    });
    return stream$1;
  }
  createWriteStream(p, { encoding } = {}) {
    if (this.readOnly)
      throw EROFS(`open '${p}'`);
    if (p === null)
      throw new Error(`Unimplemented`);
    const chunks = [];
    const fd = this.openSync(p, `w`);
    const stream$1 = Object.assign(
      new stream.PassThrough({
        autoDestroy: true,
        emitClose: true,
        destroy: (error, callback) => {
          try {
            if (error) {
              callback(error);
            } else {
              this.writeFileSync(p, Buffer.concat(chunks), encoding);
              callback(null);
            }
          } catch (err) {
            callback(err);
          } finally {
            this.closeSync(fd);
          }
        }
      }),
      {
        close() {
          stream$1.destroy();
        },
        bytesWritten: 0,
        path: p,
        // "This property is `true` if the underlying file has not been opened yet"
        pending: false
      }
    );
    stream$1.on(`data`, (chunk) => {
      const chunkBuffer = Buffer.from(chunk);
      stream$1.bytesWritten += chunkBuffer.length;
      chunks.push(chunkBuffer);
    });
    return stream$1;
  }
  async realpathPromise(p) {
    return this.realpathSync(p);
  }
  realpathSync(p) {
    const resolvedP = this.resolveFilename(`lstat '${p}'`, p);
    if (!this.entries.has(resolvedP) && !this.listings.has(resolvedP))
      throw ENOENT(`lstat '${p}'`);
    return resolvedP;
  }
  async existsPromise(p) {
    return this.existsSync(p);
  }
  existsSync(p) {
    if (!this.ready)
      throw EBUSY(`archive closed, existsSync '${p}'`);
    if (this.symlinkCount === 0) {
      const resolvedP2 = ppath.resolve(PortablePath.root, p);
      return this.entries.has(resolvedP2) || this.listings.has(resolvedP2);
    }
    let resolvedP;
    try {
      resolvedP = this.resolveFilename(`stat '${p}'`, p, void 0, false);
    } catch (error) {
      return false;
    }
    if (resolvedP === void 0)
      return false;
    return this.entries.has(resolvedP) || this.listings.has(resolvedP);
  }
  async accessPromise(p, mode) {
    return this.accessSync(p, mode);
  }
  accessSync(p, mode = fs.constants.F_OK) {
    const resolvedP = this.resolveFilename(`access '${p}'`, p);
    if (!this.entries.has(resolvedP) && !this.listings.has(resolvedP))
      throw ENOENT(`access '${p}'`);
    if (this.readOnly && mode & fs.constants.W_OK) {
      throw EROFS(`access '${p}'`);
    }
  }
  async statPromise(p, opts = { bigint: false }) {
    if (opts.bigint)
      return this.statSync(p, { bigint: true });
    return this.statSync(p);
  }
  statSync(p, opts = { bigint: false, throwIfNoEntry: true }) {
    const resolvedP = this.resolveFilename(`stat '${p}'`, p, void 0, opts.throwIfNoEntry);
    if (resolvedP === void 0)
      return void 0;
    if (!this.entries.has(resolvedP) && !this.listings.has(resolvedP)) {
      if (opts.throwIfNoEntry === false)
        return void 0;
      throw ENOENT(`stat '${p}'`);
    }
    if (p[p.length - 1] === `/` && !this.listings.has(resolvedP))
      throw ENOTDIR(`stat '${p}'`);
    return this.statImpl(`stat '${p}'`, resolvedP, opts);
  }
  async fstatPromise(fd, opts) {
    return this.fstatSync(fd, opts);
  }
  fstatSync(fd, opts) {
    const entry = this.fds.get(fd);
    if (typeof entry === `undefined`)
      throw EBADF(`fstatSync`);
    const { p } = entry;
    const resolvedP = this.resolveFilename(`stat '${p}'`, p);
    if (!this.entries.has(resolvedP) && !this.listings.has(resolvedP))
      throw ENOENT(`stat '${p}'`);
    if (p[p.length - 1] === `/` && !this.listings.has(resolvedP))
      throw ENOTDIR(`stat '${p}'`);
    return this.statImpl(`fstat '${p}'`, resolvedP, opts);
  }
  async lstatPromise(p, opts = { bigint: false }) {
    if (opts.bigint)
      return this.lstatSync(p, { bigint: true });
    return this.lstatSync(p);
  }
  lstatSync(p, opts = { bigint: false, throwIfNoEntry: true }) {
    const resolvedP = this.resolveFilename(`lstat '${p}'`, p, false, opts.throwIfNoEntry);
    if (resolvedP === void 0)
      return void 0;
    if (!this.entries.has(resolvedP) && !this.listings.has(resolvedP)) {
      if (opts.throwIfNoEntry === false)
        return void 0;
      throw ENOENT(`lstat '${p}'`);
    }
    if (p[p.length - 1] === `/` && !this.listings.has(resolvedP))
      throw ENOTDIR(`lstat '${p}'`);
    return this.statImpl(`lstat '${p}'`, resolvedP, opts);
  }
  statImpl(reason, p, opts = {}) {
    const entry = this.entries.get(p);
    if (typeof entry !== `undefined`) {
      const stat = this.libzip.struct.statS();
      const rc = this.libzip.statIndex(this.zip, entry, 0, 0, stat);
      if (rc === -1)
        throw this.makeLibzipError(this.libzip.getError(this.zip));
      const uid = this.stats.uid;
      const gid = this.stats.gid;
      const size = this.libzip.struct.statSize(stat) >>> 0;
      const blksize = 512;
      const blocks = Math.ceil(size / blksize);
      const mtimeMs = (this.libzip.struct.statMtime(stat) >>> 0) * 1e3;
      const atimeMs = mtimeMs;
      const birthtimeMs = mtimeMs;
      const ctimeMs = mtimeMs;
      const atime = new Date(atimeMs);
      const birthtime = new Date(birthtimeMs);
      const ctime = new Date(ctimeMs);
      const mtime = new Date(mtimeMs);
      const type = this.listings.has(p) ? fs.constants.S_IFDIR : this.isSymbolicLink(entry) ? fs.constants.S_IFLNK : fs.constants.S_IFREG;
      const defaultMode = type === fs.constants.S_IFDIR ? 493 : 420;
      const mode = type | this.getUnixMode(entry, defaultMode) & 511;
      const crc = this.libzip.struct.statCrc(stat);
      const statInstance = Object.assign(new StatEntry(), { uid, gid, size, blksize, blocks, atime, birthtime, ctime, mtime, atimeMs, birthtimeMs, ctimeMs, mtimeMs, mode, crc });
      return opts.bigint === true ? convertToBigIntStats(statInstance) : statInstance;
    }
    if (this.listings.has(p)) {
      const uid = this.stats.uid;
      const gid = this.stats.gid;
      const size = 0;
      const blksize = 512;
      const blocks = 0;
      const atimeMs = this.stats.mtimeMs;
      const birthtimeMs = this.stats.mtimeMs;
      const ctimeMs = this.stats.mtimeMs;
      const mtimeMs = this.stats.mtimeMs;
      const atime = new Date(atimeMs);
      const birthtime = new Date(birthtimeMs);
      const ctime = new Date(ctimeMs);
      const mtime = new Date(mtimeMs);
      const mode = fs.constants.S_IFDIR | 493;
      const crc = 0;
      const statInstance = Object.assign(new StatEntry(), { uid, gid, size, blksize, blocks, atime, birthtime, ctime, mtime, atimeMs, birthtimeMs, ctimeMs, mtimeMs, mode, crc });
      return opts.bigint === true ? convertToBigIntStats(statInstance) : statInstance;
    }
    throw new Error(`Unreachable`);
  }
  getUnixMode(index, defaultMode) {
    const rc = this.libzip.file.getExternalAttributes(this.zip, index, 0, 0, this.libzip.uint08S, this.libzip.uint32S);
    if (rc === -1)
      throw this.makeLibzipError(this.libzip.getError(this.zip));
    const opsys = this.libzip.getValue(this.libzip.uint08S, `i8`) >>> 0;
    if (opsys !== this.libzip.ZIP_OPSYS_UNIX)
      return defaultMode;
    return this.libzip.getValue(this.libzip.uint32S, `i32`) >>> 16;
  }
  registerListing(p) {
    const existingListing = this.listings.get(p);
    if (existingListing)
      return existingListing;
    const parentListing = this.registerListing(ppath.dirname(p));
    parentListing.add(ppath.basename(p));
    const newListing = /* @__PURE__ */ new Set();
    this.listings.set(p, newListing);
    return newListing;
  }
  registerEntry(p, index) {
    const parentListing = this.registerListing(ppath.dirname(p));
    parentListing.add(ppath.basename(p));
    this.entries.set(p, index);
  }
  unregisterListing(p) {
    this.listings.delete(p);
    const parentListing = this.listings.get(ppath.dirname(p));
    parentListing?.delete(ppath.basename(p));
  }
  unregisterEntry(p) {
    this.unregisterListing(p);
    const entry = this.entries.get(p);
    this.entries.delete(p);
    if (typeof entry === `undefined`)
      return;
    this.fileSources.delete(entry);
    if (this.isSymbolicLink(entry)) {
      this.symlinkCount--;
    }
  }
  deleteEntry(p, index) {
    this.unregisterEntry(p);
    const rc = this.libzip.delete(this.zip, index);
    if (rc === -1) {
      throw this.makeLibzipError(this.libzip.getError(this.zip));
    }
  }
  resolveFilename(reason, p, resolveLastComponent = true, throwIfNoEntry = true) {
    if (!this.ready)
      throw EBUSY(`archive closed, ${reason}`);
    let resolvedP = ppath.resolve(PortablePath.root, p);
    if (resolvedP === `/`)
      return PortablePath.root;
    const fileIndex = this.entries.get(resolvedP);
    if (resolveLastComponent && fileIndex !== void 0) {
      if (this.symlinkCount !== 0 && this.isSymbolicLink(fileIndex)) {
        const target = this.getFileSource(fileIndex).toString();
        return this.resolveFilename(reason, ppath.resolve(ppath.dirname(resolvedP), target), true, throwIfNoEntry);
      } else {
        return resolvedP;
      }
    }
    while (true) {
      const parentP = this.resolveFilename(reason, ppath.dirname(resolvedP), true, throwIfNoEntry);
      if (parentP === void 0)
        return parentP;
      const isDir = this.listings.has(parentP);
      const doesExist = this.entries.has(parentP);
      if (!isDir && !doesExist) {
        if (throwIfNoEntry === false)
          return void 0;
        throw ENOENT(reason);
      }
      if (!isDir)
        throw ENOTDIR(reason);
      resolvedP = ppath.resolve(parentP, ppath.basename(resolvedP));
      if (!resolveLastComponent || this.symlinkCount === 0)
        break;
      const index = this.libzip.name.locate(this.zip, resolvedP.slice(1), 0);
      if (index === -1)
        break;
      if (this.isSymbolicLink(index)) {
        const target = this.getFileSource(index).toString();
        resolvedP = ppath.resolve(ppath.dirname(resolvedP), target);
      } else {
        break;
      }
    }
    return resolvedP;
  }
  allocateBuffer(content) {
    if (!Buffer.isBuffer(content))
      content = Buffer.from(content);
    const buffer = this.libzip.malloc(content.byteLength);
    if (!buffer)
      throw new Error(`Couldn't allocate enough memory`);
    const heap = new Uint8Array(this.libzip.HEAPU8.buffer, buffer, content.byteLength);
    heap.set(content);
    return { buffer, byteLength: content.byteLength };
  }
  allocateUnattachedSource(content) {
    const error = this.libzip.struct.errorS();
    const { buffer, byteLength } = this.allocateBuffer(content);
    const source = this.libzip.source.fromUnattachedBuffer(buffer, byteLength, 0, 1, error);
    if (source === 0) {
      this.libzip.free(error);
      throw this.makeLibzipError(error);
    }
    return source;
  }
  allocateSource(content) {
    const { buffer, byteLength } = this.allocateBuffer(content);
    const source = this.libzip.source.fromBuffer(this.zip, buffer, byteLength, 0, 1);
    if (source === 0) {
      this.libzip.free(buffer);
      throw this.makeLibzipError(this.libzip.getError(this.zip));
    }
    return source;
  }
  setFileSource(p, content) {
    const buffer = Buffer.isBuffer(content) ? content : Buffer.from(content);
    const target = ppath.relative(PortablePath.root, p);
    const lzSource = this.allocateSource(content);
    try {
      const newIndex = this.libzip.file.add(this.zip, target, lzSource, this.libzip.ZIP_FL_OVERWRITE);
      if (newIndex === -1)
        throw this.makeLibzipError(this.libzip.getError(this.zip));
      if (this.level !== `mixed`) {
        const method = this.level === 0 ? this.libzip.ZIP_CM_STORE : this.libzip.ZIP_CM_DEFLATE;
        const rc = this.libzip.file.setCompression(this.zip, newIndex, 0, method, this.level);
        if (rc === -1) {
          throw this.makeLibzipError(this.libzip.getError(this.zip));
        }
      }
      this.fileSources.set(newIndex, buffer);
      return newIndex;
    } catch (error) {
      this.libzip.source.free(lzSource);
      throw error;
    }
  }
  isSymbolicLink(index) {
    if (this.symlinkCount === 0)
      return false;
    const attrs = this.libzip.file.getExternalAttributes(this.zip, index, 0, 0, this.libzip.uint08S, this.libzip.uint32S);
    if (attrs === -1)
      throw this.makeLibzipError(this.libzip.getError(this.zip));
    const opsys = this.libzip.getValue(this.libzip.uint08S, `i8`) >>> 0;
    if (opsys !== this.libzip.ZIP_OPSYS_UNIX)
      return false;
    const attributes = this.libzip.getValue(this.libzip.uint32S, `i32`) >>> 16;
    return (attributes & fs.constants.S_IFMT) === fs.constants.S_IFLNK;
  }
  getFileSource(index, opts = { asyncDecompress: false }) {
    const cachedFileSource = this.fileSources.get(index);
    if (typeof cachedFileSource !== `undefined`)
      return cachedFileSource;
    const stat = this.libzip.struct.statS();
    const rc = this.libzip.statIndex(this.zip, index, 0, 0, stat);
    if (rc === -1)
      throw this.makeLibzipError(this.libzip.getError(this.zip));
    const size = this.libzip.struct.statCompSize(stat);
    const compressionMethod = this.libzip.struct.statCompMethod(stat);
    const buffer = this.libzip.malloc(size);
    try {
      const file = this.libzip.fopenIndex(this.zip, index, 0, this.libzip.ZIP_FL_COMPRESSED);
      if (file === 0)
        throw this.makeLibzipError(this.libzip.getError(this.zip));
      try {
        const rc2 = this.libzip.fread(file, buffer, size, 0);
        if (rc2 === -1)
          throw this.makeLibzipError(this.libzip.file.getError(file));
        else if (rc2 < size)
          throw new Error(`Incomplete read`);
        else if (rc2 > size)
          throw new Error(`Overread`);
        const memory = this.libzip.HEAPU8.subarray(buffer, buffer + size);
        const data = Buffer.from(memory);
        if (compressionMethod === 0) {
          this.fileSources.set(index, data);
          return data;
        } else if (opts.asyncDecompress) {
          return new Promise((resolve, reject) => {
            zlib.inflateRaw(data, (error, result) => {
              if (error) {
                reject(error);
              } else {
                this.fileSources.set(index, result);
                resolve(result);
              }
            });
          });
        } else {
          const decompressedData = zlib.inflateRawSync(data);
          this.fileSources.set(index, decompressedData);
          return decompressedData;
        }
      } finally {
        this.libzip.fclose(file);
      }
    } finally {
      this.libzip.free(buffer);
    }
  }
  async fchmodPromise(fd, mask) {
    return this.chmodPromise(this.fdToPath(fd, `fchmod`), mask);
  }
  fchmodSync(fd, mask) {
    return this.chmodSync(this.fdToPath(fd, `fchmodSync`), mask);
  }
  async chmodPromise(p, mask) {
    return this.chmodSync(p, mask);
  }
  chmodSync(p, mask) {
    if (this.readOnly)
      throw EROFS(`chmod '${p}'`);
    mask &= 493;
    const resolvedP = this.resolveFilename(`chmod '${p}'`, p, false);
    const entry = this.entries.get(resolvedP);
    if (typeof entry === `undefined`)
      throw new Error(`Assertion failed: The entry should have been registered (${resolvedP})`);
    const oldMod = this.getUnixMode(entry, fs.constants.S_IFREG | 0);
    const newMod = oldMod & ~511 | mask;
    const rc = this.libzip.file.setExternalAttributes(this.zip, entry, 0, 0, this.libzip.ZIP_OPSYS_UNIX, newMod << 16);
    if (rc === -1) {
      throw this.makeLibzipError(this.libzip.getError(this.zip));
    }
  }
  async fchownPromise(fd, uid, gid) {
    return this.chownPromise(this.fdToPath(fd, `fchown`), uid, gid);
  }
  fchownSync(fd, uid, gid) {
    return this.chownSync(this.fdToPath(fd, `fchownSync`), uid, gid);
  }
  async chownPromise(p, uid, gid) {
    return this.chownSync(p, uid, gid);
  }
  chownSync(p, uid, gid) {
    throw new Error(`Unimplemented`);
  }
  async renamePromise(oldP, newP) {
    return this.renameSync(oldP, newP);
  }
  renameSync(oldP, newP) {
    throw new Error(`Unimplemented`);
  }
  async copyFilePromise(sourceP, destP, flags) {
    const { indexSource, indexDest, resolvedDestP } = this.prepareCopyFile(sourceP, destP, flags);
    const source = await this.getFileSource(indexSource, { asyncDecompress: true });
    const newIndex = this.setFileSource(resolvedDestP, source);
    if (newIndex !== indexDest) {
      this.registerEntry(resolvedDestP, newIndex);
    }
  }
  copyFileSync(sourceP, destP, flags = 0) {
    const { indexSource, indexDest, resolvedDestP } = this.prepareCopyFile(sourceP, destP, flags);
    const source = this.getFileSource(indexSource);
    const newIndex = this.setFileSource(resolvedDestP, source);
    if (newIndex !== indexDest) {
      this.registerEntry(resolvedDestP, newIndex);
    }
  }
  prepareCopyFile(sourceP, destP, flags = 0) {
    if (this.readOnly)
      throw EROFS(`copyfile '${sourceP} -> '${destP}'`);
    if ((flags & fs.constants.COPYFILE_FICLONE_FORCE) !== 0)
      throw ENOSYS(`unsupported clone operation`, `copyfile '${sourceP}' -> ${destP}'`);
    const resolvedSourceP = this.resolveFilename(`copyfile '${sourceP} -> ${destP}'`, sourceP);
    const indexSource = this.entries.get(resolvedSourceP);
    if (typeof indexSource === `undefined`)
      throw EINVAL(`copyfile '${sourceP}' -> '${destP}'`);
    const resolvedDestP = this.resolveFilename(`copyfile '${sourceP}' -> ${destP}'`, destP);
    const indexDest = this.entries.get(resolvedDestP);
    if ((flags & (fs.constants.COPYFILE_EXCL | fs.constants.COPYFILE_FICLONE_FORCE)) !== 0 && typeof indexDest !== `undefined`)
      throw EEXIST(`copyfile '${sourceP}' -> '${destP}'`);
    return {
      indexSource,
      resolvedDestP,
      indexDest
    };
  }
  async appendFilePromise(p, content, opts) {
    if (this.readOnly)
      throw EROFS(`open '${p}'`);
    if (typeof opts === `undefined`)
      opts = { flag: `a` };
    else if (typeof opts === `string`)
      opts = { flag: `a`, encoding: opts };
    else if (typeof opts.flag === `undefined`)
      opts = { flag: `a`, ...opts };
    return this.writeFilePromise(p, content, opts);
  }
  appendFileSync(p, content, opts = {}) {
    if (this.readOnly)
      throw EROFS(`open '${p}'`);
    if (typeof opts === `undefined`)
      opts = { flag: `a` };
    else if (typeof opts === `string`)
      opts = { flag: `a`, encoding: opts };
    else if (typeof opts.flag === `undefined`)
      opts = { flag: `a`, ...opts };
    return this.writeFileSync(p, content, opts);
  }
  fdToPath(fd, reason) {
    const path = this.fds.get(fd)?.p;
    if (typeof path === `undefined`)
      throw EBADF(reason);
    return path;
  }
  async writeFilePromise(p, content, opts) {
    const { encoding, mode, index, resolvedP } = this.prepareWriteFile(p, opts);
    if (index !== void 0 && typeof opts === `object` && opts.flag && opts.flag.includes(`a`))
      content = Buffer.concat([await this.getFileSource(index, { asyncDecompress: true }), Buffer.from(content)]);
    if (encoding !== null)
      content = content.toString(encoding);
    const newIndex = this.setFileSource(resolvedP, content);
    if (newIndex !== index)
      this.registerEntry(resolvedP, newIndex);
    if (mode !== null) {
      await this.chmodPromise(resolvedP, mode);
    }
  }
  writeFileSync(p, content, opts) {
    const { encoding, mode, index, resolvedP } = this.prepareWriteFile(p, opts);
    if (index !== void 0 && typeof opts === `object` && opts.flag && opts.flag.includes(`a`))
      content = Buffer.concat([this.getFileSource(index), Buffer.from(content)]);
    if (encoding !== null)
      content = content.toString(encoding);
    const newIndex = this.setFileSource(resolvedP, content);
    if (newIndex !== index)
      this.registerEntry(resolvedP, newIndex);
    if (mode !== null) {
      this.chmodSync(resolvedP, mode);
    }
  }
  prepareWriteFile(p, opts) {
    if (typeof p === `number`)
      p = this.fdToPath(p, `read`);
    if (this.readOnly)
      throw EROFS(`open '${p}'`);
    const resolvedP = this.resolveFilename(`open '${p}'`, p);
    if (this.listings.has(resolvedP))
      throw EISDIR(`open '${p}'`);
    let encoding = null, mode = null;
    if (typeof opts === `string`) {
      encoding = opts;
    } else if (typeof opts === `object`) {
      ({
        encoding = null,
        mode = null
      } = opts);
    }
    const index = this.entries.get(resolvedP);
    return {
      encoding,
      mode,
      resolvedP,
      index
    };
  }
  async unlinkPromise(p) {
    return this.unlinkSync(p);
  }
  unlinkSync(p) {
    if (this.readOnly)
      throw EROFS(`unlink '${p}'`);
    const resolvedP = this.resolveFilename(`unlink '${p}'`, p);
    if (this.listings.has(resolvedP))
      throw EISDIR(`unlink '${p}'`);
    const index = this.entries.get(resolvedP);
    if (typeof index === `undefined`)
      throw EINVAL(`unlink '${p}'`);
    this.deleteEntry(resolvedP, index);
  }
  async utimesPromise(p, atime, mtime) {
    return this.utimesSync(p, atime, mtime);
  }
  utimesSync(p, atime, mtime) {
    if (this.readOnly)
      throw EROFS(`utimes '${p}'`);
    const resolvedP = this.resolveFilename(`utimes '${p}'`, p);
    this.utimesImpl(resolvedP, mtime);
  }
  async lutimesPromise(p, atime, mtime) {
    return this.lutimesSync(p, atime, mtime);
  }
  lutimesSync(p, atime, mtime) {
    if (this.readOnly)
      throw EROFS(`lutimes '${p}'`);
    const resolvedP = this.resolveFilename(`utimes '${p}'`, p, false);
    this.utimesImpl(resolvedP, mtime);
  }
  utimesImpl(resolvedP, mtime) {
    if (this.listings.has(resolvedP)) {
      if (!this.entries.has(resolvedP))
        this.hydrateDirectory(resolvedP);
    }
    const entry = this.entries.get(resolvedP);
    if (entry === void 0)
      throw new Error(`Unreachable`);
    const rc = this.libzip.file.setMtime(this.zip, entry, 0, toUnixTimestamp(mtime), 0);
    if (rc === -1) {
      throw this.makeLibzipError(this.libzip.getError(this.zip));
    }
  }
  async mkdirPromise(p, opts) {
    return this.mkdirSync(p, opts);
  }
  mkdirSync(p, { mode = 493, recursive = false } = {}) {
    if (recursive)
      return this.mkdirpSync(p, { chmod: mode });
    if (this.readOnly)
      throw EROFS(`mkdir '${p}'`);
    const resolvedP = this.resolveFilename(`mkdir '${p}'`, p);
    if (this.entries.has(resolvedP) || this.listings.has(resolvedP))
      throw EEXIST(`mkdir '${p}'`);
    this.hydrateDirectory(resolvedP);
    this.chmodSync(resolvedP, mode);
    return void 0;
  }
  async rmdirPromise(p, opts) {
    return this.rmdirSync(p, opts);
  }
  rmdirSync(p, { recursive = false } = {}) {
    if (this.readOnly)
      throw EROFS(`rmdir '${p}'`);
    if (recursive) {
      this.removeSync(p);
      return;
    }
    const resolvedP = this.resolveFilename(`rmdir '${p}'`, p);
    const directoryListing = this.listings.get(resolvedP);
    if (!directoryListing)
      throw ENOTDIR(`rmdir '${p}'`);
    if (directoryListing.size > 0)
      throw ENOTEMPTY(`rmdir '${p}'`);
    const index = this.entries.get(resolvedP);
    if (typeof index === `undefined`)
      throw EINVAL(`rmdir '${p}'`);
    this.deleteEntry(p, index);
  }
  hydrateDirectory(resolvedP) {
    const index = this.libzip.dir.add(this.zip, ppath.relative(PortablePath.root, resolvedP));
    if (index === -1)
      throw this.makeLibzipError(this.libzip.getError(this.zip));
    this.registerListing(resolvedP);
    this.registerEntry(resolvedP, index);
    return index;
  }
  async linkPromise(existingP, newP) {
    return this.linkSync(existingP, newP);
  }
  linkSync(existingP, newP) {
    throw EOPNOTSUPP(`link '${existingP}' -> '${newP}'`);
  }
  async symlinkPromise(target, p) {
    return this.symlinkSync(target, p);
  }
  symlinkSync(target, p) {
    if (this.readOnly)
      throw EROFS(`symlink '${target}' -> '${p}'`);
    const resolvedP = this.resolveFilename(`symlink '${target}' -> '${p}'`, p);
    if (this.listings.has(resolvedP))
      throw EISDIR(`symlink '${target}' -> '${p}'`);
    if (this.entries.has(resolvedP))
      throw EEXIST(`symlink '${target}' -> '${p}'`);
    const index = this.setFileSource(resolvedP, target);
    this.registerEntry(resolvedP, index);
    const rc = this.libzip.file.setExternalAttributes(this.zip, index, 0, 0, this.libzip.ZIP_OPSYS_UNIX, (fs.constants.S_IFLNK | 511) << 16);
    if (rc === -1)
      throw this.makeLibzipError(this.libzip.getError(this.zip));
    this.symlinkCount += 1;
  }
  async readFilePromise(p, encoding) {
    if (typeof encoding === `object`)
      encoding = encoding ? encoding.encoding : void 0;
    const data = await this.readFileBuffer(p, { asyncDecompress: true });
    return encoding ? data.toString(encoding) : data;
  }
  readFileSync(p, encoding) {
    if (typeof encoding === `object`)
      encoding = encoding ? encoding.encoding : void 0;
    const data = this.readFileBuffer(p);
    return encoding ? data.toString(encoding) : data;
  }
  readFileBuffer(p, opts = { asyncDecompress: false }) {
    if (typeof p === `number`)
      p = this.fdToPath(p, `read`);
    const resolvedP = this.resolveFilename(`open '${p}'`, p);
    if (!this.entries.has(resolvedP) && !this.listings.has(resolvedP))
      throw ENOENT(`open '${p}'`);
    if (p[p.length - 1] === `/` && !this.listings.has(resolvedP))
      throw ENOTDIR(`open '${p}'`);
    if (this.listings.has(resolvedP))
      throw EISDIR(`read`);
    const entry = this.entries.get(resolvedP);
    if (entry === void 0)
      throw new Error(`Unreachable`);
    return this.getFileSource(entry, opts);
  }
  async readdirPromise(p, opts) {
    return this.readdirSync(p, opts);
  }
  readdirSync(p, opts) {
    const resolvedP = this.resolveFilename(`scandir '${p}'`, p);
    if (!this.entries.has(resolvedP) && !this.listings.has(resolvedP))
      throw ENOENT(`scandir '${p}'`);
    const directoryListing = this.listings.get(resolvedP);
    if (!directoryListing)
      throw ENOTDIR(`scandir '${p}'`);
    if (opts?.recursive) {
      if (opts?.withFileTypes) {
        const entries = Array.from(directoryListing, (name) => {
          return Object.assign(this.statImpl(`lstat`, ppath.join(p, name)), {
            name,
            path: PortablePath.dot
          });
        });
        for (const entry of entries) {
          if (!entry.isDirectory())
            continue;
          const subPath = ppath.join(entry.path, entry.name);
          const subListing = this.listings.get(ppath.join(resolvedP, subPath));
          for (const child of subListing) {
            entries.push(Object.assign(this.statImpl(`lstat`, ppath.join(p, subPath, child)), {
              name: child,
              path: subPath
            }));
          }
        }
        return entries;
      } else {
        const entries = [...directoryListing];
        for (const subPath of entries) {
          const subListing = this.listings.get(ppath.join(resolvedP, subPath));
          if (typeof subListing === `undefined`)
            continue;
          for (const child of subListing) {
            entries.push(ppath.join(subPath, child));
          }
        }
        return entries;
      }
    } else if (opts?.withFileTypes) {
      return Array.from(directoryListing, (name) => {
        return Object.assign(this.statImpl(`lstat`, ppath.join(p, name)), {
          name,
          path: void 0
        });
      });
    } else {
      return [...directoryListing];
    }
  }
  async readlinkPromise(p) {
    const entry = this.prepareReadlink(p);
    return (await this.getFileSource(entry, { asyncDecompress: true })).toString();
  }
  readlinkSync(p) {
    const entry = this.prepareReadlink(p);
    return this.getFileSource(entry).toString();
  }
  prepareReadlink(p) {
    const resolvedP = this.resolveFilename(`readlink '${p}'`, p, false);
    if (!this.entries.has(resolvedP) && !this.listings.has(resolvedP))
      throw ENOENT(`readlink '${p}'`);
    if (p[p.length - 1] === `/` && !this.listings.has(resolvedP))
      throw ENOTDIR(`open '${p}'`);
    if (this.listings.has(resolvedP))
      throw EINVAL(`readlink '${p}'`);
    const entry = this.entries.get(resolvedP);
    if (entry === void 0)
      throw new Error(`Unreachable`);
    if (!this.isSymbolicLink(entry))
      throw EINVAL(`readlink '${p}'`);
    return entry;
  }
  async truncatePromise(p, len = 0) {
    const resolvedP = this.resolveFilename(`open '${p}'`, p);
    const index = this.entries.get(resolvedP);
    if (typeof index === `undefined`)
      throw EINVAL(`open '${p}'`);
    const source = await this.getFileSource(index, { asyncDecompress: true });
    const truncated = Buffer.alloc(len, 0);
    source.copy(truncated);
    return await this.writeFilePromise(p, truncated);
  }
  truncateSync(p, len = 0) {
    const resolvedP = this.resolveFilename(`open '${p}'`, p);
    const index = this.entries.get(resolvedP);
    if (typeof index === `undefined`)
      throw EINVAL(`open '${p}'`);
    const source = this.getFileSource(index);
    const truncated = Buffer.alloc(len, 0);
    source.copy(truncated);
    return this.writeFileSync(p, truncated);
  }
  async ftruncatePromise(fd, len) {
    return this.truncatePromise(this.fdToPath(fd, `ftruncate`), len);
  }
  ftruncateSync(fd, len) {
    return this.truncateSync(this.fdToPath(fd, `ftruncateSync`), len);
  }
  watch(p, a, b) {
    let persistent;
    switch (typeof a) {
      case `function`:
      case `string`:
      case `undefined`:
        {
          persistent = true;
        }
        break;
      default:
        {
          ({ persistent = true } = a);
        }
        break;
    }
    if (!persistent)
      return { on: () => {
      }, close: () => {
      } };
    const interval = setInterval(() => {
    }, 24 * 60 * 60 * 1e3);
    return { on: () => {
    }, close: () => {
      clearInterval(interval);
    } };
  }
  watchFile(p, a, b) {
    const resolvedP = ppath.resolve(PortablePath.root, p);
    return watchFile(this, resolvedP, a, b);
  }
  unwatchFile(p, cb) {
    const resolvedP = ppath.resolve(PortablePath.root, p);
    return unwatchFile(this, resolvedP, cb);
  }
}

setFactory(() => {
  const emZip = createModule();
  return makeInterface(emZip);
});

var ErrorCode = /* @__PURE__ */ ((ErrorCode2) => {
  ErrorCode2["API_ERROR"] = `API_ERROR`;
  ErrorCode2["BUILTIN_NODE_RESOLUTION_FAILED"] = `BUILTIN_NODE_RESOLUTION_FAILED`;
  ErrorCode2["EXPORTS_RESOLUTION_FAILED"] = `EXPORTS_RESOLUTION_FAILED`;
  ErrorCode2["MISSING_DEPENDENCY"] = `MISSING_DEPENDENCY`;
  ErrorCode2["MISSING_PEER_DEPENDENCY"] = `MISSING_PEER_DEPENDENCY`;
  ErrorCode2["QUALIFIED_PATH_RESOLUTION_FAILED"] = `QUALIFIED_PATH_RESOLUTION_FAILED`;
  ErrorCode2["INTERNAL"] = `INTERNAL`;
  ErrorCode2["UNDECLARED_DEPENDENCY"] = `UNDECLARED_DEPENDENCY`;
  ErrorCode2["UNSUPPORTED"] = `UNSUPPORTED`;
  return ErrorCode2;
})(ErrorCode || {});
const MODULE_NOT_FOUND_ERRORS = /* @__PURE__ */ new Set([
  "BUILTIN_NODE_RESOLUTION_FAILED" /* BUILTIN_NODE_RESOLUTION_FAILED */,
  "MISSING_DEPENDENCY" /* MISSING_DEPENDENCY */,
  "MISSING_PEER_DEPENDENCY" /* MISSING_PEER_DEPENDENCY */,
  "QUALIFIED_PATH_RESOLUTION_FAILED" /* QUALIFIED_PATH_RESOLUTION_FAILED */,
  "UNDECLARED_DEPENDENCY" /* UNDECLARED_DEPENDENCY */
]);
function makeError(pnpCode, message, data = {}, code) {
  code ??= MODULE_NOT_FOUND_ERRORS.has(pnpCode) ? `MODULE_NOT_FOUND` : pnpCode;
  const propertySpec = {
    configurable: true,
    writable: true,
    enumerable: false
  };
  return Object.defineProperties(new Error(message), {
    code: {
      ...propertySpec,
      value: code
    },
    pnpCode: {
      ...propertySpec,
      value: pnpCode
    },
    data: {
      ...propertySpec,
      value: data
    }
  });
}
function getIssuerModule(parent) {
  let issuer = parent;
  while (issuer && (issuer.id === `[eval]` || issuer.id === `<repl>` || !issuer.filename))
    issuer = issuer.parent;
  return issuer || null;
}
function getPathForDisplay(p) {
  return npath.normalize(npath.fromPortablePath(p));
}

const [major, minor] = process.versions.node.split(`.`).map((value) => parseInt(value, 10));
const WATCH_MODE_MESSAGE_USES_ARRAYS = major > 19 || major === 19 && minor >= 2 || major === 18 && minor >= 13;

function readPackageScope(checkPath) {
  const rootSeparatorIndex = checkPath.indexOf(npath.sep);
  let separatorIndex;
  do {
    separatorIndex = checkPath.lastIndexOf(npath.sep);
    checkPath = checkPath.slice(0, separatorIndex);
    if (checkPath.endsWith(`${npath.sep}node_modules`))
      return false;
    const pjson = readPackage(checkPath + npath.sep);
    if (pjson) {
      return {
        data: pjson,
        path: checkPath
      };
    }
  } while (separatorIndex > rootSeparatorIndex);
  return false;
}
function readPackage(requestPath) {
  const jsonPath = npath.resolve(requestPath, `package.json`);
  if (!fs.existsSync(jsonPath))
    return null;
  return JSON.parse(fs.readFileSync(jsonPath, `utf8`));
}
function ERR_REQUIRE_ESM(filename, parentPath = null) {
  const basename = parentPath && path$1.basename(filename) === path$1.basename(parentPath) ? filename : path$1.basename(filename);
  const msg = `require() of ES Module ${filename}${parentPath ? ` from ${parentPath}` : ``} not supported.
Instead change the require of ${basename} in ${parentPath} to a dynamic import() which is available in all CommonJS modules.`;
  const err = new Error(msg);
  err.code = `ERR_REQUIRE_ESM`;
  return err;
}
function reportRequiredFilesToWatchMode(files) {
  if (process.env.WATCH_REPORT_DEPENDENCIES && process.send) {
    files = files.map((filename) => npath.fromPortablePath(VirtualFS.resolveVirtual(npath.toPortablePath(filename))));
    if (WATCH_MODE_MESSAGE_USES_ARRAYS) {
      process.send({ "watch:require": files });
    } else {
      for (const filename of files) {
        process.send({ "watch:require": filename });
      }
    }
  }
}

function applyPatch(pnpapi, opts) {
  let enableNativeHooks = true;
  process.versions.pnp = String(pnpapi.VERSIONS.std);
  const moduleExports = require$$0;
  moduleExports.findPnpApi = (lookupSource) => {
    const lookupPath = lookupSource instanceof url.URL ? url.fileURLToPath(lookupSource) : lookupSource;
    const apiPath = opts.manager.findApiPathFor(lookupPath);
    if (apiPath === null)
      return null;
    const apiEntry = opts.manager.getApiEntry(apiPath, true);
    return apiEntry.instance.findPackageLocator(lookupPath) ? apiEntry.instance : null;
  };
  function getRequireStack(parent) {
    const requireStack = [];
    for (let cursor = parent; cursor; cursor = cursor.parent)
      requireStack.push(cursor.filename || cursor.id);
    return requireStack;
  }
  const originalModuleLoad = require$$0.Module._load;
  require$$0.Module._load = function(request, parent, isMain) {
    if (request === `pnpapi`) {
      const parentApiPath = opts.manager.getApiPathFromParent(parent);
      if (parentApiPath) {
        return opts.manager.getApiEntry(parentApiPath, true).instance;
      }
    }
    return originalModuleLoad.call(require$$0.Module, request, parent, isMain);
  };
  function getIssuerSpecsFromPaths(paths) {
    return paths.map((path) => ({
      apiPath: opts.manager.findApiPathFor(path),
      path,
      module: null
    }));
  }
  function getIssuerSpecsFromModule(module) {
    if (module && module.id !== `<repl>` && module.id !== `internal/preload` && !module.parent && !module.filename && module.paths.length > 0) {
      return [{
        apiPath: opts.manager.findApiPathFor(module.paths[0]),
        path: module.paths[0],
        module
      }];
    }
    const issuer = getIssuerModule(module);
    if (issuer !== null) {
      const path = npath.dirname(issuer.filename);
      const apiPath = opts.manager.getApiPathFromParent(issuer);
      return [{ apiPath, path, module }];
    } else {
      const path = process.cwd();
      const apiPath = opts.manager.findApiPathFor(npath.join(path, `[file]`)) ?? opts.manager.getApiPathFromParent(null);
      return [{ apiPath, path, module }];
    }
  }
  function makeFakeParent(path) {
    const fakeParent = new require$$0.Module(``);
    const fakeFilePath = npath.join(path, `[file]`);
    fakeParent.paths = require$$0.Module._nodeModulePaths(fakeFilePath);
    return fakeParent;
  }
  const pathRegExp = /^(?![a-zA-Z]:[\\/]|\\\\|\.{0,2}(?:\/|$))((?:@[^/]+\/)?[^/]+)\/*(.*|)$/;
  const originalModuleResolveFilename = require$$0.Module._resolveFilename;
  require$$0.Module._resolveFilename = function(request, parent, isMain, options) {
    if (require$$0.isBuiltin(request))
      return request;
    if (!enableNativeHooks)
      return originalModuleResolveFilename.call(require$$0.Module, request, parent, isMain, options);
    if (options && options.plugnplay === false) {
      const { plugnplay, ...forwardedOptions } = options;
      try {
        enableNativeHooks = false;
        return originalModuleResolveFilename.call(require$$0.Module, request, parent, isMain, forwardedOptions);
      } finally {
        enableNativeHooks = true;
      }
    }
    if (options) {
      const optionNames = new Set(Object.keys(options));
      optionNames.delete(`paths`);
      optionNames.delete(`plugnplay`);
      if (optionNames.size > 0) {
        throw makeError(
          ErrorCode.UNSUPPORTED,
          `Some options passed to require() aren't supported by PnP yet (${Array.from(optionNames).join(`, `)})`
        );
      }
    }
    const issuerSpecs = options && options.paths ? getIssuerSpecsFromPaths(options.paths) : getIssuerSpecsFromModule(parent);
    if (request.match(pathRegExp) === null) {
      const parentDirectory = parent?.filename != null ? npath.dirname(parent.filename) : null;
      const absoluteRequest = npath.isAbsolute(request) ? request : parentDirectory !== null ? npath.resolve(parentDirectory, request) : null;
      if (absoluteRequest !== null) {
        const apiPath = parent && parentDirectory === npath.dirname(absoluteRequest) ? opts.manager.getApiPathFromParent(parent) : opts.manager.findApiPathFor(absoluteRequest);
        if (apiPath !== null) {
          issuerSpecs.unshift({
            apiPath,
            path: parentDirectory,
            module: null
          });
        }
      }
    }
    let firstError;
    for (const { apiPath, path, module } of issuerSpecs) {
      let resolution;
      const issuerApi = apiPath !== null ? opts.manager.getApiEntry(apiPath, true).instance : null;
      try {
        if (issuerApi !== null) {
          resolution = issuerApi.resolveRequest(request, path !== null ? `${path}/` : null);
        } else {
          if (path === null)
            throw new Error(`Assertion failed: Expected the path to be set`);
          resolution = originalModuleResolveFilename.call(require$$0.Module, request, module || makeFakeParent(path), isMain);
        }
      } catch (error) {
        firstError = firstError || error;
        continue;
      }
      if (resolution !== null) {
        return resolution;
      }
    }
    const requireStack = getRequireStack(parent);
    Object.defineProperty(firstError, `requireStack`, {
      configurable: true,
      writable: true,
      enumerable: false,
      value: requireStack
    });
    if (requireStack.length > 0)
      firstError.message += `
Require stack:
- ${requireStack.join(`
- `)}`;
    if (typeof firstError.pnpCode === `string`)
      Error.captureStackTrace(firstError);
    throw firstError;
  };
  const originalFindPath = require$$0.Module._findPath;
  require$$0.Module._findPath = function(request, paths, isMain) {
    if (request === `pnpapi`)
      return false;
    if (!enableNativeHooks)
      return originalFindPath.call(require$$0.Module, request, paths, isMain);
    const isAbsolute = npath.isAbsolute(request);
    if (isAbsolute)
      paths = [``];
    else if (!paths || paths.length === 0)
      return false;
    for (const path of paths) {
      let resolution;
      try {
        const pnpApiPath = opts.manager.findApiPathFor(isAbsolute ? request : path);
        if (pnpApiPath !== null) {
          const api = opts.manager.getApiEntry(pnpApiPath, true).instance;
          resolution = api.resolveRequest(request, path) || false;
        } else {
          resolution = originalFindPath.call(require$$0.Module, request, [path], isMain);
        }
      } catch (error) {
        continue;
      }
      if (resolution) {
        return resolution;
      }
    }
    return false;
  };
  const originalExtensionJSFunction = require$$0.Module._extensions[`.js`];
  require$$0.Module._extensions[`.js`] = function(module, filename) {
    if (filename.endsWith(`.js`)) {
      const pkg = readPackageScope(filename);
      if (pkg && pkg.data?.type === `module`) {
        const err = ERR_REQUIRE_ESM(filename, module.parent?.filename);
        Error.captureStackTrace(err);
        throw err;
      }
    }
    originalExtensionJSFunction.call(this, module, filename);
  };
  const originalDlopen = process.dlopen;
  process.dlopen = function(...args) {
    const [module, filename, ...rest] = args;
    return originalDlopen.call(
      this,
      module,
      npath.fromPortablePath(VirtualFS.resolveVirtual(npath.toPortablePath(filename))),
      ...rest
    );
  };
  const originalEmit = process.emit;
  process.emit = function(name, data, ...args) {
    if (name === `warning` && typeof data === `object` && data.name === `ExperimentalWarning` && (data.message.includes(`--experimental-loader`) || data.message.includes(`Custom ESM Loaders is an experimental feature`)))
      return false;
    return originalEmit.apply(process, arguments);
  };
  patchFs(fs, new PosixFS(opts.fakeFs));
}

function hydrateRuntimeState(data, { basePath }) {
  const portablePath = npath.toPortablePath(basePath);
  const absolutePortablePath = ppath.resolve(portablePath);
  const ignorePattern = data.ignorePatternData !== null ? new RegExp(data.ignorePatternData) : null;
  const packageLocatorsByLocations = /* @__PURE__ */ new Map();
  const packageRegistry = new Map(data.packageRegistryData.map(([packageName, packageStoreData]) => {
    return [packageName, new Map(packageStoreData.map(([packageReference, packageInformationData]) => {
      if (packageName === null !== (packageReference === null))
        throw new Error(`Assertion failed: The name and reference should be null, or neither should`);
      const discardFromLookup = packageInformationData.discardFromLookup ?? false;
      const packageLocator = { name: packageName, reference: packageReference };
      const entry = packageLocatorsByLocations.get(packageInformationData.packageLocation);
      if (!entry) {
        packageLocatorsByLocations.set(packageInformationData.packageLocation, { locator: packageLocator, discardFromLookup });
      } else {
        entry.discardFromLookup = entry.discardFromLookup && discardFromLookup;
        if (!discardFromLookup) {
          entry.locator = packageLocator;
        }
      }
      let resolvedPackageLocation = null;
      return [packageReference, {
        packageDependencies: new Map(packageInformationData.packageDependencies),
        packagePeers: new Set(packageInformationData.packagePeers),
        linkType: packageInformationData.linkType,
        discardFromLookup,
        // we only need this for packages that are used by the currently running script
        // this is a lazy getter because `ppath.join` has some overhead
        get packageLocation() {
          return resolvedPackageLocation || (resolvedPackageLocation = ppath.join(absolutePortablePath, packageInformationData.packageLocation));
        }
      }];
    }))];
  }));
  const fallbackExclusionList = new Map(data.fallbackExclusionList.map(([packageName, packageReferences]) => {
    return [packageName, new Set(packageReferences)];
  }));
  const fallbackPool = new Map(data.fallbackPool);
  const dependencyTreeRoots = data.dependencyTreeRoots;
  const enableTopLevelFallback = data.enableTopLevelFallback;
  return {
    basePath: portablePath,
    dependencyTreeRoots,
    enableTopLevelFallback,
    fallbackExclusionList,
    fallbackPool,
    ignorePattern,
    packageLocatorsByLocations,
    packageRegistry
  };
}

const ArrayIsArray = Array.isArray;
const JSONStringify = JSON.stringify;
const ObjectGetOwnPropertyNames = Object.getOwnPropertyNames;
const ObjectPrototypeHasOwnProperty = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);
const RegExpPrototypeExec = (obj, string) => RegExp.prototype.exec.call(obj, string);
const RegExpPrototypeSymbolReplace = (obj, ...rest) => RegExp.prototype[Symbol.replace].apply(obj, rest);
const StringPrototypeEndsWith = (str, ...rest) => String.prototype.endsWith.apply(str, rest);
const StringPrototypeIncludes = (str, ...rest) => String.prototype.includes.apply(str, rest);
const StringPrototypeLastIndexOf = (str, ...rest) => String.prototype.lastIndexOf.apply(str, rest);
const StringPrototypeIndexOf = (str, ...rest) => String.prototype.indexOf.apply(str, rest);
const StringPrototypeReplace = (str, ...rest) => String.prototype.replace.apply(str, rest);
const StringPrototypeSlice = (str, ...rest) => String.prototype.slice.apply(str, rest);
const StringPrototypeStartsWith = (str, ...rest) => String.prototype.startsWith.apply(str, rest);
const SafeMap = Map;
const JSONParse = JSON.parse;

function createErrorType(code, messageCreator, errorType) {
  return class extends errorType {
    constructor(...args) {
      super(messageCreator(...args));
      this.code = code;
      this.name = `${errorType.name} [${code}]`;
    }
  };
}
const ERR_PACKAGE_IMPORT_NOT_DEFINED = createErrorType(
  `ERR_PACKAGE_IMPORT_NOT_DEFINED`,
  (specifier, packagePath, base) => {
    return `Package import specifier "${specifier}" is not defined${packagePath ? ` in package ${packagePath}package.json` : ``} imported from ${base}`;
  },
  TypeError
);
const ERR_INVALID_MODULE_SPECIFIER = createErrorType(
  `ERR_INVALID_MODULE_SPECIFIER`,
  (request, reason, base = void 0) => {
    return `Invalid module "${request}" ${reason}${base ? ` imported from ${base}` : ``}`;
  },
  TypeError
);
const ERR_INVALID_PACKAGE_TARGET = createErrorType(
  `ERR_INVALID_PACKAGE_TARGET`,
  (pkgPath, key, target, isImport = false, base = void 0) => {
    const relError = typeof target === `string` && !isImport && target.length && !StringPrototypeStartsWith(target, `./`);
    if (key === `.`) {
      assert(isImport === false);
      return `Invalid "exports" main target ${JSONStringify(target)} defined in the package config ${pkgPath}package.json${base ? ` imported from ${base}` : ``}${relError ? `; targets must start with "./"` : ``}`;
    }
    return `Invalid "${isImport ? `imports` : `exports`}" target ${JSONStringify(
      target
    )} defined for '${key}' in the package config ${pkgPath}package.json${base ? ` imported from ${base}` : ``}${relError ? `; targets must start with "./"` : ``}`;
  },
  Error
);
const ERR_INVALID_PACKAGE_CONFIG = createErrorType(
  `ERR_INVALID_PACKAGE_CONFIG`,
  (path, base, message) => {
    return `Invalid package config ${path}${base ? ` while importing ${base}` : ``}${message ? `. ${message}` : ``}`;
  },
  Error
);
const ERR_PACKAGE_PATH_NOT_EXPORTED = createErrorType(
  "ERR_PACKAGE_PATH_NOT_EXPORTED",
  (pkgPath, subpath, base = void 0) => {
    if (subpath === ".")
      return `No "exports" main defined in ${pkgPath}package.json${base ? ` imported from ${base}` : ""}`;
    return `Package subpath '${subpath}' is not defined by "exports" in ${pkgPath}package.json${base ? ` imported from ${base}` : ""}`;
  },
  Error
);

function filterOwnProperties(source, keys) {
  const filtered = /* @__PURE__ */ Object.create(null);
  for (let i = 0; i < keys.length; i++) {
    const key = keys[i];
    if (ObjectPrototypeHasOwnProperty(source, key)) {
      filtered[key] = source[key];
    }
  }
  return filtered;
}

const packageJSONCache = new SafeMap();
function getPackageConfig(path, specifier, base, readFileSyncFn) {
  const existing = packageJSONCache.get(path);
  if (existing !== void 0) {
    return existing;
  }
  const source = readFileSyncFn(path);
  if (source === void 0) {
    const packageConfig2 = {
      pjsonPath: path,
      exists: false,
      main: void 0,
      name: void 0,
      type: "none",
      exports: void 0,
      imports: void 0
    };
    packageJSONCache.set(path, packageConfig2);
    return packageConfig2;
  }
  let packageJSON;
  try {
    packageJSON = JSONParse(source);
  } catch (error) {
    throw new ERR_INVALID_PACKAGE_CONFIG(
      path,
      (base ? `"${specifier}" from ` : "") + url.fileURLToPath(base || specifier),
      error.message
    );
  }
  let { imports, main, name, type } = filterOwnProperties(packageJSON, [
    "imports",
    "main",
    "name",
    "type"
  ]);
  const exports = ObjectPrototypeHasOwnProperty(packageJSON, "exports") ? packageJSON.exports : void 0;
  if (typeof imports !== "object" || imports === null) {
    imports = void 0;
  }
  if (typeof main !== "string") {
    main = void 0;
  }
  if (typeof name !== "string") {
    name = void 0;
  }
  if (type !== "module" && type !== "commonjs") {
    type = "none";
  }
  const packageConfig = {
    pjsonPath: path,
    exists: true,
    main,
    name,
    type,
    exports,
    imports
  };
  packageJSONCache.set(path, packageConfig);
  return packageConfig;
}
function getPackageScopeConfig(resolved, readFileSyncFn) {
  let packageJSONUrl = new URL("./package.json", resolved);
  while (true) {
    const packageJSONPath2 = packageJSONUrl.pathname;
    if (StringPrototypeEndsWith(packageJSONPath2, "node_modules/package.json")) {
      break;
    }
    const packageConfig2 = getPackageConfig(
      url.fileURLToPath(packageJSONUrl),
      resolved,
      void 0,
      readFileSyncFn
    );
    if (packageConfig2.exists) {
      return packageConfig2;
    }
    const lastPackageJSONUrl = packageJSONUrl;
    packageJSONUrl = new URL("../package.json", packageJSONUrl);
    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) {
      break;
    }
  }
  const packageJSONPath = url.fileURLToPath(packageJSONUrl);
  const packageConfig = {
    pjsonPath: packageJSONPath,
    exists: false,
    main: void 0,
    name: void 0,
    type: "none",
    exports: void 0,
    imports: void 0
  };
  packageJSONCache.set(packageJSONPath, packageConfig);
  return packageConfig;
}

/**
  @license
  Copyright Node.js contributors. All rights reserved.

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to
  deal in the Software without restriction, including without limitation the
  rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
  sell copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
  IN THE SOFTWARE.
*/
function throwImportNotDefined(specifier, packageJSONUrl, base) {
  throw new ERR_PACKAGE_IMPORT_NOT_DEFINED(
    specifier,
    packageJSONUrl && url.fileURLToPath(new URL(".", packageJSONUrl)),
    url.fileURLToPath(base)
  );
}
function throwInvalidSubpath(subpath, packageJSONUrl, internal, base) {
  const reason = `request is not a valid subpath for the "${internal ? "imports" : "exports"}" resolution of ${url.fileURLToPath(packageJSONUrl)}`;
  throw new ERR_INVALID_MODULE_SPECIFIER(
    subpath,
    reason,
    base && url.fileURLToPath(base)
  );
}
function throwInvalidPackageTarget(subpath, target, packageJSONUrl, internal, base) {
  if (typeof target === "object" && target !== null) {
    target = JSONStringify(target, null, "");
  } else {
    target = `${target}`;
  }
  throw new ERR_INVALID_PACKAGE_TARGET(
    url.fileURLToPath(new URL(".", packageJSONUrl)),
    subpath,
    target,
    internal,
    base && url.fileURLToPath(base)
  );
}
const invalidSegmentRegEx = /(^|\\|\/)((\.|%2e)(\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\|\/|$)/i;
const patternRegEx = /\*/g;
function resolvePackageTargetString(target, subpath, match, packageJSONUrl, base, pattern, internal, conditions) {
  if (subpath !== "" && !pattern && target[target.length - 1] !== "/")
    throwInvalidPackageTarget(match, target, packageJSONUrl, internal, base);
  if (!StringPrototypeStartsWith(target, "./")) {
    if (internal && !StringPrototypeStartsWith(target, "../") && !StringPrototypeStartsWith(target, "/")) {
      let isURL = false;
      try {
        new URL(target);
        isURL = true;
      } catch {
      }
      if (!isURL) {
        const exportTarget = pattern ? RegExpPrototypeSymbolReplace(patternRegEx, target, () => subpath) : target + subpath;
        return exportTarget;
      }
    }
    throwInvalidPackageTarget(match, target, packageJSONUrl, internal, base);
  }
  if (RegExpPrototypeExec(
    invalidSegmentRegEx,
    StringPrototypeSlice(target, 2)
  ) !== null)
    throwInvalidPackageTarget(match, target, packageJSONUrl, internal, base);
  const resolved = new URL(target, packageJSONUrl);
  const resolvedPath = resolved.pathname;
  const packagePath = new URL(".", packageJSONUrl).pathname;
  if (!StringPrototypeStartsWith(resolvedPath, packagePath))
    throwInvalidPackageTarget(match, target, packageJSONUrl, internal, base);
  if (subpath === "") return resolved;
  if (RegExpPrototypeExec(invalidSegmentRegEx, subpath) !== null) {
    const request = pattern ? StringPrototypeReplace(match, "*", () => subpath) : match + subpath;
    throwInvalidSubpath(request, packageJSONUrl, internal, base);
  }
  if (pattern) {
    return new URL(
      RegExpPrototypeSymbolReplace(patternRegEx, resolved.href, () => subpath)
    );
  }
  return new URL(subpath, resolved);
}
function isArrayIndex(key) {
  const keyNum = +key;
  if (`${keyNum}` !== key) return false;
  return keyNum >= 0 && keyNum < 4294967295;
}
function resolvePackageTarget(packageJSONUrl, target, subpath, packageSubpath, base, pattern, internal, conditions) {
  if (typeof target === "string") {
    return resolvePackageTargetString(
      target,
      subpath,
      packageSubpath,
      packageJSONUrl,
      base,
      pattern,
      internal);
  } else if (ArrayIsArray(target)) {
    if (target.length === 0) {
      return null;
    }
    let lastException;
    for (let i = 0; i < target.length; i++) {
      const targetItem = target[i];
      let resolveResult;
      try {
        resolveResult = resolvePackageTarget(
          packageJSONUrl,
          targetItem,
          subpath,
          packageSubpath,
          base,
          pattern,
          internal,
          conditions
        );
      } catch (e) {
        lastException = e;
        if (e.code === "ERR_INVALID_PACKAGE_TARGET") {
          continue;
        }
        throw e;
      }
      if (resolveResult === void 0) {
        continue;
      }
      if (resolveResult === null) {
        lastException = null;
        continue;
      }
      return resolveResult;
    }
    if (lastException === void 0 || lastException === null)
      return lastException;
    throw lastException;
  } else if (typeof target === "object" && target !== null) {
    const keys = ObjectGetOwnPropertyNames(target);
    for (let i = 0; i < keys.length; i++) {
      const key = keys[i];
      if (isArrayIndex(key)) {
        throw new ERR_INVALID_PACKAGE_CONFIG(
          url.fileURLToPath(packageJSONUrl),
          base,
          '"exports" cannot contain numeric property keys.'
        );
      }
    }
    for (let i = 0; i < keys.length; i++) {
      const key = keys[i];
      if (key === "default" || conditions.has(key)) {
        const conditionalTarget = target[key];
        const resolveResult = resolvePackageTarget(
          packageJSONUrl,
          conditionalTarget,
          subpath,
          packageSubpath,
          base,
          pattern,
          internal,
          conditions
        );
        if (resolveResult === void 0) continue;
        return resolveResult;
      }
    }
    return void 0;
  } else if (target === null) {
    return null;
  }
  throwInvalidPackageTarget(
    packageSubpath,
    target,
    packageJSONUrl,
    internal,
    base
  );
}
function patternKeyCompare(a, b) {
  const aPatternIndex = StringPrototypeIndexOf(a, "*");
  const bPatternIndex = StringPrototypeIndexOf(b, "*");
  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;
  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;
  if (baseLenA > baseLenB) return -1;
  if (baseLenB > baseLenA) return 1;
  if (aPatternIndex === -1) return 1;
  if (bPatternIndex === -1) return -1;
  if (a.length > b.length) return -1;
  if (b.length > a.length) return 1;
  return 0;
}
function isConditionalExportsMainSugar(exports, packageJSONUrl, base) {
  if (typeof exports === "string" || ArrayIsArray(exports)) return true;
  if (typeof exports !== "object" || exports === null) return false;
  const keys = ObjectGetOwnPropertyNames(exports);
  let isConditionalSugar = false;
  let i = 0;
  for (let j = 0; j < keys.length; j++) {
    const key = keys[j];
    const curIsConditionalSugar = key === "" || key[0] !== ".";
    if (i++ === 0) {
      isConditionalSugar = curIsConditionalSugar;
    } else if (isConditionalSugar !== curIsConditionalSugar) {
      throw new ERR_INVALID_PACKAGE_CONFIG(
        url.fileURLToPath(packageJSONUrl),
        base,
        `"exports" cannot contain some keys starting with '.' and some not. The exports object must either be an object of package subpath keys or an object of main entry condition name keys only.`
      );
    }
  }
  return isConditionalSugar;
}
function throwExportsNotFound(subpath, packageJSONUrl, base) {
  throw new ERR_PACKAGE_PATH_NOT_EXPORTED(
    url.fileURLToPath(new URL(".", packageJSONUrl)),
    subpath,
    base && url.fileURLToPath(base)
  );
}
const emittedPackageWarnings = /* @__PURE__ */ new Set();
function emitTrailingSlashPatternDeprecation(match, pjsonUrl, base) {
  const pjsonPath = url.fileURLToPath(pjsonUrl);
  if (emittedPackageWarnings.has(pjsonPath + "|" + match)) return;
  emittedPackageWarnings.add(pjsonPath + "|" + match);
  process.emitWarning(
    `Use of deprecated trailing slash pattern mapping "${match}" in the "exports" field module resolution of the package at ${pjsonPath}${base ? ` imported from ${url.fileURLToPath(base)}` : ""}. Mapping specifiers ending in "/" is no longer supported.`,
    "DeprecationWarning",
    "DEP0155"
  );
}
function packageExportsResolve({
  packageJSONUrl,
  packageSubpath,
  exports,
  base,
  conditions
}) {
  if (isConditionalExportsMainSugar(exports, packageJSONUrl, base))
    exports = { ".": exports };
  if (ObjectPrototypeHasOwnProperty(exports, packageSubpath) && !StringPrototypeIncludes(packageSubpath, "*") && !StringPrototypeEndsWith(packageSubpath, "/")) {
    const target = exports[packageSubpath];
    const resolveResult = resolvePackageTarget(
      packageJSONUrl,
      target,
      "",
      packageSubpath,
      base,
      false,
      false,
      conditions
    );
    if (resolveResult == null) {
      throwExportsNotFound(packageSubpath, packageJSONUrl, base);
    }
    return resolveResult;
  }
  let bestMatch = "";
  let bestMatchSubpath;
  const keys = ObjectGetOwnPropertyNames(exports);
  for (let i = 0; i < keys.length; i++) {
    const key = keys[i];
    const patternIndex = StringPrototypeIndexOf(key, "*");
    if (patternIndex !== -1 && StringPrototypeStartsWith(
      packageSubpath,
      StringPrototypeSlice(key, 0, patternIndex)
    )) {
      if (StringPrototypeEndsWith(packageSubpath, "/"))
        emitTrailingSlashPatternDeprecation(
          packageSubpath,
          packageJSONUrl,
          base
        );
      const patternTrailer = StringPrototypeSlice(key, patternIndex + 1);
      if (packageSubpath.length >= key.length && StringPrototypeEndsWith(packageSubpath, patternTrailer) && patternKeyCompare(bestMatch, key) === 1 && StringPrototypeLastIndexOf(key, "*") === patternIndex) {
        bestMatch = key;
        bestMatchSubpath = StringPrototypeSlice(
          packageSubpath,
          patternIndex,
          packageSubpath.length - patternTrailer.length
        );
      }
    }
  }
  if (bestMatch) {
    const target = exports[bestMatch];
    const resolveResult = resolvePackageTarget(
      packageJSONUrl,
      target,
      bestMatchSubpath,
      bestMatch,
      base,
      true,
      false,
      conditions
    );
    if (resolveResult == null) {
      throwExportsNotFound(packageSubpath, packageJSONUrl, base);
    }
    return resolveResult;
  }
  throwExportsNotFound(packageSubpath, packageJSONUrl, base);
}
function packageImportsResolve({ name, base, conditions, readFileSyncFn }) {
  if (name === "#" || StringPrototypeStartsWith(name, "#/") || StringPrototypeEndsWith(name, "/")) {
    const reason = "is not a valid internal imports specifier name";
    throw new ERR_INVALID_MODULE_SPECIFIER(name, reason, url.fileURLToPath(base));
  }
  let packageJSONUrl;
  const packageConfig = getPackageScopeConfig(base, readFileSyncFn);
  if (packageConfig.exists) {
    packageJSONUrl = url.pathToFileURL(packageConfig.pjsonPath);
    const imports = packageConfig.imports;
    if (imports) {
      if (ObjectPrototypeHasOwnProperty(imports, name) && !StringPrototypeIncludes(name, "*")) {
        const resolveResult = resolvePackageTarget(
          packageJSONUrl,
          imports[name],
          "",
          name,
          base,
          false,
          true,
          conditions
        );
        if (resolveResult != null) {
          return resolveResult;
        }
      } else {
        let bestMatch = "";
        let bestMatchSubpath;
        const keys = ObjectGetOwnPropertyNames(imports);
        for (let i = 0; i < keys.length; i++) {
          const key = keys[i];
          const patternIndex = StringPrototypeIndexOf(key, "*");
          if (patternIndex !== -1 && StringPrototypeStartsWith(
            name,
            StringPrototypeSlice(key, 0, patternIndex)
          )) {
            const patternTrailer = StringPrototypeSlice(key, patternIndex + 1);
            if (name.length >= key.length && StringPrototypeEndsWith(name, patternTrailer) && patternKeyCompare(bestMatch, key) === 1 && StringPrototypeLastIndexOf(key, "*") === patternIndex) {
              bestMatch = key;
              bestMatchSubpath = StringPrototypeSlice(
                name,
                patternIndex,
                name.length - patternTrailer.length
              );
            }
          }
        }
        if (bestMatch) {
          const target = imports[bestMatch];
          const resolveResult = resolvePackageTarget(
            packageJSONUrl,
            target,
            bestMatchSubpath,
            bestMatch,
            base,
            true,
            true,
            conditions
          );
          if (resolveResult != null) {
            return resolveResult;
          }
        }
      }
    }
  }
  throwImportNotDefined(name, packageJSONUrl, base);
}

const flagSymbol = Symbol("arg flag");
class ArgError extends Error {
  constructor(msg, code) {
    super(msg);
    this.name = "ArgError";
    this.code = code;
    Object.setPrototypeOf(this, ArgError.prototype);
  }
}
function arg(opts, {
  argv = process.argv.slice(2),
  permissive = false,
  stopAtPositional = false
} = {}) {
  if (!opts) {
    throw new ArgError(
      "argument specification object is required",
      "ARG_CONFIG_NO_SPEC"
    );
  }
  const result = { _: [] };
  const aliases = {};
  const handlers = {};
  for (const key of Object.keys(opts)) {
    if (!key) {
      throw new ArgError(
        "argument key cannot be an empty string",
        "ARG_CONFIG_EMPTY_KEY"
      );
    }
    if (key[0] !== "-") {
      throw new ArgError(
        `argument key must start with '-' but found: '${key}'`,
        "ARG_CONFIG_NONOPT_KEY"
      );
    }
    if (key.length === 1) {
      throw new ArgError(
        `argument key must have a name; singular '-' keys are not allowed: ${key}`,
        "ARG_CONFIG_NONAME_KEY"
      );
    }
    if (typeof opts[key] === "string") {
      aliases[key] = opts[key];
      continue;
    }
    let type = opts[key];
    let isFlag = false;
    if (Array.isArray(type) && type.length === 1 && typeof type[0] === "function") {
      const [fn] = type;
      type = (value, name, prev = []) => {
        prev.push(fn(value, name, prev[prev.length - 1]));
        return prev;
      };
      isFlag = fn === Boolean || fn[flagSymbol] === true;
    } else if (typeof type === "function") {
      isFlag = type === Boolean || type[flagSymbol] === true;
    } else {
      throw new ArgError(
        `type missing or not a function or valid array type: ${key}`,
        "ARG_CONFIG_VAD_TYPE"
      );
    }
    if (key[1] !== "-" && key.length > 2) {
      throw new ArgError(
        `short argument keys (with a single hyphen) must have only one character: ${key}`,
        "ARG_CONFIG_SHORTOPT_TOOLONG"
      );
    }
    handlers[key] = [type, isFlag];
  }
  for (let i = 0, len = argv.length; i < len; i++) {
    const wholeArg = argv[i];
    if (stopAtPositional && result._.length > 0) {
      result._ = result._.concat(argv.slice(i));
      break;
    }
    if (wholeArg === "--") {
      result._ = result._.concat(argv.slice(i + 1));
      break;
    }
    if (wholeArg.length > 1 && wholeArg[0] === "-") {
      const separatedArguments = wholeArg[1] === "-" || wholeArg.length === 2 ? [wholeArg] : wholeArg.slice(1).split("").map((a) => `-${a}`);
      for (let j = 0; j < separatedArguments.length; j++) {
        const arg2 = separatedArguments[j];
        const [originalArgName, argStr] = arg2[1] === "-" ? arg2.split(/=(.*)/, 2) : [arg2, void 0];
        let argName = originalArgName;
        while (argName in aliases) {
          argName = aliases[argName];
        }
        if (!(argName in handlers)) {
          if (permissive) {
            result._.push(arg2);
            continue;
          } else {
            throw new ArgError(
              `unknown or unexpected option: ${originalArgName}`,
              "ARG_UNKNOWN_OPTION"
            );
          }
        }
        const [type, isFlag] = handlers[argName];
        if (!isFlag && j + 1 < separatedArguments.length) {
          throw new ArgError(
            `option requires argument (but was followed by another short argument): ${originalArgName}`,
            "ARG_MISSING_REQUIRED_SHORTARG"
          );
        }
        if (isFlag) {
          result[argName] = type(true, argName, result[argName]);
        } else if (argStr === void 0) {
          if (argv.length < i + 2 || argv[i + 1].length > 1 && argv[i + 1][0] === "-" && !(argv[i + 1].match(/^-?\d*(\.(?=\d))?\d*$/) && (type === Number || // eslint-disable-next-line no-undef
          typeof BigInt !== "undefined" && type === BigInt))) {
            const extended = originalArgName === argName ? "" : ` (alias for ${argName})`;
            throw new ArgError(
              `option requires argument: ${originalArgName}${extended}`,
              "ARG_MISSING_REQUIRED_LONGARG"
            );
          }
          result[argName] = type(argv[i + 1], argName, result[argName]);
          ++i;
        } else {
          result[argName] = type(argStr, argName, result[argName]);
        }
      }
    } else {
      result._.push(wholeArg);
    }
  }
  return result;
}
arg.flag = (fn) => {
  fn[flagSymbol] = true;
  return fn;
};
arg.COUNT = arg.flag((v, name, existingCount) => (existingCount || 0) + 1);
arg.ArgError = ArgError;
var arg_1 = arg;

const arg$1 = /*@__PURE__*/getDefaultExportFromCjs(arg_1);

/**
  @license
  The MIT License (MIT)

  Copyright (c) 2014 Blake Embrey (hello@blakeembrey.com)

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
*/
/**
  @license
  Copyright Joyent, Inc. and other Node contributors.

  Permission is hereby granted, free of charge, to any person obtaining a
  copy of this software and associated documentation files (the
  "Software"), to deal in the Software without restriction, including
  without limitation the rights to use, copy, modify, merge, publish,
  distribute, sublicense, and/or sell copies of the Software, and to permit
  persons to whom the Software is furnished to do so, subject to the
  following conditions:

  The above copyright notice and this permission notice shall be included
  in all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
  NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
  OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
  USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
function getOptionValue(opt) {
  parseOptions();
  return options[opt];
}
let options;
function parseOptions() {
  if (!options) {
    options = {
      "--conditions": [],
      ...parseArgv(getNodeOptionsEnvArgv()),
      ...parseArgv(process.execArgv)
    };
  }
}
function parseArgv(argv) {
  return arg$1(
    {
      "--conditions": [String],
      "-C": "--conditions"
    },
    {
      argv,
      permissive: true
    }
  );
}
function getNodeOptionsEnvArgv() {
  const errors = [];
  const envArgv = ParseNodeOptionsEnvVar(process.env.NODE_OPTIONS || "", errors);
  return envArgv;
}
function ParseNodeOptionsEnvVar(node_options, errors) {
  const env_argv = [];
  let is_in_string = false;
  let will_start_new_arg = true;
  for (let index = 0; index < node_options.length; ++index) {
    let c = node_options[index];
    if (c === "\\" && is_in_string) {
      if (index + 1 === node_options.length) {
        errors.push("invalid value for NODE_OPTIONS (invalid escape)\n");
        return env_argv;
      } else {
        c = node_options[++index];
      }
    } else if (c === " " && !is_in_string) {
      will_start_new_arg = true;
      continue;
    } else if (c === '"') {
      is_in_string = !is_in_string;
      continue;
    }
    if (will_start_new_arg) {
      env_argv.push(c);
      will_start_new_arg = false;
    } else {
      env_argv[env_argv.length - 1] += c;
    }
  }
  if (is_in_string) {
    errors.push("invalid value for NODE_OPTIONS (unterminated string)\n");
  }
  return env_argv;
}

function makeApi(runtimeState, opts) {
  const alwaysWarnOnFallback = Number(process.env.PNP_ALWAYS_WARN_ON_FALLBACK) > 0;
  const debugLevel = Number(process.env.PNP_DEBUG_LEVEL);
  const pathRegExp = /^(?![a-zA-Z]:[\\/]|\\\\|\.{0,2}(?:\/|$))((?:node:)?(?:@[^/]+\/)?[^/]+)\/*(.*|)$/;
  const isStrictRegExp = /^(\/|\.{1,2}(\/|$))/;
  const isDirRegExp = /\/$/;
  const isRelativeRegexp = /^\.{0,2}\//;
  const topLevelLocator = { name: null, reference: null };
  const fallbackLocators = [];
  const emittedWarnings = /* @__PURE__ */ new Set();
  if (runtimeState.enableTopLevelFallback === true)
    fallbackLocators.push(topLevelLocator);
  if (opts.compatibilityMode !== false) {
    for (const name of [`react-scripts`, `gatsby`]) {
      const packageStore = runtimeState.packageRegistry.get(name);
      if (packageStore) {
        for (const reference of packageStore.keys()) {
          if (reference === null) {
            throw new Error(`Assertion failed: This reference shouldn't be null`);
          } else {
            fallbackLocators.push({ name, reference });
          }
        }
      }
    }
  }
  const {
    ignorePattern,
    packageRegistry,
    packageLocatorsByLocations
  } = runtimeState;
  function makeLogEntry(name, args) {
    return {
      fn: name,
      args,
      error: null,
      result: null
    };
  }
  function trace(entry) {
    const colors = process.stderr?.hasColors?.() ?? process.stdout.isTTY;
    const c = (n, str) => `\x1B[${n}m${str}\x1B[0m`;
    const error = entry.error;
    if (error)
      console.error(c(`31;1`, `\u2716 ${entry.error?.message.replace(/\n.*/s, ``)}`));
    else
      console.error(c(`33;1`, `\u203C Resolution`));
    if (entry.args.length > 0)
      console.error();
    for (const arg of entry.args)
      console.error(`  ${c(`37;1`, `In \u2190`)} ${nodeUtils.inspect(arg, { colors, compact: true })}`);
    if (entry.result) {
      console.error();
      console.error(`  ${c(`37;1`, `Out \u2192`)} ${nodeUtils.inspect(entry.result, { colors, compact: true })}`);
    }
    const stack = new Error().stack.match(/(?<=^ +)at.*/gm)?.slice(2) ?? [];
    if (stack.length > 0) {
      console.error();
      for (const line of stack) {
        console.error(`  ${c(`38;5;244`, line)}`);
      }
    }
    console.error();
  }
  function maybeLog(name, fn) {
    if (opts.allowDebug === false)
      return fn;
    if (Number.isFinite(debugLevel)) {
      if (debugLevel >= 2) {
        return (...args) => {
          const logEntry = makeLogEntry(name, args);
          try {
            return logEntry.result = fn(...args);
          } catch (error) {
            throw logEntry.error = error;
          } finally {
            trace(logEntry);
          }
        };
      } else if (debugLevel >= 1) {
        return (...args) => {
          try {
            return fn(...args);
          } catch (error) {
            const logEntry = makeLogEntry(name, args);
            logEntry.error = error;
            trace(logEntry);
            throw error;
          }
        };
      }
    }
    return fn;
  }
  function getPackageInformationSafe(packageLocator) {
    const packageInformation = getPackageInformation(packageLocator);
    if (!packageInformation) {
      throw makeError(
        ErrorCode.INTERNAL,
        `Couldn't find a matching entry in the dependency tree for the specified parent (this is probably an internal error)`
      );
    }
    return packageInformation;
  }
  function isDependencyTreeRoot(packageLocator) {
    if (packageLocator.name === null)
      return true;
    for (const dependencyTreeRoot of runtimeState.dependencyTreeRoots)
      if (dependencyTreeRoot.name === packageLocator.name && dependencyTreeRoot.reference === packageLocator.reference)
        return true;
    return false;
  }
  const defaultExportsConditions = /* @__PURE__ */ new Set([
    `node`,
    `require`,
    ...getOptionValue(`--conditions`)
  ]);
  function applyNodeExportsResolution(unqualifiedPath, conditions = defaultExportsConditions, issuer) {
    const locator = findPackageLocator(ppath.join(unqualifiedPath, `internal.js`), {
      resolveIgnored: true,
      includeDiscardFromLookup: true
    });
    if (locator === null) {
      throw makeError(
        ErrorCode.INTERNAL,
        `The locator that owns the "${unqualifiedPath}" path can't be found inside the dependency tree (this is probably an internal error)`
      );
    }
    const { packageLocation } = getPackageInformationSafe(locator);
    const manifestPath = ppath.join(packageLocation, Filename.manifest);
    if (!opts.fakeFs.existsSync(manifestPath))
      return null;
    const pkgJson = JSON.parse(opts.fakeFs.readFileSync(manifestPath, `utf8`));
    if (pkgJson.exports == null)
      return null;
    let subpath = ppath.contains(packageLocation, unqualifiedPath);
    if (subpath === null) {
      throw makeError(
        ErrorCode.INTERNAL,
        `unqualifiedPath doesn't contain the packageLocation (this is probably an internal error)`
      );
    }
    if (subpath !== `.` && !isRelativeRegexp.test(subpath))
      subpath = `./${subpath}`;
    try {
      const resolvedExport = packageExportsResolve({
        packageJSONUrl: url.pathToFileURL(npath.fromPortablePath(manifestPath)),
        packageSubpath: subpath,
        exports: pkgJson.exports,
        base: issuer ? url.pathToFileURL(npath.fromPortablePath(issuer)) : null,
        conditions
      });
      return npath.toPortablePath(url.fileURLToPath(resolvedExport));
    } catch (error) {
      throw makeError(
        ErrorCode.EXPORTS_RESOLUTION_FAILED,
        error.message,
        { unqualifiedPath: getPathForDisplay(unqualifiedPath), locator, pkgJson, subpath: getPathForDisplay(subpath), conditions },
        error.code
      );
    }
  }
  function applyNodeExtensionResolution(unqualifiedPath, candidates, { extensions }) {
    let stat;
    try {
      candidates.push(unqualifiedPath);
      stat = opts.fakeFs.statSync(unqualifiedPath);
    } catch (error) {
    }
    if (stat && !stat.isDirectory())
      return opts.fakeFs.realpathSync(unqualifiedPath);
    if (stat && stat.isDirectory()) {
      let pkgJson;
      try {
        pkgJson = JSON.parse(opts.fakeFs.readFileSync(ppath.join(unqualifiedPath, Filename.manifest), `utf8`));
      } catch (error) {
      }
      let nextUnqualifiedPath;
      if (pkgJson && pkgJson.main)
        nextUnqualifiedPath = ppath.resolve(unqualifiedPath, pkgJson.main);
      if (nextUnqualifiedPath && nextUnqualifiedPath !== unqualifiedPath) {
        const resolution = applyNodeExtensionResolution(nextUnqualifiedPath, candidates, { extensions });
        if (resolution !== null) {
          return resolution;
        }
      }
    }
    for (let i = 0, length = extensions.length; i < length; i++) {
      const candidateFile = `${unqualifiedPath}${extensions[i]}`;
      candidates.push(candidateFile);
      if (opts.fakeFs.existsSync(candidateFile)) {
        return candidateFile;
      }
    }
    if (stat && stat.isDirectory()) {
      for (let i = 0, length = extensions.length; i < length; i++) {
        const candidateFile = ppath.format({ dir: unqualifiedPath, name: `index`, ext: extensions[i] });
        candidates.push(candidateFile);
        if (opts.fakeFs.existsSync(candidateFile)) {
          return candidateFile;
        }
      }
    }
    return null;
  }
  function makeFakeModule(path) {
    const fakeModule = new require$$0.Module(path, null);
    fakeModule.filename = path;
    fakeModule.paths = require$$0.Module._nodeModulePaths(path);
    return fakeModule;
  }
  function callNativeResolution(request, issuer) {
    if (issuer.endsWith(`/`))
      issuer = ppath.join(issuer, `internal.js`);
    return require$$0.Module._resolveFilename(npath.fromPortablePath(request), makeFakeModule(npath.fromPortablePath(issuer)), false, { plugnplay: false });
  }
  function isPathIgnored(path) {
    if (ignorePattern === null)
      return false;
    const subPath = ppath.contains(runtimeState.basePath, path);
    if (subPath === null)
      return false;
    if (ignorePattern.test(subPath.replace(/\/$/, ``))) {
      return true;
    } else {
      return false;
    }
  }
  const VERSIONS = { std: 3, resolveVirtual: 1, getAllLocators: 1 };
  const topLevel = topLevelLocator;
  function getPackageInformation({ name, reference }) {
    const packageInformationStore = packageRegistry.get(name);
    if (!packageInformationStore)
      return null;
    const packageInformation = packageInformationStore.get(reference);
    if (!packageInformation)
      return null;
    return packageInformation;
  }
  function findPackageDependents({ name, reference }) {
    const dependents = [];
    for (const [dependentName, packageInformationStore] of packageRegistry) {
      if (dependentName === null)
        continue;
      for (const [dependentReference, packageInformation] of packageInformationStore) {
        if (dependentReference === null)
          continue;
        const dependencyReference = packageInformation.packageDependencies.get(name);
        if (dependencyReference !== reference)
          continue;
        if (dependentName === name && dependentReference === reference)
          continue;
        dependents.push({
          name: dependentName,
          reference: dependentReference
        });
      }
    }
    return dependents;
  }
  function findBrokenPeerDependencies(dependency, initialPackage) {
    const brokenPackages = /* @__PURE__ */ new Map();
    const alreadyVisited = /* @__PURE__ */ new Set();
    const traversal = (currentPackage) => {
      const identifier = JSON.stringify(currentPackage.name);
      if (alreadyVisited.has(identifier))
        return;
      alreadyVisited.add(identifier);
      const dependents = findPackageDependents(currentPackage);
      for (const dependent of dependents) {
        const dependentInformation = getPackageInformationSafe(dependent);
        if (dependentInformation.packagePeers.has(dependency)) {
          traversal(dependent);
        } else {
          let brokenSet = brokenPackages.get(dependent.name);
          if (typeof brokenSet === `undefined`)
            brokenPackages.set(dependent.name, brokenSet = /* @__PURE__ */ new Set());
          brokenSet.add(dependent.reference);
        }
      }
    };
    traversal(initialPackage);
    const brokenList = [];
    for (const name of [...brokenPackages.keys()].sort())
      for (const reference of [...brokenPackages.get(name)].sort())
        brokenList.push({ name, reference });
    return brokenList;
  }
  function findPackageLocator(location, { resolveIgnored = false, includeDiscardFromLookup = false } = {}) {
    if (isPathIgnored(location) && !resolveIgnored)
      return null;
    let relativeLocation = ppath.relative(runtimeState.basePath, location);
    if (!relativeLocation.match(isStrictRegExp))
      relativeLocation = `./${relativeLocation}`;
    if (!relativeLocation.endsWith(`/`))
      relativeLocation = `${relativeLocation}/`;
    do {
      const entry = packageLocatorsByLocations.get(relativeLocation);
      if (typeof entry === `undefined` || entry.discardFromLookup && !includeDiscardFromLookup) {
        relativeLocation = relativeLocation.substring(0, relativeLocation.lastIndexOf(`/`, relativeLocation.length - 2) + 1);
        continue;
      }
      return entry.locator;
    } while (relativeLocation !== ``);
    return null;
  }
  function tryReadFile(filePath) {
    try {
      return opts.fakeFs.readFileSync(npath.toPortablePath(filePath), `utf8`);
    } catch (err) {
      if (err.code === `ENOENT`)
        return void 0;
      throw err;
    }
  }
  function resolveToUnqualified(request, issuer, { considerBuiltins = true } = {}) {
    if (request.startsWith(`#`))
      throw new Error(`resolveToUnqualified can not handle private import mappings`);
    if (request === `pnpapi`)
      return npath.toPortablePath(opts.pnpapiResolution);
    if (considerBuiltins && require$$0.isBuiltin(request))
      return null;
    const requestForDisplay = getPathForDisplay(request);
    const issuerForDisplay = issuer && getPathForDisplay(issuer);
    if (issuer && isPathIgnored(issuer)) {
      if (!ppath.isAbsolute(request) || findPackageLocator(request) === null) {
        const result = callNativeResolution(request, issuer);
        if (result === false) {
          throw makeError(
            ErrorCode.BUILTIN_NODE_RESOLUTION_FAILED,
            `The builtin node resolution algorithm was unable to resolve the requested module (it didn't go through the pnp resolver because the issuer was explicitely ignored by the regexp)

Require request: "${requestForDisplay}"
Required by: ${issuerForDisplay}
`,
            { request: requestForDisplay, issuer: issuerForDisplay }
          );
        }
        return npath.toPortablePath(result);
      }
    }
    let unqualifiedPath;
    const dependencyNameMatch = request.match(pathRegExp);
    if (!dependencyNameMatch) {
      if (ppath.isAbsolute(request)) {
        unqualifiedPath = ppath.normalize(request);
      } else {
        if (!issuer) {
          throw makeError(
            ErrorCode.API_ERROR,
            `The resolveToUnqualified function must be called with a valid issuer when the path isn't a builtin nor absolute`,
            { request: requestForDisplay, issuer: issuerForDisplay }
          );
        }
        const absoluteIssuer = ppath.resolve(issuer);
        if (issuer.match(isDirRegExp)) {
          unqualifiedPath = ppath.normalize(ppath.join(absoluteIssuer, request));
        } else {
          unqualifiedPath = ppath.normalize(ppath.join(ppath.dirname(absoluteIssuer), request));
        }
      }
    } else {
      if (!issuer) {
        throw makeError(
          ErrorCode.API_ERROR,
          `The resolveToUnqualified function must be called with a valid issuer when the path isn't a builtin nor absolute`,
          { request: requestForDisplay, issuer: issuerForDisplay }
        );
      }
      const [, dependencyName, subPath] = dependencyNameMatch;
      const issuerLocator = findPackageLocator(issuer);
      if (!issuerLocator) {
        const result = callNativeResolution(request, issuer);
        if (result === false) {
          throw makeError(
            ErrorCode.BUILTIN_NODE_RESOLUTION_FAILED,
            `The builtin node resolution algorithm was unable to resolve the requested module (it didn't go through the pnp resolver because the issuer doesn't seem to be part of the Yarn-managed dependency tree).

Require path: "${requestForDisplay}"
Required by: ${issuerForDisplay}
`,
            { request: requestForDisplay, issuer: issuerForDisplay }
          );
        }
        return npath.toPortablePath(result);
      }
      const issuerInformation = getPackageInformationSafe(issuerLocator);
      let dependencyReference = issuerInformation.packageDependencies.get(dependencyName);
      let fallbackReference = null;
      if (dependencyReference == null) {
        if (issuerLocator.name !== null) {
          const exclusionEntry = runtimeState.fallbackExclusionList.get(issuerLocator.name);
          const canUseFallbacks = !exclusionEntry || !exclusionEntry.has(issuerLocator.reference);
          if (canUseFallbacks) {
            for (let t = 0, T = fallbackLocators.length; t < T; ++t) {
              const fallbackInformation = getPackageInformationSafe(fallbackLocators[t]);
              const reference = fallbackInformation.packageDependencies.get(dependencyName);
              if (reference == null)
                continue;
              if (alwaysWarnOnFallback)
                fallbackReference = reference;
              else
                dependencyReference = reference;
              break;
            }
            if (runtimeState.enableTopLevelFallback) {
              if (dependencyReference == null && fallbackReference === null) {
                const reference = runtimeState.fallbackPool.get(dependencyName);
                if (reference != null) {
                  fallbackReference = reference;
                }
              }
            }
          }
        }
      }
      let error = null;
      if (dependencyReference === null) {
        if (isDependencyTreeRoot(issuerLocator)) {
          error = makeError(
            ErrorCode.MISSING_PEER_DEPENDENCY,
            `Your application tried to access ${dependencyName} (a peer dependency); this isn't allowed as there is no ancestor to satisfy the requirement. Use a devDependency if needed.

Required package: ${dependencyName}${dependencyName !== requestForDisplay ? ` (via "${requestForDisplay}")` : ``}
Required by: ${issuerForDisplay}
`,
            { request: requestForDisplay, issuer: issuerForDisplay, dependencyName }
          );
        } else {
          const brokenAncestors = findBrokenPeerDependencies(dependencyName, issuerLocator);
          if (brokenAncestors.every((ancestor) => isDependencyTreeRoot(ancestor))) {
            error = makeError(
              ErrorCode.MISSING_PEER_DEPENDENCY,
              `${issuerLocator.name} tried to access ${dependencyName} (a peer dependency) but it isn't provided by your application; this makes the require call ambiguous and unsound.

Required package: ${dependencyName}${dependencyName !== requestForDisplay ? ` (via "${requestForDisplay}")` : ``}
Required by: ${issuerLocator.name}@${issuerLocator.reference} (via ${issuerForDisplay})
${brokenAncestors.map((ancestorLocator) => `Ancestor breaking the chain: ${ancestorLocator.name}@${ancestorLocator.reference}
`).join(``)}
`,
              { request: requestForDisplay, issuer: issuerForDisplay, issuerLocator: Object.assign({}, issuerLocator), dependencyName, brokenAncestors }
            );
          } else {
            error = makeError(
              ErrorCode.MISSING_PEER_DEPENDENCY,
              `${issuerLocator.name} tried to access ${dependencyName} (a peer dependency) but it isn't provided by its ancestors; this makes the require call ambiguous and unsound.

Required package: ${dependencyName}${dependencyName !== requestForDisplay ? ` (via "${requestForDisplay}")` : ``}
Required by: ${issuerLocator.name}@${issuerLocator.reference} (via ${issuerForDisplay})

${brokenAncestors.map((ancestorLocator) => `Ancestor breaking the chain: ${ancestorLocator.name}@${ancestorLocator.reference}
`).join(``)}
`,
              { request: requestForDisplay, issuer: issuerForDisplay, issuerLocator: Object.assign({}, issuerLocator), dependencyName, brokenAncestors }
            );
          }
        }
      } else if (dependencyReference === void 0) {
        if (!considerBuiltins && require$$0.isBuiltin(request)) {
          if (isDependencyTreeRoot(issuerLocator)) {
            error = makeError(
              ErrorCode.UNDECLARED_DEPENDENCY,
              `Your application tried to access ${dependencyName}. While this module is usually interpreted as a Node builtin, your resolver is running inside a non-Node resolution context where such builtins are ignored. Since ${dependencyName} isn't otherwise declared in your dependencies, this makes the require call ambiguous and unsound.

Required package: ${dependencyName}${dependencyName !== requestForDisplay ? ` (via "${requestForDisplay}")` : ``}
Required by: ${issuerForDisplay}
`,
              { request: requestForDisplay, issuer: issuerForDisplay, dependencyName }
            );
          } else {
            error = makeError(
              ErrorCode.UNDECLARED_DEPENDENCY,
              `${issuerLocator.name} tried to access ${dependencyName}. While this module is usually interpreted as a Node builtin, your resolver is running inside a non-Node resolution context where such builtins are ignored. Since ${dependencyName} isn't otherwise declared in ${issuerLocator.name}'s dependencies, this makes the require call ambiguous and unsound.

Required package: ${dependencyName}${dependencyName !== requestForDisplay ? ` (via "${requestForDisplay}")` : ``}
Required by: ${issuerForDisplay}
`,
              { request: requestForDisplay, issuer: issuerForDisplay, issuerLocator: Object.assign({}, issuerLocator), dependencyName }
            );
          }
        } else {
          if (isDependencyTreeRoot(issuerLocator)) {
            error = makeError(
              ErrorCode.UNDECLARED_DEPENDENCY,
              `Your application tried to access ${dependencyName}, but it isn't declared in your dependencies; this makes the require call ambiguous and unsound.

Required package: ${dependencyName}${dependencyName !== requestForDisplay ? ` (via "${requestForDisplay}")` : ``}
Required by: ${issuerForDisplay}
`,
              { request: requestForDisplay, issuer: issuerForDisplay, dependencyName }
            );
          } else {
            error = makeError(
              ErrorCode.UNDECLARED_DEPENDENCY,
              `${issuerLocator.name} tried to access ${dependencyName}, but it isn't declared in its dependencies; this makes the require call ambiguous and unsound.

Required package: ${dependencyName}${dependencyName !== requestForDisplay ? ` (via "${requestForDisplay}")` : ``}
Required by: ${issuerLocator.name}@${issuerLocator.reference} (via ${issuerForDisplay})
`,
              { request: requestForDisplay, issuer: issuerForDisplay, issuerLocator: Object.assign({}, issuerLocator), dependencyName }
            );
          }
        }
      }
      if (dependencyReference == null) {
        if (fallbackReference === null || error === null)
          throw error || new Error(`Assertion failed: Expected an error to have been set`);
        dependencyReference = fallbackReference;
        const message = error.message.replace(/\n.*/g, ``);
        error.message = message;
        if (!emittedWarnings.has(message) && debugLevel !== 0) {
          emittedWarnings.add(message);
          process.emitWarning(error);
        }
      }
      const dependencyLocator = Array.isArray(dependencyReference) ? { name: dependencyReference[0], reference: dependencyReference[1] } : { name: dependencyName, reference: dependencyReference };
      const dependencyInformation = getPackageInformationSafe(dependencyLocator);
      if (!dependencyInformation.packageLocation) {
        throw makeError(
          ErrorCode.MISSING_DEPENDENCY,
          `A dependency seems valid but didn't get installed for some reason. This might be caused by a partial install, such as dev vs prod.

Required package: ${dependencyLocator.name}@${dependencyLocator.reference}${dependencyLocator.name !== requestForDisplay ? ` (via "${requestForDisplay}")` : ``}
Required by: ${issuerLocator.name}@${issuerLocator.reference} (via ${issuerForDisplay})
`,
          { request: requestForDisplay, issuer: issuerForDisplay, dependencyLocator: Object.assign({}, dependencyLocator) }
        );
      }
      const dependencyLocation = dependencyInformation.packageLocation;
      if (subPath) {
        unqualifiedPath = ppath.join(dependencyLocation, subPath);
      } else {
        unqualifiedPath = dependencyLocation;
      }
    }
    return ppath.normalize(unqualifiedPath);
  }
  function resolveUnqualifiedExport(request, unqualifiedPath, conditions = defaultExportsConditions, issuer) {
    if (isStrictRegExp.test(request))
      return unqualifiedPath;
    const unqualifiedExportPath = applyNodeExportsResolution(unqualifiedPath, conditions, issuer);
    if (unqualifiedExportPath) {
      return ppath.normalize(unqualifiedExportPath);
    } else {
      return unqualifiedPath;
    }
  }
  function resolveUnqualified(unqualifiedPath, { extensions = Object.keys(require$$0.Module._extensions) } = {}) {
    const candidates = [];
    const qualifiedPath = applyNodeExtensionResolution(unqualifiedPath, candidates, { extensions });
    if (qualifiedPath) {
      return ppath.normalize(qualifiedPath);
    } else {
      reportRequiredFilesToWatchMode(candidates.map((candidate) => npath.fromPortablePath(candidate)));
      const unqualifiedPathForDisplay = getPathForDisplay(unqualifiedPath);
      const containingPackage = findPackageLocator(unqualifiedPath);
      if (containingPackage) {
        const { packageLocation } = getPackageInformationSafe(containingPackage);
        let exists = true;
        try {
          opts.fakeFs.accessSync(packageLocation);
        } catch (err) {
          if (err?.code === `ENOENT`) {
            exists = false;
          } else {
            const readableError = (err?.message ?? err ?? `empty exception thrown`).replace(/^[A-Z]/, ($0) => $0.toLowerCase());
            throw makeError(ErrorCode.QUALIFIED_PATH_RESOLUTION_FAILED, `Required package exists but could not be accessed (${readableError}).

Missing package: ${containingPackage.name}@${containingPackage.reference}
Expected package location: ${getPathForDisplay(packageLocation)}
`, { unqualifiedPath: unqualifiedPathForDisplay, extensions });
          }
        }
        if (!exists) {
          const errorMessage = packageLocation.includes(`/unplugged/`) ? `Required unplugged package missing from disk. This may happen when switching branches without running installs (unplugged packages must be fully materialized on disk to work).` : `Required package missing from disk. If you keep your packages inside your repository then restarting the Node process may be enough. Otherwise, try to run an install first.`;
          throw makeError(
            ErrorCode.QUALIFIED_PATH_RESOLUTION_FAILED,
            `${errorMessage}

Missing package: ${containingPackage.name}@${containingPackage.reference}
Expected package location: ${getPathForDisplay(packageLocation)}
`,
            { unqualifiedPath: unqualifiedPathForDisplay, extensions }
          );
        }
      }
      throw makeError(
        ErrorCode.QUALIFIED_PATH_RESOLUTION_FAILED,
        `Qualified path resolution failed: we looked for the following paths, but none could be accessed.

Source path: ${unqualifiedPathForDisplay}
${candidates.map((candidate) => `Not found: ${getPathForDisplay(candidate)}
`).join(``)}`,
        { unqualifiedPath: unqualifiedPathForDisplay, extensions }
      );
    }
  }
  function resolvePrivateRequest(request, issuer, opts2) {
    if (!issuer)
      throw new Error(`Assertion failed: An issuer is required to resolve private import mappings`);
    const resolved = packageImportsResolve({
      name: request,
      base: url.pathToFileURL(npath.fromPortablePath(issuer)),
      conditions: opts2.conditions ?? defaultExportsConditions,
      readFileSyncFn: tryReadFile
    });
    if (resolved instanceof URL) {
      return resolveUnqualified(npath.toPortablePath(url.fileURLToPath(resolved)), { extensions: opts2.extensions });
    } else {
      if (resolved.startsWith(`#`))
        throw new Error(`Mapping from one private import to another isn't allowed`);
      return resolveRequest(resolved, issuer, opts2);
    }
  }
  function resolveRequest(request, issuer, opts2 = {}) {
    try {
      if (request.startsWith(`#`))
        return resolvePrivateRequest(request, issuer, opts2);
      const { considerBuiltins, extensions, conditions } = opts2;
      const unqualifiedPath = resolveToUnqualified(request, issuer, { considerBuiltins });
      if (request === `pnpapi`)
        return unqualifiedPath;
      if (unqualifiedPath === null)
        return null;
      const isIssuerIgnored = () => issuer !== null ? isPathIgnored(issuer) : false;
      const remappedPath = (!considerBuiltins || !require$$0.isBuiltin(request)) && !isIssuerIgnored() ? resolveUnqualifiedExport(request, unqualifiedPath, conditions, issuer) : unqualifiedPath;
      return resolveUnqualified(remappedPath, { extensions });
    } catch (error) {
      if (Object.hasOwn(error, `pnpCode`))
        Object.assign(error.data, { request: getPathForDisplay(request), issuer: issuer && getPathForDisplay(issuer) });
      throw error;
    }
  }
  function resolveVirtual(request) {
    const normalized = ppath.normalize(request);
    const resolved = VirtualFS.resolveVirtual(normalized);
    return resolved !== normalized ? resolved : null;
  }
  return {
    VERSIONS,
    topLevel,
    getLocator: (name, referencish) => {
      if (Array.isArray(referencish)) {
        return { name: referencish[0], reference: referencish[1] };
      } else {
        return { name, reference: referencish };
      }
    },
    getDependencyTreeRoots: () => {
      return [...runtimeState.dependencyTreeRoots];
    },
    getAllLocators() {
      const locators = [];
      for (const [name, entry] of packageRegistry)
        for (const reference of entry.keys())
          if (name !== null && reference !== null)
            locators.push({ name, reference });
      return locators;
    },
    getPackageInformation: (locator) => {
      const info = getPackageInformation(locator);
      if (info === null)
        return null;
      const packageLocation = npath.fromPortablePath(info.packageLocation);
      const nativeInfo = { ...info, packageLocation };
      return nativeInfo;
    },
    findPackageLocator: (path) => {
      return findPackageLocator(npath.toPortablePath(path));
    },
    resolveToUnqualified: maybeLog(`resolveToUnqualified`, (request, issuer, opts2) => {
      const portableIssuer = issuer !== null ? npath.toPortablePath(issuer) : null;
      const resolution = resolveToUnqualified(npath.toPortablePath(request), portableIssuer, opts2);
      if (resolution === null)
        return null;
      return npath.fromPortablePath(resolution);
    }),
    resolveUnqualified: maybeLog(`resolveUnqualified`, (unqualifiedPath, opts2) => {
      return npath.fromPortablePath(resolveUnqualified(npath.toPortablePath(unqualifiedPath), opts2));
    }),
    resolveRequest: maybeLog(`resolveRequest`, (request, issuer, opts2) => {
      const portableIssuer = issuer !== null ? npath.toPortablePath(issuer) : null;
      const resolution = resolveRequest(npath.toPortablePath(request), portableIssuer, opts2);
      if (resolution === null)
        return null;
      return npath.fromPortablePath(resolution);
    }),
    resolveVirtual: maybeLog(`resolveVirtual`, (path) => {
      const result = resolveVirtual(npath.toPortablePath(path));
      if (result !== null) {
        return npath.fromPortablePath(result);
      } else {
        return null;
      }
    })
  };
}

function makeManager(pnpapi, opts) {
  const initialApiPath = npath.toPortablePath(pnpapi.resolveToUnqualified(`pnpapi`, null));
  const initialApiStats = opts.fakeFs.statSync(npath.toPortablePath(initialApiPath));
  const apiMetadata = /* @__PURE__ */ new Map([
    [initialApiPath, {
      instance: pnpapi,
      stats: initialApiStats,
      lastRefreshCheck: Date.now()
    }]
  ]);
  function loadApiInstance(pnpApiPath) {
    const nativePath = npath.fromPortablePath(pnpApiPath);
    const module = new require$$0.Module(nativePath, null);
    module.load(nativePath);
    return module.exports;
  }
  function refreshApiEntry(pnpApiPath, apiEntry) {
    const timeNow = Date.now();
    if (timeNow - apiEntry.lastRefreshCheck < 500)
      return;
    apiEntry.lastRefreshCheck = timeNow;
    const stats = opts.fakeFs.statSync(pnpApiPath);
    if (stats.mtime > apiEntry.stats.mtime) {
      process.emitWarning(`[Warning] The runtime detected new information in a PnP file; reloading the API instance (${npath.fromPortablePath(pnpApiPath)})`);
      apiEntry.stats = stats;
      apiEntry.instance = loadApiInstance(pnpApiPath);
    }
  }
  function getApiEntry(pnpApiPath, refresh = false) {
    let apiEntry = apiMetadata.get(pnpApiPath);
    if (typeof apiEntry !== `undefined`) {
      if (refresh) {
        refreshApiEntry(pnpApiPath, apiEntry);
      }
    } else {
      apiMetadata.set(pnpApiPath, apiEntry = {
        instance: loadApiInstance(pnpApiPath),
        stats: opts.fakeFs.statSync(pnpApiPath),
        lastRefreshCheck: Date.now()
      });
    }
    return apiEntry;
  }
  const findApiPathCache = /* @__PURE__ */ new Map();
  function addToCacheAndReturn(start, end, target) {
    if (target !== null) {
      target = VirtualFS.resolveVirtual(target);
      target = opts.fakeFs.realpathSync(target);
    }
    let curr;
    let next = start;
    do {
      curr = next;
      findApiPathCache.set(curr, target);
      next = ppath.dirname(curr);
    } while (curr !== end);
    return target;
  }
  function findApiPathFor(modulePath) {
    let bestCandidate = null;
    for (const [apiPath, apiEntry] of apiMetadata) {
      const locator = apiEntry.instance.findPackageLocator(modulePath);
      if (!locator)
        continue;
      if (apiMetadata.size === 1)
        return apiPath;
      const packageInformation = apiEntry.instance.getPackageInformation(locator);
      if (!packageInformation)
        throw new Error(`Assertion failed: Couldn't get package information for '${modulePath}'`);
      if (!bestCandidate)
        bestCandidate = { packageLocation: packageInformation.packageLocation, apiPaths: [] };
      if (packageInformation.packageLocation === bestCandidate.packageLocation) {
        bestCandidate.apiPaths.push(apiPath);
      } else if (packageInformation.packageLocation.length > bestCandidate.packageLocation.length) {
        bestCandidate = { packageLocation: packageInformation.packageLocation, apiPaths: [apiPath] };
      }
    }
    if (bestCandidate) {
      if (bestCandidate.apiPaths.length === 1)
        return bestCandidate.apiPaths[0];
      const controlSegment = bestCandidate.apiPaths.map((apiPath) => `  ${npath.fromPortablePath(apiPath)}`).join(`
`);
      throw new Error(`Unable to locate pnpapi, the module '${modulePath}' is controlled by multiple pnpapi instances.
This is usually caused by using the global cache (enableGlobalCache: true)

Controlled by:
${controlSegment}
`);
    }
    const start = ppath.resolve(npath.toPortablePath(modulePath));
    let curr;
    let next = start;
    do {
      curr = next;
      const cached = findApiPathCache.get(curr);
      if (cached !== void 0)
        return addToCacheAndReturn(start, curr, cached);
      const cjsCandidate = ppath.join(curr, Filename.pnpCjs);
      if (opts.fakeFs.existsSync(cjsCandidate) && opts.fakeFs.statSync(cjsCandidate).isFile())
        return addToCacheAndReturn(start, curr, cjsCandidate);
      const legacyCjsCandidate = ppath.join(curr, Filename.pnpJs);
      if (opts.fakeFs.existsSync(legacyCjsCandidate) && opts.fakeFs.statSync(legacyCjsCandidate).isFile())
        return addToCacheAndReturn(start, curr, legacyCjsCandidate);
      next = ppath.dirname(curr);
    } while (curr !== PortablePath.root);
    return addToCacheAndReturn(start, curr, null);
  }
  const moduleToApiPathCache = /* @__PURE__ */ new WeakMap();
  function getApiPathFromParent(parent) {
    if (parent == null)
      return initialApiPath;
    let apiPath = moduleToApiPathCache.get(parent);
    if (typeof apiPath !== `undefined`)
      return apiPath;
    apiPath = parent.filename ? findApiPathFor(parent.filename) : null;
    moduleToApiPathCache.set(parent, apiPath);
    return apiPath;
  }
  return {
    getApiPathFromParent,
    findApiPathFor,
    getApiEntry
  };
}

const localFs = { ...fs };
const nodeFs = new NodeFS(localFs);
const defaultRuntimeState = $$SETUP_STATE(hydrateRuntimeState);
const defaultPnpapiResolution = __filename;
const defaultFsLayer = new VirtualFS({
  baseFs: new ZipOpenFS({
    baseFs: nodeFs,
    maxOpenFiles: 80,
    readOnlyArchives: true
  })
});
class DynamicFS extends ProxiedFS {
  baseFs = defaultFsLayer;
  constructor() {
    super(ppath);
  }
  mapToBase(p) {
    return p;
  }
  mapFromBase(p) {
    return p;
  }
}
const dynamicFsLayer = new DynamicFS();
let manager;
const defaultApi = Object.assign(makeApi(defaultRuntimeState, {
  fakeFs: dynamicFsLayer,
  pnpapiResolution: defaultPnpapiResolution
}), {
  /**
   * Can be used to generate a different API than the default one (for example
   * to map it on `/` rather than the local directory path, or to use a
   * different FS layer than the default one).
   */
  makeApi: ({
    basePath = void 0,
    fakeFs = dynamicFsLayer,
    pnpapiResolution = defaultPnpapiResolution,
    ...rest
  }) => {
    const apiRuntimeState = typeof basePath !== `undefined` ? $$SETUP_STATE(hydrateRuntimeState, basePath) : defaultRuntimeState;
    return makeApi(apiRuntimeState, {
      fakeFs,
      pnpapiResolution,
      ...rest
    });
  },
  /**
   * Will inject the specified API into the environment, monkey-patching FS. Is
   * automatically called when the hook is loaded through `--require`.
   */
  setup: (api) => {
    applyPatch(api || defaultApi, {
      fakeFs: defaultFsLayer,
      manager
    });
    dynamicFsLayer.baseFs = new NodeFS(fs);
  }
});
manager = makeManager(defaultApi, {
  fakeFs: dynamicFsLayer
});
if (module.parent && module.parent.id === `internal/preload`) {
  defaultApi.setup();
  if (module.filename) {
    delete require$$0._cache[module.filename];
  }
}
if (process.mainModule === module) {
  const reportError = (code, message, data) => {
    process.stdout.write(`${JSON.stringify([{ code, message, data }, null])}
`);
  };
  const reportSuccess = (resolution) => {
    process.stdout.write(`${JSON.stringify([null, resolution])}
`);
  };
  const processResolution = (request, issuer) => {
    try {
      reportSuccess(defaultApi.resolveRequest(request, issuer));
    } catch (error) {
      reportError(error.code, error.message, error.data);
    }
  };
  const processRequest = (data) => {
    try {
      const [request, issuer] = JSON.parse(data);
      processResolution(request, issuer);
    } catch (error) {
      reportError(`INVALID_JSON`, error.message, error.data);
    }
  };
  if (process.argv.length > 2) {
    if (process.argv.length !== 4) {
      process.stderr.write(`Usage: ${process.argv[0]} ${process.argv[1]} <request> <issuer>
`);
      process.exitCode = 64;
    } else {
      processResolution(process.argv[2], process.argv[3]);
    }
  } else {
    let buffer = ``;
    const decoder = new StringDecoder.StringDecoder();
    process.stdin.on(`data`, (chunk) => {
      buffer += decoder.write(chunk);
      do {
        const index = buffer.indexOf(`
`);
        if (index === -1)
          break;
        const line = buffer.slice(0, index);
        buffer = buffer.slice(index + 1);
        processRequest(line);
      } while (true);
    });
  }
}

module.exports = defaultApi;
